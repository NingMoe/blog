{"version":3,"sources":["../app.js"],"names":["express","require","vhost","http","https","http2","fs","Cookies","crt_token","__dirname","swig","mongoose","bodyParser","app","start_log","options","key","readFileSync","cert","engine","renderFile","set","setDefaults","cache","use","urlencoded","extended","json","limit","req","res","next","cookies","userInfo","get","token","uid","e","console","log","arr","i","push","url","path","statusCode","statusMessage","httpVersion","headers","appendFile","join","err","static","connect","createServer","listen"],"mappings":"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","file":"app.js","sourcesContent":["/*\n * 项目入口\n */\nconst express = require('express');\nconst vhost = require('vhost');\nconst http = require('http');\nconst https = require('https');\n//引入http2模块\nconst http2 = require('spdy');\nconst fs = require('fs');\nconst Cookies = require('cookies');\n// const Session = require('express-session');\nconst crt_token = require(__dirname+'/libs/ctr_token');\nconst swig = require('swig');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst app = express();\n//是否启动记录访问日志\nconst start_log = false;\nlet options = {\n    key: fs.readFileSync(__dirname+'/ssl/214483626110776.key'),\n    cert: fs.readFileSync(__dirname+'/ssl/214483626110776.pem')\n}\n\n//设置模板引擎\napp.engine('html', swig.renderFile);\n//  设置模板路径\napp.set('views', './views');\n// 注册模板\napp.set('view engine', 'html');\n// 将模板缓存设置false\nswig.setDefaults({ cache: false });\n// extends设置true表示接收的数据是数组，false表示是字符串\napp.use(bodyParser.urlencoded({ extended: true }));\n// 将提交的数据转成json,并且设置请求实体大小\napp.use(bodyParser.json({limit: '50mb'}));\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n\n// 服务器启动时默认配置/动作\napp.use(function(req, res, next) {\n    req.cookies = new Cookies(req, res);\n    req.userInfo = {};\n    //将登录后的用户信息附加到request头信息中\n    if(req.cookies.get('uid') && req.cookies.get('uid') != ''){\n        try{\n            req.token = req.cookies.get('token') ? req.cookies.get('token') :'';\n            req.uid = req.cookies.get('uid');\n        }catch (e) {\n            console.log(e);\n        }\n    }\n    if(start_log){\n        let arr = [],i='';\n        arr.push('url='+req.url);\n        arr.push('path='+req.path);\n        arr.push('statusCode='+req.statusCode);\n        arr.push('statusMessage='+req.statusMessage);\n        arr.push('httpVersion='+req.httpVersion);\n        let headers = req.headers;\n        for(i in headers){\n            arr.push(i+'='+headers[i]);\n        }\n        //将访问日志写入日志文件中\n        fs.appendFile(__dirname+'/logs/server.log',arr.join(' ')+'\\n','utf8',(err)=>{\n            if (err) throw err;\n        });\n    }\n    next();\n});\n\napp.use(vhost('images.mcloudhub.com',(req,res,next)=>{\n    // options = {\n    //     key: fs.readFileSync(__dirname+'/ssl/214517687450776.key'),\n    //     cert: fs.readFileSync(__dirname+'/ssl/214517687450776.pem')\n    // }\n    app.use('/public', express.static(__dirname + '/public'));\n    next();\n}));\n\n//设置响应头\n// app.setHeader('content-type', 'text-css');\n//设置静态文件托管\napp.use('/public', express.static(__dirname + '/public'));\napp.use('/download', express.static(__dirname + '/download'));\n//  app.use();\n// app.get('/', (req, res, next) => {\n//     //  res.send('Hello Word')\n//     res.render('index', );\n// });\n// app.use('/admin', require('./routers/admin'));\napp.use('/api', require('./routers/api'));\napp.use('/', require('./routers/main'));\napp.use('/article',require('./routers/article'));\napp.use('/setting',require('./routers/setting'));\napp.use('/photos',require('./routers/photos'));\n//设置响应头\n//  app.setHeader('content-type','text-css');\n//  app.set('*/css',(req,res,next)=>{\n//      res.render('bbody{background:#FFF;}');\n//  });\n//连接数据库\nmongoose.connect('mongodb://localhost:27017/blog', (err, res) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('mongodb connect is OK !!');\n        // 数据库连接成功后监听80/443端口\n        // app.listen(80);\n        http.createServer(app).listen(80);\n        // https.createServer(options, app).listen(443);\n        http2.createServer(options, app).listen(443);\n    }\n});\n// app.listen(8080);"]}