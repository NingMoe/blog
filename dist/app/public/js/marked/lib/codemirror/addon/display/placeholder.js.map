{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/display/placeholder.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","prev","Init","on","onBlur","onChange","off","clearPlaceholder","wrapper","getWrapperElement","className","replace","hasFocus","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","appendChild","createTextNode","getOption","display","lineSpace","insertBefore","firstChild","isEmpty","empty","lineCount","getLine"],"mappings":"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","file":"placeholder.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.className = \"CodeMirror-placeholder\";\n    elt.appendChild(document.createTextNode(cm.getOption(\"placeholder\")));\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n"]}