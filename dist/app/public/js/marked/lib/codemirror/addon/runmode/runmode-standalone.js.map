{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/runmode/runmode-standalone.js"],"names":["window","CodeMirror","splitLines","string","split","StringStream","pos","start","lineStart","prototype","eol","length","sol","peek","charAt","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","indexOf","backUp","n","column","indentation","pattern","consume","caseInsensitive","cased","str","toLowerCase","substr","slice","index","current","hideFirstChars","inner","startState","mode","a1","a2","modes","mimeModes","defineMode","name","arguments","dependencies","Array","call","defineMIME","mime","spec","resolveMode","hasOwnProperty","getMode","options","mfactory","Error","registerHelper","registerGlobalHelper","Math","min","token","stream","runMode","modespec","callback","indentUnit","nodeType","tabSize","node","col","innerHTML","text","style","appendChild","document","createElement","content","idx","size","i","sp","className","replace","createTextNode","lines","state","e","blankLine"],"mappings":"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","file":"runmode-standalone.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\nwindow.CodeMirror = {};\n\n(function() {\n\"use strict\";\n\nfunction splitLines(string){ return string.split(/\\r?\\n|\\r/); };\n\nfunction StringStream(string) {\n  this.pos = this.start = 0;\n  this.string = string;\n  this.lineStart = 0;\n}\nStringStream.prototype = {\n  eol: function() {return this.pos >= this.string.length;},\n  sol: function() {return this.pos == 0;},\n  peek: function() {return this.string.charAt(this.pos) || null;},\n  next: function() {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++);\n  },\n  eat: function(match) {\n    var ch = this.string.charAt(this.pos);\n    if (typeof match == \"string\") var ok = ch == match;\n    else var ok = ch && (match.test ? match.test(ch) : match(ch));\n    if (ok) {++this.pos; return ch;}\n  },\n  eatWhile: function(match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start;\n  },\n  eatSpace: function() {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\n    return this.pos > start;\n  },\n  skipToEnd: function() {this.pos = this.string.length;},\n  skipTo: function(ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true;}\n  },\n  backUp: function(n) {this.pos -= n;},\n  column: function() {return this.start - this.lineStart;},\n  indentation: function() {return 0;},\n  match: function(pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length;\n        return true;\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) return null;\n      if (match && consume !== false) this.pos += match[0].length;\n      return match;\n    }\n  },\n  current: function(){return this.string.slice(this.start, this.pos);},\n  hideFirstChars: function(n, inner) {\n    this.lineStart += n;\n    try { return inner(); }\n    finally { this.lineStart -= n; }\n  }\n};\nCodeMirror.StringStream = StringStream;\n\nCodeMirror.startState = function (mode, a1, a2) {\n  return mode.startState ? mode.startState(a1, a2) : true;\n};\n\nvar modes = CodeMirror.modes = {}, mimeModes = CodeMirror.mimeModes = {};\nCodeMirror.defineMode = function (name, mode) {\n  if (arguments.length > 2)\n    mode.dependencies = Array.prototype.slice.call(arguments, 2);\n  modes[name] = mode;\n};\nCodeMirror.defineMIME = function (mime, spec) { mimeModes[mime] = spec; };\nCodeMirror.resolveMode = function(spec) {\n  if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n    spec = mimeModes[spec];\n  } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n    spec = mimeModes[spec.name];\n  }\n  if (typeof spec == \"string\") return {name: spec};\n  else return spec || {name: \"null\"};\n};\nCodeMirror.getMode = function (options, spec) {\n  spec = CodeMirror.resolveMode(spec);\n  var mfactory = modes[spec.name];\n  if (!mfactory) throw new Error(\"Unknown mode: \" + spec);\n  return mfactory(options, spec);\n};\nCodeMirror.registerHelper = CodeMirror.registerGlobalHelper = Math.min;\nCodeMirror.defineMode(\"null\", function() {\n  return {token: function(stream) {stream.skipToEnd();}};\n});\nCodeMirror.defineMIME(\"text/plain\", \"null\");\n\nCodeMirror.runMode = function (string, modespec, callback, options) {\n  var mode = CodeMirror.getMode({ indentUnit: 2 }, modespec);\n\n  if (callback.nodeType == 1) {\n    var tabSize = (options && options.tabSize) || 4;\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function (text, style) {\n      if (text == \"\\n\") {\n        node.appendChild(document.createElement(\"br\"));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0; ;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n})();\n"]}