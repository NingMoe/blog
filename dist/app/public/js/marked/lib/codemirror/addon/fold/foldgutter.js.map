{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/fold/foldgutter.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","updateInViewport","State","parseOptions","on","Pos","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarksAt","i","length","__isFold","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","eachLine","mark","pos","range","setGutterMarker","vp","getViewport","operation","foldCode","rangeFinder","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"mappings":"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","file":"foldgutter.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"change\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", updateInViewport);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"change\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", updateInViewport);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarksAt(Pos(line));\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold && marks[i].find().from.line == line) return true;\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    cm.eachLine(from, to, function(line) {\n      var mark = null;\n      if (isFolded(cm, cur)) {\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize)\n          mark = marker(opts.indicatorOpen);\n      }\n      cm.setGutterMarker(line, opts.gutter, mark);\n      ++cur;\n    });\n  }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    cm.foldCode(Pos(line, 0), opts.rangeFinder);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"]}