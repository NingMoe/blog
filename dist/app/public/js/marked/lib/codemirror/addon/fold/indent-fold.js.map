{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/fold/indent-fold.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","cm","start","tabSize","getOption","firstLine","getLine","line","test","getIndent","countColumn","myIndent","lastLineInFold","i","end","lastLine","curLine","curIndent","from","Pos","length","to"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,cAAX,CAA0B,MAA1B,EAAkC,QAAlC,EAA4C,UAASC,EAAT,EAAaC,KAAb,EAAoB;AAC9D,QAAIC,UAAUF,GAAGG,SAAH,CAAa,SAAb,CAAd;AAAA,QAAuCC,YAAYJ,GAAGK,OAAH,CAAWJ,MAAMK,IAAjB,CAAnD;AACA,QAAI,CAAC,KAAKC,IAAL,CAAUH,SAAV,CAAL,EAA2B;AAC3B,QAAII,YAAY,SAAZA,SAAY,CAASF,IAAT,EAAe;AAC7B,aAAOR,WAAWW,WAAX,CAAuBH,IAAvB,EAA6B,IAA7B,EAAmCJ,OAAnC,CAAP;AACD,KAFD;AAGA,QAAIQ,WAAWF,UAAUJ,SAAV,CAAf;AACA,QAAIO,iBAAiB,IAArB;AACA;AACA;AACA,SAAK,IAAIC,IAAIX,MAAMK,IAAN,GAAa,CAArB,EAAwBO,MAAMb,GAAGc,QAAH,EAAnC,EAAkDF,KAAKC,GAAvD,EAA4D,EAAED,CAA9D,EAAiE;AAC/D,UAAIG,UAAUf,GAAGK,OAAH,CAAWO,CAAX,CAAd;AACA,UAAII,YAAYR,UAAUO,OAAV,CAAhB;AACA,UAAIC,YAAYN,QAAhB,EAA0B;AACxB;AACAC,yBAAiBC,CAAjB;AACD,OAHD,MAGO,IAAI,CAAC,KAAKL,IAAL,CAAUQ,OAAV,CAAL,EAAyB;AAC9B;AACD,OAFM,MAEA;AACL;AACA;AACA;AACD;AACF;AACD,QAAIJ,cAAJ,EAAoB,OAAO;AACzBM,YAAMnB,WAAWoB,GAAX,CAAejB,MAAMK,IAArB,EAA2BF,UAAUe,MAArC,CADmB;AAEzBC,UAAItB,WAAWoB,GAAX,CAAeP,cAAf,EAA+BX,GAAGK,OAAH,CAAWM,cAAX,EAA2BQ,MAA1D;AAFqB,KAAP;AAIrB,GA5BD;AA8BC,CAxCD","file":"indent-fold.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"indent\", function(cm, start) {\n  var tabSize = cm.getOption(\"tabSize\"), firstLine = cm.getLine(start.line);\n  if (!/\\S/.test(firstLine)) return;\n  var getIndent = function(line) {\n    return CodeMirror.countColumn(line, null, tabSize);\n  };\n  var myIndent = getIndent(firstLine);\n  var lastLineInFold = null;\n  // Go through lines until we find a line that definitely doesn't belong in\n  // the block we're folding, or to the end.\n  for (var i = start.line + 1, end = cm.lastLine(); i <= end; ++i) {\n    var curLine = cm.getLine(i);\n    var curIndent = getIndent(curLine);\n    if (curIndent > myIndent) {\n      // Lines with a greater indent are considered part of the block.\n      lastLineInFold = i;\n    } else if (!/\\S/.test(curLine)) {\n      // Empty lines might be breaks within the block we're trying to fold.\n    } else {\n      // A non-empty line at an indent equal to or less than ours marks the\n      // start of another block.\n      break;\n    }\n  }\n  if (lastLineInFold) return {\n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(lastLineInFold, cm.getLine(lastLineInFold).length)\n  };\n});\n\n});\n"]}