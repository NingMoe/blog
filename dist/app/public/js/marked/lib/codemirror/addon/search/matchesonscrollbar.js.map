{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/search/matchesonscrollbar.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineExtension","query","caseFold","options","className","SearchAnnotation","cm","annotateOptions","listenForChanges","prop","annotation","annotateScrollbar","gap","from","firstLine","to","lastLine","matches","update","findMatches","self","on","changeHandler","_cm","change","onChange","MAX_MATCHES","prototype","i","length","match","line","splice","cursor","getSearchCursor","Pos","findNext","offsetLine","changeStart","sizeChange","Math","max","startLine","endLine","changeEnd","min","newFrom","ch","newTo","clearTimeout","setTimeout","updateAfterChange","clear","off"],"mappings":"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","file":"matchesonscrollbar.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../scroll/annotatescrollbar\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../scroll/annotatescrollbar\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"showMatchesOnScrollbar\", function(query, caseFold, options) {\n    if (typeof options == \"string\") options = {className: options};\n    if (!options) options = {};\n    return new SearchAnnotation(this, query, caseFold, options);\n  });\n\n  function SearchAnnotation(cm, query, caseFold, options) {\n    this.cm = cm;\n    var annotateOptions = {listenForChanges: false};\n    for (var prop in options) annotateOptions[prop] = options[prop];\n    if (!annotateOptions.className) annotateOptions.className = \"CodeMirror-search-match\";\n    this.annotation = cm.annotateScrollbar(annotateOptions);\n    this.query = query;\n    this.caseFold = caseFold;\n    this.gap = {from: cm.firstLine(), to: cm.lastLine() + 1};\n    this.matches = [];\n    this.update = null;\n\n    this.findMatches();\n    this.annotation.update(this.matches);\n\n    var self = this;\n    cm.on(\"change\", this.changeHandler = function(_cm, change) { self.onChange(change); });\n  }\n\n  var MAX_MATCHES = 1000;\n\n  SearchAnnotation.prototype.findMatches = function() {\n    if (!this.gap) return;\n    for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      if (match.from.line >= this.gap.to) break;\n      if (match.to.line >= this.gap.from) this.matches.splice(i--, 1);\n    }\n    var cursor = this.cm.getSearchCursor(this.query, CodeMirror.Pos(this.gap.from, 0), this.caseFold);\n    while (cursor.findNext()) {\n      var match = {from: cursor.from(), to: cursor.to()};\n      if (match.from.line >= this.gap.to) break;\n      this.matches.splice(i++, 0, match);\n      if (this.matches.length > MAX_MATCHES) break;\n    }\n    this.gap = null;\n  };\n\n  function offsetLine(line, changeStart, sizeChange) {\n    if (line <= changeStart) return line;\n    return Math.max(changeStart, line + sizeChange);\n  }\n\n  SearchAnnotation.prototype.onChange = function(change) {\n    var startLine = change.from.line;\n    var endLine = CodeMirror.changeEnd(change).line;\n    var sizeChange = endLine - change.to.line;\n    if (this.gap) {\n      this.gap.from = Math.min(offsetLine(this.gap.from, startLine, sizeChange), change.from.line);\n      this.gap.to = Math.max(offsetLine(this.gap.to, startLine, sizeChange), change.from.line);\n    } else {\n      this.gap = {from: change.from.line, to: endLine + 1};\n    }\n\n    if (sizeChange) for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      var newFrom = offsetLine(match.from.line, startLine, sizeChange);\n      if (newFrom != match.from.line) match.from = CodeMirror.Pos(newFrom, match.from.ch);\n      var newTo = offsetLine(match.to.line, startLine, sizeChange);\n      if (newTo != match.to.line) match.to = CodeMirror.Pos(newTo, match.to.ch);\n    }\n    clearTimeout(this.update);\n    var self = this;\n    this.update = setTimeout(function() { self.updateAfterChange(); }, 250);\n  };\n\n  SearchAnnotation.prototype.updateAfterChange = function() {\n    this.findMatches();\n    this.annotation.update(this.matches);\n  };\n\n  SearchAnnotation.prototype.clear = function() {\n    this.cm.off(\"change\", this.changeHandler);\n    this.annotation.clear();\n  };\n});\n"]}