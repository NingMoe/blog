{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/hint/anyword-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WORD","RANGE","registerHelper","editor","options","word","range","cur","getCursor","curLine","getLine","line","end","ch","start","test","charAt","curWord","slice","list","seen","re","RegExp","source","dir","endLine","Math","min","max","firstLine","lastLine","text","m","exec","lastIndexOf","Object","prototype","hasOwnProperty","call","push","from","Pos","to"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACtB;;AAEA,MAAIC,OAAO,QAAX;AAAA,MAAqBC,QAAQ,GAA7B;;AAEAF,aAAWG,cAAX,CAA0B,MAA1B,EAAkC,SAAlC,EAA6C,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACrE,QAAIC,OAAOD,WAAWA,QAAQC,IAAnB,IAA2BL,IAAtC;AACA,QAAIM,QAAQF,WAAWA,QAAQE,KAAnB,IAA4BL,KAAxC;AACA,QAAIM,MAAMJ,OAAOK,SAAP,EAAV;AAAA,QAA8BC,UAAUN,OAAOO,OAAP,CAAeH,IAAII,IAAnB,CAAxC;AACA,QAAIC,MAAML,IAAIM,EAAd;AAAA,QAAkBC,QAAQF,GAA1B;AACA,WAAOE,SAAST,KAAKU,IAAL,CAAUN,QAAQO,MAAR,CAAeF,QAAQ,CAAvB,CAAV,CAAhB;AAAsD,QAAEA,KAAF;AAAtD,KACA,IAAIG,UAAUH,SAASF,GAAT,IAAgBH,QAAQS,KAAR,CAAcJ,KAAd,EAAqBF,GAArB,CAA9B;;AAEA,QAAIO,OAAO,EAAX;AAAA,QAAeC,OAAO,EAAtB;AACA,QAAIC,KAAK,IAAIC,MAAJ,CAAWjB,KAAKkB,MAAhB,EAAwB,GAAxB,CAAT;AACA,SAAK,IAAIC,MAAM,CAAC,CAAhB,EAAmBA,OAAO,CAA1B,EAA6BA,OAAO,CAApC,EAAuC;AACrC,UAAIb,OAAOJ,IAAII,IAAf;AAAA,UAAqBc,UAAUC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASjB,OAAOa,MAAMlB,KAAtB,EAA6BH,OAAO0B,SAAP,EAA7B,CAAT,EAA2D1B,OAAO2B,QAAP,EAA3D,IAAgFN,GAA/G;AACA,aAAOb,QAAQc,OAAf,EAAwBd,QAAQa,GAAhC,EAAqC;AACnC,YAAIO,OAAO5B,OAAOO,OAAP,CAAeC,IAAf,CAAX;AAAA,YAAiCqB,CAAjC;AACA,eAAOA,IAAIX,GAAGY,IAAH,CAAQF,IAAR,CAAX,EAA0B;AACxB,cAAIpB,QAAQJ,IAAII,IAAZ,IAAoBqB,EAAE,CAAF,MAASf,OAAjC,EAA0C;AAC1C,cAAI,CAAC,CAACA,OAAD,IAAYe,EAAE,CAAF,EAAKE,WAAL,CAAiBjB,OAAjB,EAA0B,CAA1B,KAAgC,CAA7C,KAAmD,CAACkB,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqClB,IAArC,EAA2CY,EAAE,CAAF,CAA3C,CAAxD,EAA0G;AACxGZ,iBAAKY,EAAE,CAAF,CAAL,IAAa,IAAb;AACAb,iBAAKoB,IAAL,CAAUP,EAAE,CAAF,CAAV;AACD;AACF;AACF;AACF;AACD,WAAO,EAACb,MAAMA,IAAP,EAAaqB,MAAMzC,WAAW0C,GAAX,CAAelC,IAAII,IAAnB,EAAyBG,KAAzB,CAAnB,EAAoD4B,IAAI3C,WAAW0C,GAAX,CAAelC,IAAII,IAAnB,EAAyBC,GAAzB,CAAxD,EAAP;AACD,GAxBD;AAyBD,CArCD","file":"anyword-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/, RANGE = 500;\n\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function(editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);\n    var end = cur.ch, start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n\n    var list = [], seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line), m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};\n  });\n});\n"]}