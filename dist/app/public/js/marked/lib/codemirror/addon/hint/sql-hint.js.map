{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/hint/sql-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","tables","defaultTable","keywords","CONS","QUERY_DIV","ALIAS_KEYWORD","Pos","getKeywords","editor","mode","doc","modeOption","resolveMode","getText","item","text","getItem","list","slice","i","length","shallowClone","object","result","key","hasOwnProperty","match","string","word","len","sub","substr","toUpperCase","addMatches","search","wordlist","formatter","Array","isArray","push","cleanName","name","charAt","replace","insertBackticks","nameParts","split","escaped","join","nameCompletion","cur","token","useBacktick","start","cont","unshift","getTokenAt","line","w","pop","table","findTableByAlias","columns","eachWord","lineText","f","excepted","words","convertCurToNumber","ch","Math","pow","convertNumberToCur","num","floor","toString","alias","fullQuery","getValue","aliasUpperCase","previousWord","separator","validRange","end","lastLine","getLineHandle","indexOfSeparator","indexOf","posFromIndex","prevItem","current","getCursor","_v","query","getRange","wordUpperCase","registerHelper","options","defaultTableName","from","to"],"mappings":"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","file":"sql-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/sql/sql\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/sql/sql\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var tables;\n  var defaultTable;\n  var keywords;\n  var CONS = {\n    QUERY_DIV: \";\",\n    ALIAS_KEYWORD: \"AS\"\n  };\n  var Pos = CodeMirror.Pos;\n\n  function getKeywords(editor) {\n    var mode = editor.doc.modeOption;\n    if (mode === \"sql\") mode = \"text/x-sql\";\n    return CodeMirror.resolveMode(mode).keywords;\n  }\n\n  function getText(item) {\n    return typeof item == \"string\" ? item : item.text;\n  }\n\n  function getItem(list, item) {\n    if (!list.slice) return list[item];\n    for (var i = list.length - 1; i >= 0; i--) if (getText(list[i]) == item)\n      return list[i];\n  }\n\n  function shallowClone(object) {\n    var result = {};\n    for (var key in object) if (object.hasOwnProperty(key))\n      result[key] = object[key];\n    return result;\n  }\n\n  function match(string, word) {\n    var len = string.length;\n    var sub = getText(word).substr(0, len);\n    return string.toUpperCase() === sub.toUpperCase();\n  }\n\n  function addMatches(result, search, wordlist, formatter) {\n    for (var word in wordlist) {\n      if (!wordlist.hasOwnProperty(word)) continue;\n      if (Array.isArray(wordlist)) {\n        word = wordlist[word];\n      }\n      if (match(search, word)) {\n        result.push(formatter(word));\n      }\n    }\n  }\n\n  function cleanName(name) {\n    // Get rid name from backticks(`) and preceding dot(.)\n    if (name.charAt(0) == \".\") {\n      name = name.substr(1);\n    }\n    return name.replace(/`/g, \"\");\n  }\n\n  function insertBackticks(name) {\n    var nameParts = getText(name).split(\".\");\n    for (var i = 0; i < nameParts.length; i++)\n      nameParts[i] = \"`\" + nameParts[i] + \"`\";\n    var escaped = nameParts.join(\".\");\n    if (typeof name == \"string\") return escaped;\n    name = shallowClone(name);\n    name.text = escaped;\n    return name;\n  }\n\n  function nameCompletion(cur, token, result, editor) {\n    // Try to complete table, colunm names and return start position of completion\n    var useBacktick = false;\n    var nameParts = [];\n    var start = token.start;\n    var cont = true;\n    while (cont) {\n      cont = (token.string.charAt(0) == \".\");\n      useBacktick = useBacktick || (token.string.charAt(0) == \"`\");\n\n      start = token.start;\n      nameParts.unshift(cleanName(token.string));\n\n      token = editor.getTokenAt(Pos(cur.line, token.start));\n      if (token.string == \".\") {\n        cont = true;\n        token = editor.getTokenAt(Pos(cur.line, token.start));\n      }\n    }\n\n    // Try to complete table names\n    var string = nameParts.join(\".\");\n    addMatches(result, string, tables, function(w) {\n      return useBacktick ? insertBackticks(w) : w;\n    });\n\n    // Try to complete columns from defaultTable\n    addMatches(result, string, defaultTable, function(w) {\n      return useBacktick ? insertBackticks(w) : w;\n    });\n\n    // Try to complete columns\n    string = nameParts.pop();\n    var table = nameParts.join(\".\");\n\n    // Check if table is available. If not, find table by Alias\n    if (!getItem(tables, table))\n      table = findTableByAlias(table, editor);\n\n    var columns = getItem(tables, table);\n    if (columns && Array.isArray(tables) && columns.columns)\n      columns = columns.columns;\n\n    if (columns) {\n      addMatches(result, string, columns, function(w) {\n        if (typeof w == \"string\") {\n          w = table + \".\" + w;\n        } else {\n          w = shallowClone(w);\n          w.text = table + \".\" + w.text;\n        }\n        return useBacktick ? insertBackticks(w) : w;\n      });\n    }\n\n    return start;\n  }\n\n  function eachWord(lineText, f) {\n    if (!lineText) return;\n    var excepted = /[,;]/g;\n    var words = lineText.split(\" \");\n    for (var i = 0; i < words.length; i++) {\n      f(words[i]?words[i].replace(excepted, '') : '');\n    }\n  }\n\n  function convertCurToNumber(cur) {\n    // max characters of a line is 999,999.\n    return cur.line + cur.ch / Math.pow(10, 6);\n  }\n\n  function convertNumberToCur(num) {\n    return Pos(Math.floor(num), +num.toString().split('.').pop());\n  }\n\n  function findTableByAlias(alias, editor) {\n    var doc = editor.doc;\n    var fullQuery = doc.getValue();\n    var aliasUpperCase = alias.toUpperCase();\n    var previousWord = \"\";\n    var table = \"\";\n    var separator = [];\n    var validRange = {\n      start: Pos(0, 0),\n      end: Pos(editor.lastLine(), editor.getLineHandle(editor.lastLine()).length)\n    };\n\n    //add separator\n    var indexOfSeparator = fullQuery.indexOf(CONS.QUERY_DIV);\n    while(indexOfSeparator != -1) {\n      separator.push(doc.posFromIndex(indexOfSeparator));\n      indexOfSeparator = fullQuery.indexOf(CONS.QUERY_DIV, indexOfSeparator+1);\n    }\n    separator.unshift(Pos(0, 0));\n    separator.push(Pos(editor.lastLine(), editor.getLineHandle(editor.lastLine()).text.length));\n\n    //find valid range\n    var prevItem = 0;\n    var current = convertCurToNumber(editor.getCursor());\n    for (var i=0; i< separator.length; i++) {\n      var _v = convertCurToNumber(separator[i]);\n      if (current > prevItem && current <= _v) {\n        validRange = { start: convertNumberToCur(prevItem), end: convertNumberToCur(_v) };\n        break;\n      }\n      prevItem = _v;\n    }\n\n    var query = doc.getRange(validRange.start, validRange.end, false);\n\n    for (var i = 0; i < query.length; i++) {\n      var lineText = query[i];\n      eachWord(lineText, function(word) {\n        var wordUpperCase = word.toUpperCase();\n        if (wordUpperCase === aliasUpperCase && getItem(tables, previousWord))\n          table = previousWord;\n        if (wordUpperCase !== CONS.ALIAS_KEYWORD)\n          previousWord = word;\n      });\n      if (table) break;\n    }\n    return table;\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"sql\", function(editor, options) {\n    tables = (options && options.tables) || {};\n    var defaultTableName = options && options.defaultTable;\n    defaultTable = (defaultTableName && getItem(tables, defaultTableName)) || [];\n    keywords = keywords || getKeywords(editor);\n\n    var cur = editor.getCursor();\n    var result = [];\n    var token = editor.getTokenAt(cur), start, end, search;\n    if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n\n    if (token.string.match(/^[.`\\w@]\\w*$/)) {\n      search = token.string;\n      start = token.start;\n      end = token.end;\n    } else {\n      start = end = cur.ch;\n      search = \"\";\n    }\n    if (search.charAt(0) == \".\" || search.charAt(0) == \"`\") {\n      start = nameCompletion(cur, token, result, editor);\n    } else {\n      addMatches(result, search, tables, function(w) {return w;});\n      addMatches(result, search, defaultTable, function(w) {return w;});\n      addMatches(result, search, keywords, function(w) {return w.toUpperCase();});\n    }\n\n    return {list: result, from: Pos(cur.line, start), to: Pos(cur.line, end)};\n  });\n});\n"]}