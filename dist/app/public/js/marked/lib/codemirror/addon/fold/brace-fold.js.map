{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/fold/brace-fold.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","cm","start","line","lineText","getLine","startCh","tokenType","findOpening","openCh","at","ch","pass","found","lastIndexOf","length","getTokenTypeAt","Pos","test","startToken","endToken","count","lastLine","end","endCh","outer","i","text","pos","nextOpen","indexOf","nextClose","Math","min","from","to","hasImport","firstLine","getTokenAt","string","type","e","semi","has","prev","next","clipPos","hasInclude","slice"],"mappings":"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","file":"brace-fold.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"brace\", function(cm, start) {\n  var line = start.line, lineText = cm.getLine(line);\n  var startCh, tokenType;\n\n  function findOpening(openCh) {\n    for (var at = start.ch, pass = 0;;) {\n      var found = at <= 0 ? -1 : lineText.lastIndexOf(openCh, at - 1);\n      if (found == -1) {\n        if (pass == 1) break;\n        pass = 1;\n        at = lineText.length;\n        continue;\n      }\n      if (pass == 1 && found < start.ch) break;\n      tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n      if (!/^(comment|string)/.test(tokenType)) return found + 1;\n      at = found - 1;\n    }\n  }\n\n  var startToken = \"{\", endToken = \"}\", startCh = findOpening(\"{\");\n  if (startCh == null) {\n    startToken = \"[\", endToken = \"]\";\n    startCh = findOpening(\"[\");\n  }\n\n  if (startCh == null) return;\n  var count = 1, lastLine = cm.lastLine(), end, endCh;\n  outer: for (var i = line; i <= lastLine; ++i) {\n    var text = cm.getLine(i), pos = i == line ? startCh : 0;\n    for (;;) {\n      var nextOpen = text.indexOf(startToken, pos), nextClose = text.indexOf(endToken, pos);\n      if (nextOpen < 0) nextOpen = text.length;\n      if (nextClose < 0) nextClose = text.length;\n      pos = Math.min(nextOpen, nextClose);\n      if (pos == text.length) break;\n      if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == tokenType) {\n        if (pos == nextOpen) ++count;\n        else if (!--count) { end = i; endCh = pos; break outer; }\n      }\n      ++pos;\n    }\n  }\n  if (end == null || line == end && endCh == startCh) return;\n  return {from: CodeMirror.Pos(line, startCh),\n          to: CodeMirror.Pos(end, endCh)};\n});\n\nCodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n  function hasImport(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type != \"keyword\" || start.string != \"import\") return null;\n    // Now find closing semicolon, return its position\n    for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n      var text = cm.getLine(i), semi = text.indexOf(\";\");\n      if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n    }\n  }\n\n  var start = start.line, has = hasImport(start), prev;\n  if (!has || hasImport(start - 1) || ((prev = hasImport(start - 2)) && prev.end.line == start - 1))\n    return null;\n  for (var end = has.end;;) {\n    var next = hasImport(end.line + 1);\n    if (next == null) break;\n    end = next.end;\n  }\n  return {from: cm.clipPos(CodeMirror.Pos(start, has.startCh + 1)), to: end};\n});\n\nCodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n  function hasInclude(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n  }\n\n  var start = start.line, has = hasInclude(start);\n  if (has == null || hasInclude(start - 1) != null) return null;\n  for (var end = start;;) {\n    var next = hasInclude(end + 1);\n    if (next == null) break;\n    ++end;\n  }\n  return {from: CodeMirror.Pos(start, has + 1),\n          to: cm.clipPos(CodeMirror.Pos(end))};\n});\n\n});\n"]}