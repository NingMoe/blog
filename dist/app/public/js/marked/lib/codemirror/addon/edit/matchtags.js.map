{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/edit/matchtags.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","off","doMatchTags","maybeUpdateMatch","clear","state","matchBothTags","bothTags","on","tagHit","tagOther","failedTagMatch","operation","somethingSelected","cur","getCursor","range","getViewport","from","Math","min","line","to","max","match","findMatchingTag","hit","at","open","close","markText","className","other","commands","toMatchingTag","found","extendSelection"],"mappings":"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","file":"matchtags.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../fold/xml-fold\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../fold/xml-fold\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"matchTags\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchTags);\n      cm.off(\"viewportChange\", maybeUpdateMatch);\n      clear(cm);\n    }\n    if (val) {\n      cm.state.matchBothTags = typeof val == \"object\" && val.bothTags;\n      cm.on(\"cursorActivity\", doMatchTags);\n      cm.on(\"viewportChange\", maybeUpdateMatch);\n      doMatchTags(cm);\n    }\n  });\n\n  function clear(cm) {\n    if (cm.state.tagHit) cm.state.tagHit.clear();\n    if (cm.state.tagOther) cm.state.tagOther.clear();\n    cm.state.tagHit = cm.state.tagOther = null;\n  }\n\n  function doMatchTags(cm) {\n    cm.state.failedTagMatch = false;\n    cm.operation(function() {\n      clear(cm);\n      if (cm.somethingSelected()) return;\n      var cur = cm.getCursor(), range = cm.getViewport();\n      range.from = Math.min(range.from, cur.line); range.to = Math.max(cur.line + 1, range.to);\n      var match = CodeMirror.findMatchingTag(cm, cur, range);\n      if (!match) return;\n      if (cm.state.matchBothTags) {\n        var hit = match.at == \"open\" ? match.open : match.close;\n        if (hit) cm.state.tagHit = cm.markText(hit.from, hit.to, {className: \"CodeMirror-matchingtag\"});\n      }\n      var other = match.at == \"close\" ? match.open : match.close;\n      if (other)\n        cm.state.tagOther = cm.markText(other.from, other.to, {className: \"CodeMirror-matchingtag\"});\n      else\n        cm.state.failedTagMatch = true;\n    });\n  }\n\n  function maybeUpdateMatch(cm) {\n    if (cm.state.failedTagMatch) doMatchTags(cm);\n  }\n\n  CodeMirror.commands.toMatchingTag = function(cm) {\n    var found = CodeMirror.findMatchingTag(cm, cm.getCursor());\n    if (found) {\n      var other = found.at == \"close\" ? found.open : found.close;\n      if (other) cm.extendSelection(other.to, other.from);\n    }\n  };\n});\n"]}