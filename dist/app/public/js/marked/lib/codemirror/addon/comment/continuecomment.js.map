{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/comment/continuecomment.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","modes","i","length","extendMode","blockCommentContinue","continueComment","cm","getOption","Pass","ranges","listSelections","mode","inserts","pos","head","token","getTokenAt","type","modeHere","innerMode","getMode","state","insert","blockCommentStart","end","string","indexOf","blockCommentEnd","full","getRange","Pos","line","found","ch","slice","start","test","j","lineComment","continueLineCommentEnabled","getLine","match","operation","replaceRange","from","to","opt","continueLineComment","defineOption","val","prev","Init","removeKeyMap","key","map","name","addKeyMap"],"mappings":"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","file":"continuecomment.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var modes = [\"clike\", \"css\", \"javascript\"];\n\n  for (var i = 0; i < modes.length; ++i)\n    CodeMirror.extendMode(modes[i], {blockCommentContinue: \" * \"});\n\n  function continueComment(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), mode, inserts = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head, token = cm.getTokenAt(pos);\n      if (token.type != \"comment\") return CodeMirror.Pass;\n      var modeHere = CodeMirror.innerMode(cm.getMode(), token.state).mode;\n      if (!mode) mode = modeHere;\n      else if (mode != modeHere) return CodeMirror.Pass;\n\n      var insert = null;\n      if (mode.blockCommentStart && mode.blockCommentContinue) {\n        var end = token.string.indexOf(mode.blockCommentEnd);\n        var full = cm.getRange(CodeMirror.Pos(pos.line, 0), CodeMirror.Pos(pos.line, token.end)), found;\n        if (end != -1 && end == token.string.length - mode.blockCommentEnd.length && pos.ch >= end) {\n          // Comment ended, don't continue it\n        } else if (token.string.indexOf(mode.blockCommentStart) == 0) {\n          insert = full.slice(0, token.start);\n          if (!/^\\s*$/.test(insert)) {\n            insert = \"\";\n            for (var j = 0; j < token.start; ++j) insert += \" \";\n          }\n        } else if ((found = full.indexOf(mode.blockCommentContinue)) != -1 &&\n                   found + mode.blockCommentContinue.length > token.start &&\n                   /^\\s*$/.test(full.slice(0, found))) {\n          insert = full.slice(0, found);\n        }\n        if (insert != null) insert += mode.blockCommentContinue;\n      }\n      if (insert == null && mode.lineComment && continueLineCommentEnabled(cm)) {\n        var line = cm.getLine(pos.line), found = line.indexOf(mode.lineComment);\n        if (found > -1) {\n          insert = line.slice(0, found);\n          if (/\\S/.test(insert)) insert = null;\n          else insert += mode.lineComment + line.slice(found + mode.lineComment.length).match(/^\\s*/)[0];\n        }\n      }\n      if (insert == null) return CodeMirror.Pass;\n      inserts[i] = \"\\n\" + insert;\n    }\n\n    cm.operation(function() {\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(inserts[i], ranges[i].from(), ranges[i].to(), \"+insert\");\n    });\n  }\n\n  function continueLineCommentEnabled(cm) {\n    var opt = cm.getOption(\"continueComments\");\n    if (opt && typeof opt == \"object\")\n      return opt.continueLineComment !== false;\n    return true;\n  }\n\n  CodeMirror.defineOption(\"continueComments\", null, function(cm, val, prev) {\n    if (prev && prev != CodeMirror.Init)\n      cm.removeKeyMap(\"continueComment\");\n    if (val) {\n      var key = \"Enter\";\n      if (typeof val == \"string\")\n        key = val;\n      else if (typeof val == \"object\" && val.key)\n        key = val.key;\n      var map = {name: \"continueComment\"};\n      map[key] = continueComment;\n      cm.addKeyMap(map);\n    }\n  });\n});\n"]}