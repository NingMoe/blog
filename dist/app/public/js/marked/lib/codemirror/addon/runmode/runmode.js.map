{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/runmode/runmode.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","runMode","string","modespec","callback","options","mode","getMode","defaults","ie","test","navigator","userAgent","ie_lt9","document","documentMode","nodeType","tabSize","node","col","innerHTML","text","style","appendChild","createTextNode","content","pos","idx","indexOf","slice","length","size","i","sp","createElement","className","replace","lines","splitLines","state","startState","e","stream","StringStream","blankLine","eol","token","current","start"],"mappings":"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","file":"runmode.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.runMode = function(string, modespec, callback, options) {\n  var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n  var ie = /MSIE \\d/.test(navigator.userAgent);\n  var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n\n  if (callback.nodeType == 1) {\n    var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function(text, style) {\n      if (text == \"\\n\") {\n        // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n        // Emitting a carriage return makes everything ok.\n        node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0;;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i]);\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n\n});\n"]}