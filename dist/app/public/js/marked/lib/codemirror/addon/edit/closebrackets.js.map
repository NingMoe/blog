{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/edit/closebrackets.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","DEFAULT_BRACKETS","DEFAULT_TRIPLES","DEFAULT_EXPLODE_ON_ENTER","SPACE_CHAR_REGEX","Pos","defineOption","cm","val","old","Init","removeKeyMap","pairs","triples","explode","map","buildKeymap","Enter","buildExplodeHandler","addKeyMap","charsAround","pos","str","getRange","line","ch","length","enteringString","getLine","token","getTokenAt","test","type","stream","StringStream","slice","start","type1","getMode","state","name","Backspace","getOption","Pass","ranges","listSelections","i","empty","around","head","indexOf","cur","replaceRange","closingBrackets","left","right","next","range","curType","isWordChar","operation","execCommand","sels","getSelections","replaceSelections","replaceSelection","charAt","indentLine"],"mappings":"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","file":"closebrackets.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var DEFAULT_BRACKETS = \"()[]{}''\\\"\\\"\";\n  var DEFAULT_TRIPLES = \"'\\\"\";\n  var DEFAULT_EXPLODE_ON_ENTER = \"[]{}\";\n  var SPACE_CHAR_REGEX = /\\s/;\n\n  var Pos = CodeMirror.Pos;\n\n  CodeMirror.defineOption(\"autoCloseBrackets\", false, function(cm, val, old) {\n    if (old != CodeMirror.Init && old)\n      cm.removeKeyMap(\"autoCloseBrackets\");\n    if (!val) return;\n    var pairs = DEFAULT_BRACKETS, triples = DEFAULT_TRIPLES, explode = DEFAULT_EXPLODE_ON_ENTER;\n    if (typeof val == \"string\") pairs = val;\n    else if (typeof val == \"object\") {\n      if (val.pairs != null) pairs = val.pairs;\n      if (val.triples != null) triples = val.triples;\n      if (val.explode != null) explode = val.explode;\n    }\n    var map = buildKeymap(pairs, triples);\n    if (explode) map.Enter = buildExplodeHandler(explode);\n    cm.addKeyMap(map);\n  });\n\n  function charsAround(cm, pos) {\n    var str = cm.getRange(Pos(pos.line, pos.ch - 1),\n                          Pos(pos.line, pos.ch + 1));\n    return str.length == 2 ? str : null;\n  }\n\n  // Project the token type that will exists after the given char is\n  // typed, and use it to determine whether it would cause the start\n  // of a string token.\n  function enteringString(cm, pos, ch) {\n    var line = cm.getLine(pos.line);\n    var token = cm.getTokenAt(pos);\n    if (/\\bstring2?\\b/.test(token.type)) return false;\n    var stream = new CodeMirror.StringStream(line.slice(0, pos.ch) + ch + line.slice(pos.ch), 4);\n    stream.pos = stream.start = token.start;\n    for (;;) {\n      var type1 = cm.getMode().token(stream, token.state);\n      if (stream.pos >= pos.ch + 1) return /\\bstring2?\\b/.test(type1);\n      stream.start = stream.pos;\n    }\n  }\n\n  function buildKeymap(pairs, triples) {\n    var map = {\n      name : \"autoCloseBrackets\",\n      Backspace: function(cm) {\n        if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n        var ranges = cm.listSelections();\n        for (var i = 0; i < ranges.length; i++) {\n          if (!ranges[i].empty()) return CodeMirror.Pass;\n          var around = charsAround(cm, ranges[i].head);\n          if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n        }\n        for (var i = ranges.length - 1; i >= 0; i--) {\n          var cur = ranges[i].head;\n          cm.replaceRange(\"\", Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1));\n        }\n      }\n    };\n    var closingBrackets = \"\";\n    for (var i = 0; i < pairs.length; i += 2) (function(left, right) {\n      closingBrackets += right;\n      map[\"'\" + left + \"'\"] = function(cm) {\n        if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n        var ranges = cm.listSelections(), type, next;\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i], cur = range.head, curType;\n          var next = cm.getRange(cur, Pos(cur.line, cur.ch + 1));\n          if (!range.empty()) {\n            curType = \"surround\";\n          } else if (left == right && next == right) {\n            if (cm.getRange(cur, Pos(cur.line, cur.ch + 3)) == left + left + left)\n              curType = \"skipThree\";\n            else\n              curType = \"skip\";\n          } else if (left == right && cur.ch > 1 && triples.indexOf(left) >= 0 &&\n                     cm.getRange(Pos(cur.line, cur.ch - 2), cur) == left + left &&\n                     (cur.ch <= 2 || cm.getRange(Pos(cur.line, cur.ch - 3), Pos(cur.line, cur.ch - 2)) != left)) {\n            curType = \"addFour\";\n          } else if (left == '\"' || left == \"'\") {\n            if (!CodeMirror.isWordChar(next) && enteringString(cm, cur, left)) curType = \"both\";\n            else return CodeMirror.Pass;\n          } else if (cm.getLine(cur.line).length == cur.ch || closingBrackets.indexOf(next) >= 0 || SPACE_CHAR_REGEX.test(next)) {\n            curType = \"both\";\n          } else {\n            return CodeMirror.Pass;\n          }\n          if (!type) type = curType;\n          else if (type != curType) return CodeMirror.Pass;\n        }\n\n        cm.operation(function() {\n          if (type == \"skip\") {\n            cm.execCommand(\"goCharRight\");\n          } else if (type == \"skipThree\") {\n            for (var i = 0; i < 3; i++)\n              cm.execCommand(\"goCharRight\");\n          } else if (type == \"surround\") {\n            var sels = cm.getSelections();\n            for (var i = 0; i < sels.length; i++)\n              sels[i] = left + sels[i] + right;\n            cm.replaceSelections(sels, \"around\");\n          } else if (type == \"both\") {\n            cm.replaceSelection(left + right, null);\n            cm.execCommand(\"goCharLeft\");\n          } else if (type == \"addFour\") {\n            cm.replaceSelection(left + left + left + left, \"before\");\n            cm.execCommand(\"goCharRight\");\n          }\n        });\n      };\n      if (left != right) map[\"'\" + right + \"'\"] = function(cm) {\n        var ranges = cm.listSelections();\n        for (var i = 0; i < ranges.length; i++) {\n          var range = ranges[i];\n          if (!range.empty() ||\n              cm.getRange(range.head, Pos(range.head.line, range.head.ch + 1)) != right)\n            return CodeMirror.Pass;\n        }\n        cm.execCommand(\"goCharRight\");\n      };\n    })(pairs.charAt(i), pairs.charAt(i + 1));\n    return map;\n  }\n\n  function buildExplodeHandler(pairs) {\n    return function(cm) {\n      if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n      var ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        if (!ranges[i].empty()) return CodeMirror.Pass;\n        var around = charsAround(cm, ranges[i].head);\n        if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n      }\n      cm.operation(function() {\n        cm.replaceSelection(\"\\n\\n\", null);\n        cm.execCommand(\"goCharLeft\");\n        ranges = cm.listSelections();\n        for (var i = 0; i < ranges.length; i++) {\n          var line = ranges[i].head.line;\n          cm.indentLine(line, null, true);\n          cm.indentLine(line + 1, null, true);\n        }\n      });\n    };\n  }\n});\n"]}