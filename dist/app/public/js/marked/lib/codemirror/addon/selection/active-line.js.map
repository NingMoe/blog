{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/selection/active-line.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WRAP_CLASS","BACK_CLASS","defineOption","cm","val","old","prev","Init","state","activeLines","updateActiveLines","listSelections","on","selectionChange","off","clearActiveLines","i","length","removeLineClass","sameArray","a","b","ranges","active","range","empty","line","getLineHandleVisualStart","head","push","operation","addLineClass","sel"],"mappings":"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","file":"active-line.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Because sometimes you need to style the cursor's line.\n//\n// Adds an option 'styleActiveLine' which, when enabled, gives the\n// active line's wrapping <div> the CSS class \"CodeMirror-activeline\",\n// and gives its background <div> the class \"CodeMirror-activeline-background\".\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    } else if (!val && prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n    for (var i = 0; i < a.length; i++)\n      if (a[i] != b[i]) return false;\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (!range.empty()) continue;\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function() {\n      clearActiveLines(cm);\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n      }\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});\n"]}