{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/wrap/hardwrap.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","findParagraph","cm","pos","options","startRE","paragraphStart","getHelper","start","line","first","firstLine","getLine","test","endRE","paragraphEnd","end","last","lastLine","from","to","findBreakPoint","text","column","wrapOn","killTrailingSpace","at","slice","endOfText","charAt","wrapRange","clipPos","killTrailing","changes","curLine","curNo","lines","getRange","length","leadingSpace","match","i","oldLen","spaceInserted","spaceTrimmed","firstBreak","push","bp","operation","change","replaceRange","changeEnd","defineExtension","getCursor","para","commands","wrapLines","ranges","listSelections","range","span","empty","head","paras","madeChange"],"mappings":"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","file":"hardwrap.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function findParagraph(cm, pos, options) {\n    var startRE = options.paragraphStart || cm.getHelper(pos, \"paragraphStart\");\n    for (var start = pos.line, first = cm.firstLine(); start > first; --start) {\n      var line = cm.getLine(start);\n      if (startRE && startRE.test(line)) break;\n      if (!/\\S/.test(line)) { ++start; break; }\n    }\n    var endRE = options.paragraphEnd || cm.getHelper(pos, \"paragraphEnd\");\n    for (var end = pos.line + 1, last = cm.lastLine(); end <= last; ++end) {\n      var line = cm.getLine(end);\n      if (endRE && endRE.test(line)) { ++end; break; }\n      if (!/\\S/.test(line)) break;\n    }\n    return {from: start, to: end};\n  }\n\n  function findBreakPoint(text, column, wrapOn, killTrailingSpace) {\n    for (var at = column; at > 0; --at)\n      if (wrapOn.test(text.slice(at - 1, at + 1))) break;\n    if (at == 0) at = column;\n    var endOfText = at;\n    if (killTrailingSpace)\n      while (text.charAt(endOfText - 1) == \" \") --endOfText;\n    return {from: endOfText, to: at};\n  }\n\n  function wrapRange(cm, from, to, options) {\n    from = cm.clipPos(from); to = cm.clipPos(to);\n    var column = options.column || 80;\n    var wrapOn = options.wrapOn || /\\s\\S|-[^\\.\\d]/;\n    var killTrailing = options.killTrailingSpace !== false;\n    var changes = [], curLine = \"\", curNo = from.line;\n    var lines = cm.getRange(from, to, false);\n    if (!lines.length) return null;\n    var leadingSpace = lines[0].match(/^[ \\t]*/)[0];\n\n    for (var i = 0; i < lines.length; ++i) {\n      var text = lines[i], oldLen = curLine.length, spaceInserted = 0;\n      if (curLine && text && !wrapOn.test(curLine.charAt(curLine.length - 1) + text.charAt(0))) {\n        curLine += \" \";\n        spaceInserted = 1;\n      }\n      var spaceTrimmed = \"\";\n      if (i) {\n        spaceTrimmed = text.match(/^\\s*/)[0];\n        text = text.slice(spaceTrimmed.length);\n      }\n      curLine += text;\n      if (i) {\n        var firstBreak = curLine.length > column && leadingSpace == spaceTrimmed &&\n          findBreakPoint(curLine, column, wrapOn, killTrailing);\n        // If this isn't broken, or is broken at a different point, remove old break\n        if (!firstBreak || firstBreak.from != oldLen || firstBreak.to != oldLen + spaceInserted) {\n          changes.push({text: [spaceInserted ? \" \" : \"\"],\n                        from: Pos(curNo, oldLen),\n                        to: Pos(curNo + 1, spaceTrimmed.length)});\n        } else {\n          curLine = leadingSpace + text;\n          ++curNo;\n        }\n      }\n      while (curLine.length > column) {\n        var bp = findBreakPoint(curLine, column, wrapOn, killTrailing);\n        changes.push({text: [\"\", leadingSpace],\n                      from: Pos(curNo, bp.from),\n                      to: Pos(curNo, bp.to)});\n        curLine = leadingSpace + curLine.slice(bp.to);\n        ++curNo;\n      }\n    }\n    if (changes.length) cm.operation(function() {\n      for (var i = 0; i < changes.length; ++i) {\n        var change = changes[i];\n        cm.replaceRange(change.text, change.from, change.to);\n      }\n    });\n    return changes.length ? {from: changes[0].from, to: CodeMirror.changeEnd(changes[changes.length - 1])} : null;\n  }\n\n  CodeMirror.defineExtension(\"wrapParagraph\", function(pos, options) {\n    options = options || {};\n    if (!pos) pos = this.getCursor();\n    var para = findParagraph(this, pos, options);\n    return wrapRange(this, Pos(para.from, 0), Pos(para.to - 1), options);\n  });\n\n  CodeMirror.commands.wrapLines = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), at = cm.lastLine() + 1;\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        var range = ranges[i], span;\n        if (range.empty()) {\n          var para = findParagraph(cm, range.head, {});\n          span = {from: Pos(para.from, 0), to: Pos(para.to - 1)};\n        } else {\n          span = {from: range.from(), to: range.to()};\n        }\n        if (span.to.line >= at) continue;\n        at = span.from.line;\n        wrapRange(cm, span.from, span.to, {});\n      }\n    });\n  };\n\n  CodeMirror.defineExtension(\"wrapRange\", function(from, to, options) {\n    return wrapRange(this, from, to, options || {});\n  });\n\n  CodeMirror.defineExtension(\"wrapParagraphsInRange\", function(from, to, options) {\n    options = options || {};\n    var cm = this, paras = [];\n    for (var line = from.line; line <= to.line;) {\n      var para = findParagraph(cm, Pos(line, 0), options);\n      paras.push(para);\n      line = para.to;\n    }\n    var madeChange = false;\n    if (paras.length) cm.operation(function() {\n      for (var i = paras.length - 1; i >= 0; --i)\n        madeChange = madeChange || wrapRange(cm, Pos(paras[i].from, 0), Pos(paras[i].to - 1), options);\n    });\n    return madeChange;\n  });\n});\n"]}