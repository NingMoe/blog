{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/search/searchcursor.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","SearchCursor","doc","query","pos","caseFold","atOccurrence","clipPos","from","to","global","RegExp","source","ignoreCase","matches","reverse","lastIndex","line","getLine","slice","ch","cutOff","match","start","newMatch","exec","index","length","matchLen","undefined","origQuery","toLowerCase","fold","str","target","split","orig","lastIndexOf","adjustPos","indexOf","origTarget","last","firstLine","ln","i","cut","lastLine","prototype","findNext","find","findPrevious","self","savePosAndFail","maxLine","lineCount","replace","newText","lines","splitLines","replaceRange","folded","pos1","Math","min","len1","defineExtension","defineDocExtension","ranges","next","cur","getSearchCursor","getCursor","cmpPos","push","anchor","head","setSelections"],"mappings":"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","file":"searchcursor.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n\n  function SearchCursor(doc, query, pos, caseFold) {\n    this.atOccurrence = false; this.doc = doc;\n    if (caseFold == null && typeof query == \"string\") caseFold = false;\n\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n    this.pos = {from: pos, to: pos};\n\n    // The matches method is filled in based on the type of query.\n    // It takes a position and a direction, and returns an object\n    // describing the next occurrence of the query, or null if no\n    // more matches were found.\n    if (typeof query != \"string\") { // Regexp match\n      if (!query.global) query = new RegExp(query.source, query.ignoreCase ? \"ig\" : \"g\");\n      this.matches = function(reverse, pos) {\n        if (reverse) {\n          query.lastIndex = 0;\n          var line = doc.getLine(pos.line).slice(0, pos.ch), cutOff = 0, match, start;\n          for (;;) {\n            query.lastIndex = cutOff;\n            var newMatch = query.exec(line);\n            if (!newMatch) break;\n            match = newMatch;\n            start = match.index;\n            cutOff = match.index + (match[0].length || 1);\n            if (cutOff == line.length) break;\n          }\n          var matchLen = (match && match[0].length) || 0;\n          if (!matchLen) {\n            if (start == 0 && line.length == 0) {match = undefined;}\n            else if (start != doc.getLine(pos.line).length) {\n              matchLen++;\n            }\n          }\n        } else {\n          query.lastIndex = pos.ch;\n          var line = doc.getLine(pos.line), match = query.exec(line);\n          var matchLen = (match && match[0].length) || 0;\n          var start = match && match.index;\n          if (start + matchLen != line.length && !matchLen) matchLen = 1;\n        }\n        if (match && matchLen)\n          return {from: Pos(pos.line, start),\n                  to: Pos(pos.line, start + matchLen),\n                  match: match};\n      };\n    } else { // String query\n      var origQuery = query;\n      if (caseFold) query = query.toLowerCase();\n      var fold = caseFold ? function(str){return str.toLowerCase();} : function(str){return str;};\n      var target = query.split(\"\\n\");\n      // Different methods for single-line and multi-line queries\n      if (target.length == 1) {\n        if (!query.length) {\n          // Empty string would match anything and never progress, so\n          // we define it to match nothing instead.\n          this.matches = function() {};\n        } else {\n          this.matches = function(reverse, pos) {\n            if (reverse) {\n              var orig = doc.getLine(pos.line).slice(0, pos.ch), line = fold(orig);\n              var match = line.lastIndexOf(query);\n              if (match > -1) {\n                match = adjustPos(orig, line, match);\n                return {from: Pos(pos.line, match), to: Pos(pos.line, match + origQuery.length)};\n              }\n             } else {\n               var orig = doc.getLine(pos.line).slice(pos.ch), line = fold(orig);\n               var match = line.indexOf(query);\n               if (match > -1) {\n                 match = adjustPos(orig, line, match) + pos.ch;\n                 return {from: Pos(pos.line, match), to: Pos(pos.line, match + origQuery.length)};\n               }\n            }\n          };\n        }\n      } else {\n        var origTarget = origQuery.split(\"\\n\");\n        this.matches = function(reverse, pos) {\n          var last = target.length - 1;\n          if (reverse) {\n            if (pos.line - (target.length - 1) < doc.firstLine()) return;\n            if (fold(doc.getLine(pos.line).slice(0, origTarget[last].length)) != target[target.length - 1]) return;\n            var to = Pos(pos.line, origTarget[last].length);\n            for (var ln = pos.line - 1, i = last - 1; i >= 1; --i, --ln)\n              if (target[i] != fold(doc.getLine(ln))) return;\n            var line = doc.getLine(ln), cut = line.length - origTarget[0].length;\n            if (fold(line.slice(cut)) != target[0]) return;\n            return {from: Pos(ln, cut), to: to};\n          } else {\n            if (pos.line + (target.length - 1) > doc.lastLine()) return;\n            var line = doc.getLine(pos.line), cut = line.length - origTarget[0].length;\n            if (fold(line.slice(cut)) != target[0]) return;\n            var from = Pos(pos.line, cut);\n            for (var ln = pos.line + 1, i = 1; i < last; ++i, ++ln)\n              if (target[i] != fold(doc.getLine(ln))) return;\n            if (fold(doc.getLine(ln).slice(0, origTarget[last].length)) != target[last]) return;\n            return {from: from, to: Pos(ln, origTarget[last].length)};\n          }\n        };\n      }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false);},\n    findPrevious: function() {return this.find(true);},\n\n    find: function(reverse) {\n      var self = this, pos = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      function savePosAndFail(line) {\n        var pos = Pos(line, 0);\n        self.pos = {from: pos, to: pos};\n        self.atOccurrence = false;\n        return false;\n      }\n\n      for (;;) {\n        if (this.pos = this.matches(reverse, pos)) {\n          this.atOccurrence = true;\n          return this.pos.match || true;\n        }\n        if (reverse) {\n          if (!pos.line) return savePosAndFail(0);\n          pos = Pos(pos.line-1, this.doc.getLine(pos.line-1).length);\n        }\n        else {\n          var maxLine = this.doc.lineCount();\n          if (pos.line == maxLine - 1) return savePosAndFail(maxLine);\n          pos = Pos(pos.line + 1, 0);\n        }\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from;},\n    to: function() {if (this.atOccurrence) return this.pos.to;},\n\n    replace: function(newText) {\n      if (!this.atOccurrence) return;\n      var lines = CodeMirror.splitLines(newText);\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to);\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n    }\n  };\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos) {\n    if (orig.length == folded.length) return pos;\n    for (var pos1 = Math.min(pos, orig.length);;) {\n      var len1 = orig.slice(0, pos1).toLowerCase().length;\n      if (len1 < pos) ++pos1;\n      else if (len1 > pos) --pos1;\n      else return pos1;\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold);\n  });\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold);\n  });\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = [], next;\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n    while (next = cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break;\n      ranges.push({anchor: cur.from(), head: cur.to()});\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0);\n  });\n});\n"]}