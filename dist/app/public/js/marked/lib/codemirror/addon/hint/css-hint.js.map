{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/hint/css-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","pseudoClasses","link","visited","active","hover","focus","before","after","lang","registerHelper","cm","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","name","start","end","ch","word","string","slice","test","spec","resolveMode","result","add","keywords","lastIndexOf","push","st","type","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length","list","from","Pos","line","to"],"mappings":"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","file":"css-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {link: 1, visited: 1, active: 1, hover: 1, focus: 1,\n                       \"first-letter\": 1, \"first-line\": 1, \"first-child\": 1,\n                       before: 1, after: 1, lang: 1};\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"]}