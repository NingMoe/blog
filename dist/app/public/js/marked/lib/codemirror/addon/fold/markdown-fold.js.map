{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/fold/markdown-fold.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","cm","start","maxDepth","isHeader","lineNo","tokentype","getTokenTypeAt","Pos","test","headerLevel","line","nextLine","match","length","firstLine","getLine","level","undefined","lastLineNo","lastLine","end","nextNextLine","from","to"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,cAAX,CAA0B,MAA1B,EAAkC,UAAlC,EAA8C,UAASC,EAAT,EAAaC,KAAb,EAAoB;AAChE,QAAIC,WAAW,GAAf;;AAEA,aAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,UAAIC,YAAYL,GAAGM,cAAH,CAAkBR,WAAWS,GAAX,CAAeH,MAAf,EAAuB,CAAvB,CAAlB,CAAhB;AACA,aAAOC,aAAa,aAAaG,IAAb,CAAkBH,SAAlB,CAApB;AACD;;AAED,aAASI,WAAT,CAAqBL,MAArB,EAA6BM,IAA7B,EAAmCC,QAAnC,EAA6C;AAC3C,UAAIC,QAAQF,QAAQA,KAAKE,KAAL,CAAW,KAAX,CAApB;AACA,UAAIA,SAAST,SAASC,MAAT,CAAb,EAA+B,OAAOQ,MAAM,CAAN,EAASC,MAAhB;AAC/BD,cAAQD,YAAYA,SAASC,KAAT,CAAe,aAAf,CAApB;AACA,UAAIA,SAAST,SAASC,SAAS,CAAlB,CAAb,EAAmC,OAAOO,SAAS,CAAT,KAAe,GAAf,GAAqB,CAArB,GAAyB,CAAhC;AACnC,aAAOT,QAAP;AACD;;AAED,QAAIY,YAAYd,GAAGe,OAAH,CAAWd,MAAMS,IAAjB,CAAhB;AAAA,QAAwCC,WAAWX,GAAGe,OAAH,CAAWd,MAAMS,IAAN,GAAa,CAAxB,CAAnD;AACA,QAAIM,QAAQP,YAAYR,MAAMS,IAAlB,EAAwBI,SAAxB,EAAmCH,QAAnC,CAAZ;AACA,QAAIK,UAAUd,QAAd,EAAwB,OAAOe,SAAP;;AAExB,QAAIC,aAAalB,GAAGmB,QAAH,EAAjB;AACA,QAAIC,MAAMnB,MAAMS,IAAhB;AAAA,QAAsBW,eAAerB,GAAGe,OAAH,CAAWK,MAAM,CAAjB,CAArC;AACA,WAAOA,MAAMF,UAAb,EAAyB;AACvB,UAAIT,YAAYW,MAAM,CAAlB,EAAqBT,QAArB,EAA+BU,YAA/B,KAAgDL,KAApD,EAA2D;AAC3D,QAAEI,GAAF;AACAT,iBAAWU,YAAX;AACAA,qBAAerB,GAAGe,OAAH,CAAWK,MAAM,CAAjB,CAAf;AACD;;AAED,WAAO;AACLE,YAAMxB,WAAWS,GAAX,CAAeN,MAAMS,IAArB,EAA2BI,UAAUD,MAArC,CADD;AAELU,UAAIzB,WAAWS,GAAX,CAAea,GAAf,EAAoBpB,GAAGe,OAAH,CAAWK,GAAX,EAAgBP,MAApC;AAFC,KAAP;AAID,GAjCD;AAmCC,CA7CD","file":"markdown-fold.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"markdown\", function(cm, start) {\n  var maxDepth = 100;\n\n  function isHeader(lineNo) {\n    var tokentype = cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0));\n    return tokentype && /\\bheader\\b/.test(tokentype);\n  }\n\n  function headerLevel(lineNo, line, nextLine) {\n    var match = line && line.match(/^#+/);\n    if (match && isHeader(lineNo)) return match[0].length;\n    match = nextLine && nextLine.match(/^[=\\-]+\\s*$/);\n    if (match && isHeader(lineNo + 1)) return nextLine[0] == \"=\" ? 1 : 2;\n    return maxDepth;\n  }\n\n  var firstLine = cm.getLine(start.line), nextLine = cm.getLine(start.line + 1);\n  var level = headerLevel(start.line, firstLine, nextLine);\n  if (level === maxDepth) return undefined;\n\n  var lastLineNo = cm.lastLine();\n  var end = start.line, nextNextLine = cm.getLine(end + 2);\n  while (end < lastLineNo) {\n    if (headerLevel(end + 1, nextLine, nextNextLine) <= level) break;\n    ++end;\n    nextLine = nextNextLine;\n    nextNextLine = cm.getLine(end + 2);\n  }\n\n  return {\n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(end, cm.getLine(end).length)\n  };\n});\n\n});\n"]}