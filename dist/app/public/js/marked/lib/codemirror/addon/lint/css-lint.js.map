{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/lint/css-lint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","text","found","window","CSSLint","results","verify","messages","message","i","length","startLine","line","endLine","startCol","col","endCol","push","from","Pos","to","severity","type"],"mappings":";;;;AAAA;AACA;;AAEA;;AAEA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,cAAX,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,UAASC,IAAT,EAAe;AACtD,QAAIC,QAAQ,EAAZ;AACA,QAAI,CAACC,OAAOC,OAAZ,EAAqB,OAAOF,KAAP;AACrB,QAAIG,UAAUD,QAAQE,MAAR,CAAeL,IAAf,CAAd;AAAA,QAAoCM,WAAWF,QAAQE,QAAvD;AAAA,QAAiEC,UAAU,IAA3E;AACA,SAAM,IAAIC,IAAI,CAAd,EAAiBA,IAAIF,SAASG,MAA9B,EAAsCD,GAAtC,EAA2C;AACzCD,gBAAUD,SAASE,CAAT,CAAV;AACA,UAAIE,YAAYH,QAAQI,IAAR,GAAc,CAA9B;AAAA,UAAiCC,UAAUL,QAAQI,IAAR,GAAc,CAAzD;AAAA,UAA4DE,WAAWN,QAAQO,GAAR,GAAa,CAApF;AAAA,UAAuFC,SAASR,QAAQO,GAAxG;AACAb,YAAMe,IAAN,CAAW;AACTC,cAAMnB,WAAWoB,GAAX,CAAeR,SAAf,EAA0BG,QAA1B,CADG;AAETM,YAAIrB,WAAWoB,GAAX,CAAeN,OAAf,EAAwBG,MAAxB,CAFK;AAGTR,iBAASA,QAAQA,OAHR;AAITa,kBAAWb,QAAQc;AAJV,OAAX;AAMD;AACD,WAAOpB,KAAP;AACD,GAfD;AAiBC,CA3BD","file":"css-lint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Depends on csslint.js from https://github.com/stubbornella/csslint\n\n// declare global: CSSLint\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"lint\", \"css\", function(text) {\n  var found = [];\n  if (!window.CSSLint) return found;\n  var results = CSSLint.verify(text), messages = results.messages, message = null;\n  for ( var i = 0; i < messages.length; i++) {\n    message = messages[i];\n    var startLine = message.line -1, endLine = message.line -1, startCol = message.col -1, endCol = message.col;\n    found.push({\n      from: CodeMirror.Pos(startLine, startCol),\n      to: CodeMirror.Pos(endLine, endCol),\n      message: message.message,\n      severity : message.type\n    });\n  }\n  return found;\n});\n\n});\n"]}