{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/mode/loadmode.js"],"names":["mod","exports","module","require","define","amd","CM","CodeMirror","env","modeURL","loading","splitCallback","cont","n","countDown","ensureDeps","mode","deps","modes","dependencies","missing","i","length","hasOwnProperty","push","split","requireMode","name","file","replace","script","document","createElement","src","others","getElementsByTagName","list","on","parentNode","insertBefore","requirejs","autoLoadMode","instance","setOption","getOption"],"mappings":"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","file":"loadmode.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), \"cjs\");\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], function(CM) { mod(CM, \"amd\"); });\n  else // Plain browser env\n    mod(CodeMirror, \"plain\");\n})(function(CodeMirror, env) {\n  if (!CodeMirror.modeURL) CodeMirror.modeURL = \"../mode/%N/%N.js\";\n\n  var loading = {};\n  function splitCallback(cont, n) {\n    var countDown = n;\n    return function() { if (--countDown == 0) cont(); };\n  }\n  function ensureDeps(mode, cont) {\n    var deps = CodeMirror.modes[mode].dependencies;\n    if (!deps) return cont();\n    var missing = [];\n    for (var i = 0; i < deps.length; ++i) {\n      if (!CodeMirror.modes.hasOwnProperty(deps[i]))\n        missing.push(deps[i]);\n    }\n    if (!missing.length) return cont();\n    var split = splitCallback(cont, missing.length);\n    for (var i = 0; i < missing.length; ++i)\n      CodeMirror.requireMode(missing[i], split);\n  }\n\n  CodeMirror.requireMode = function(mode, cont) {\n    if (typeof mode != \"string\") mode = mode.name;\n    if (CodeMirror.modes.hasOwnProperty(mode)) return ensureDeps(mode, cont);\n    if (loading.hasOwnProperty(mode)) return loading[mode].push(cont);\n\n    var file = CodeMirror.modeURL.replace(/%N/g, mode);\n    if (env == \"plain\") {\n      var script = document.createElement(\"script\");\n      script.src = file;\n      var others = document.getElementsByTagName(\"script\")[0];\n      var list = loading[mode] = [cont];\n      CodeMirror.on(script, \"load\", function() {\n        ensureDeps(mode, function() {\n          for (var i = 0; i < list.length; ++i) list[i]();\n        });\n      });\n      others.parentNode.insertBefore(script, others);\n    } else if (env == \"cjs\") {\n      require(file);\n      cont();\n    } else if (env == \"amd\") {\n      requirejs([file], cont);\n    }\n  };\n\n  CodeMirror.autoLoadMode = function(instance, mode) {\n    if (!CodeMirror.modes.hasOwnProperty(mode))\n      CodeMirror.requireMode(mode, function() {\n        instance.setOption(\"mode\", instance.getOption(\"mode\"));\n      });\n  };\n});\n"]}