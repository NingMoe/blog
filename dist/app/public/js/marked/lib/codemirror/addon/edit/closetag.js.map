{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/edit/closetag.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","removeKeyMap","map","name","whenClosing","autoCloseSlash","whenOpening","autoCloseGT","addKeyMap","htmlDontClose","htmlIndent","getOption","Pass","ranges","listSelections","replacements","i","length","empty","pos","head","tok","getTokenAt","inner","innerMode","getMode","state","mode","tagName","opt","html","configuration","dontCloseTags","indentTags","end","ch","slice","lowerTagName","toLowerCase","type","test","string","charAt","indexOf","closingTagExists","indent","text","newPos","Pos","line","info","replaceRange","anchor","sel","setSelections","indentLine","autoCloseCurrent","typingSlash","start","context","replaceSelections","commands","closeTag","collection","elt","e","newTag","scanForClosingTag","Math","min","lastLine","nextClose","tag","cx","onCx","prev","to","next"],"mappings":"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","file":"closetag.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Tag-closer extension for CodeMirror.\n *\n * This extension adds an \"autoCloseTags\" option that can be set to\n * either true to get the default behavior, or an object to further\n * configure its behavior.\n *\n * These are supported options:\n *\n * `whenClosing` (default true)\n *   Whether to autoclose when the '/' of a closing tag is typed.\n * `whenOpening` (default true)\n *   Whether to autoclose the tag when the final '>' of an opening\n *   tag is typed.\n * `dontCloseTags` (default is empty tags for HTML, none for XML)\n *   An array of tag names that should not be autoclosed.\n * `indentTags` (default is block tags for HTML, none for XML)\n *   An array of tag names that should, when opened, cause a\n *   blank line to be added inside the tag, and the blank line and\n *   closing line to be indented.\n *\n * See demos/closetag.html for a usage example.\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../fold/xml-fold\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../fold/xml-fold\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"autoCloseTags\", false, function(cm, val, old) {\n    if (old != CodeMirror.Init && old)\n      cm.removeKeyMap(\"autoCloseTags\");\n    if (!val) return;\n    var map = {name: \"autoCloseTags\"};\n    if (typeof val != \"object\" || val.whenClosing)\n      map[\"'/'\"] = function(cm) { return autoCloseSlash(cm); };\n    if (typeof val != \"object\" || val.whenOpening)\n      map[\"'>'\"] = function(cm) { return autoCloseGT(cm); };\n    cm.addKeyMap(map);\n  });\n\n  var htmlDontClose = [\"area\", \"base\", \"br\", \"col\", \"command\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"param\",\n                       \"source\", \"track\", \"wbr\"];\n  var htmlIndent = [\"applet\", \"blockquote\", \"body\", \"button\", \"div\", \"dl\", \"fieldset\", \"form\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\",\n                    \"h5\", \"h6\", \"head\", \"html\", \"iframe\", \"layer\", \"legend\", \"object\", \"ol\", \"p\", \"select\", \"table\", \"ul\"];\n\n  function autoCloseGT(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var pos = ranges[i].head, tok = cm.getTokenAt(pos);\n      var inner = CodeMirror.innerMode(cm.getMode(), tok.state), state = inner.state;\n      if (inner.mode.name != \"xml\" || !state.tagName) return CodeMirror.Pass;\n\n      var opt = cm.getOption(\"autoCloseTags\"), html = inner.mode.configuration == \"html\";\n      var dontCloseTags = (typeof opt == \"object\" && opt.dontCloseTags) || (html && htmlDontClose);\n      var indentTags = (typeof opt == \"object\" && opt.indentTags) || (html && htmlIndent);\n\n      var tagName = state.tagName;\n      if (tok.end > pos.ch) tagName = tagName.slice(0, tagName.length - tok.end + pos.ch);\n      var lowerTagName = tagName.toLowerCase();\n      // Don't process the '>' at the end of an end-tag or self-closing tag\n      if (!tagName ||\n          tok.type == \"string\" && (tok.end != pos.ch || !/[\\\"\\']/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length == 1) ||\n          tok.type == \"tag\" && state.type == \"closeTag\" ||\n          tok.string.indexOf(\"/\") == (tok.string.length - 1) || // match something like <someTagName />\n          dontCloseTags && indexOf(dontCloseTags, lowerTagName) > -1 ||\n          closingTagExists(cm, tagName, pos, state, true))\n        return CodeMirror.Pass;\n\n      var indent = indentTags && indexOf(indentTags, lowerTagName) > -1;\n      replacements[i] = {indent: indent,\n                         text: \">\" + (indent ? \"\\n\\n\" : \"\") + \"</\" + tagName + \">\",\n                         newPos: indent ? CodeMirror.Pos(pos.line + 1, 0) : CodeMirror.Pos(pos.line, pos.ch + 1)};\n    }\n\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var info = replacements[i];\n      cm.replaceRange(info.text, ranges[i].head, ranges[i].anchor, \"+insert\");\n      var sel = cm.listSelections().slice(0);\n      sel[i] = {head: info.newPos, anchor: info.newPos};\n      cm.setSelections(sel);\n      if (info.indent) {\n        cm.indentLine(info.newPos.line, null, true);\n        cm.indentLine(info.newPos.line + 1, null, true);\n      }\n    }\n  }\n\n  function autoCloseCurrent(cm, typingSlash) {\n    var ranges = cm.listSelections(), replacements = [];\n    var head = typingSlash ? \"/\" : \"</\";\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var pos = ranges[i].head, tok = cm.getTokenAt(pos);\n      var inner = CodeMirror.innerMode(cm.getMode(), tok.state), state = inner.state;\n      if (typingSlash && (tok.type == \"string\" || tok.string.charAt(0) != \"<\" ||\n                          tok.start != pos.ch - 1))\n        return CodeMirror.Pass;\n      // Kludge to get around the fact that we are not in XML mode\n      // when completing in JS/CSS snippet in htmlmixed mode. Does not\n      // work for other XML embedded languages (there is no general\n      // way to go from a mixed mode to its current XML state).\n      if (inner.mode.name != \"xml\") {\n        if (cm.getMode().name == \"htmlmixed\" && inner.mode.name == \"javascript\")\n          replacements[i] = head + \"script>\";\n        else if (cm.getMode().name == \"htmlmixed\" && inner.mode.name == \"css\")\n          replacements[i] = head + \"style>\";\n        else\n          return CodeMirror.Pass;\n      } else {\n        if (!state.context || !state.context.tagName ||\n            closingTagExists(cm, state.context.tagName, pos, state))\n          return CodeMirror.Pass;\n        replacements[i] = head + state.context.tagName + \">\";\n      }\n    }\n    cm.replaceSelections(replacements);\n    ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++)\n      if (i == ranges.length - 1 || ranges[i].head.line < ranges[i + 1].head.line)\n        cm.indentLine(ranges[i].head.line);\n  }\n\n  function autoCloseSlash(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    return autoCloseCurrent(cm, true);\n  }\n\n  CodeMirror.commands.closeTag = function(cm) { return autoCloseCurrent(cm); };\n\n  function indexOf(collection, elt) {\n    if (collection.indexOf) return collection.indexOf(elt);\n    for (var i = 0, e = collection.length; i < e; ++i)\n      if (collection[i] == elt) return i;\n    return -1;\n  }\n\n  // If xml-fold is loaded, we use its functionality to try and verify\n  // whether a given tag is actually unclosed.\n  function closingTagExists(cm, tagName, pos, state, newTag) {\n    if (!CodeMirror.scanForClosingTag) return false;\n    var end = Math.min(cm.lastLine() + 1, pos.line + 500);\n    var nextClose = CodeMirror.scanForClosingTag(cm, pos, null, end);\n    if (!nextClose || nextClose.tag != tagName) return false;\n    var cx = state.context;\n    // If the immediate wrapping context contains onCx instances of\n    // the same tag, a closing tag only exists if there are at least\n    // that many closing tags of that type following.\n    for (var onCx = newTag ? 1 : 0; cx && cx.tagName == tagName; cx = cx.prev) ++onCx;\n    pos = nextClose.to;\n    for (var i = 1; i < onCx; i++) {\n      var next = CodeMirror.scanForClosingTag(cm, pos, null, end);\n      if (!next || next.tag != tagName) return false;\n      pos = next.to;\n    }\n    return true;\n  }\n});\n"]}