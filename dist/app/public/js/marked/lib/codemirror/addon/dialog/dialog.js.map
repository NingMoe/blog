{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/dialog/dialog.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","dialogDiv","cm","template","bottom","wrap","getWrapperElement","dialog","appendChild","document","createElement","className","innerHTML","closeNotification","newVal","state","currentNotificationClose","defineExtension","callback","options","closed","me","close","inp","value","parentNode","removeChild","focus","onClose","getElementsByTagName","button","select","onInput","on","e","onKeyUp","onKeyDown","keyCode","closeOnEnter","blur","e_stop","closeOnBlur","callbacks","buttons","blurring","i","length","b","e_preventDefault","setTimeout","doneTimer","duration","clearTimeout"],"mappings":"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","file":"dialog.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Open simple dialogs on top of an editor. Relies on dialog.css.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  function dialogDiv(cm, template, bottom) {\n    var wrap = cm.getWrapperElement();\n    var dialog;\n    dialog = wrap.appendChild(document.createElement(\"div\"));\n    if (bottom)\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-bottom\";\n    else\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-top\";\n\n    if (typeof template == \"string\") {\n      dialog.innerHTML = template;\n    } else { // Assuming it's a detached DOM element.\n      dialog.appendChild(template);\n    }\n    return dialog;\n  }\n\n  function closeNotification(cm, newVal) {\n    if (cm.state.currentNotificationClose)\n      cm.state.currentNotificationClose();\n    cm.state.currentNotificationClose = newVal;\n  }\n\n  CodeMirror.defineExtension(\"openDialog\", function(template, callback, options) {\n    if (!options) options = {};\n\n    closeNotification(this, null);\n\n    var dialog = dialogDiv(this, template, options.bottom);\n    var closed = false, me = this;\n    function close(newVal) {\n      if (typeof newVal == 'string') {\n        inp.value = newVal;\n      } else {\n        if (closed) return;\n        closed = true;\n        dialog.parentNode.removeChild(dialog);\n        me.focus();\n\n        if (options.onClose) options.onClose(dialog);\n      }\n    }\n\n    var inp = dialog.getElementsByTagName(\"input\")[0], button;\n    if (inp) {\n      if (options.value) {\n        inp.value = options.value;\n        inp.select();\n      }\n\n      if (options.onInput)\n        CodeMirror.on(inp, \"input\", function(e) { options.onInput(e, inp.value, close);});\n      if (options.onKeyUp)\n        CodeMirror.on(inp, \"keyup\", function(e) {options.onKeyUp(e, inp.value, close);});\n\n      CodeMirror.on(inp, \"keydown\", function(e) {\n        if (options && options.onKeyDown && options.onKeyDown(e, inp.value, close)) { return; }\n        if (e.keyCode == 27 || (options.closeOnEnter !== false && e.keyCode == 13)) {\n          inp.blur();\n          CodeMirror.e_stop(e);\n          close();\n        }\n        if (e.keyCode == 13) callback(inp.value, e);\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(inp, \"blur\", close);\n\n      inp.focus();\n    } else if (button = dialog.getElementsByTagName(\"button\")[0]) {\n      CodeMirror.on(button, \"click\", function() {\n        close();\n        me.focus();\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(button, \"blur\", close);\n\n      button.focus();\n    }\n    return close;\n  });\n\n  CodeMirror.defineExtension(\"openConfirm\", function(template, callbacks, options) {\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var buttons = dialog.getElementsByTagName(\"button\");\n    var closed = false, me = this, blurring = 1;\n    function close() {\n      if (closed) return;\n      closed = true;\n      dialog.parentNode.removeChild(dialog);\n      me.focus();\n    }\n    buttons[0].focus();\n    for (var i = 0; i < buttons.length; ++i) {\n      var b = buttons[i];\n      (function(callback) {\n        CodeMirror.on(b, \"click\", function(e) {\n          CodeMirror.e_preventDefault(e);\n          close();\n          if (callback) callback(me);\n        });\n      })(callbacks[i]);\n      CodeMirror.on(b, \"blur\", function() {\n        --blurring;\n        setTimeout(function() { if (blurring <= 0) close(); }, 200);\n      });\n      CodeMirror.on(b, \"focus\", function() { ++blurring; });\n    }\n  });\n\n  /*\n   * openNotification\n   * Opens a notification, that can be closed with an optional timer\n   * (default 5000ms timer) and always closes on click.\n   *\n   * If a notification is opened while another is opened, it will close the\n   * currently opened one and open the new one immediately.\n   */\n  CodeMirror.defineExtension(\"openNotification\", function(template, options) {\n    closeNotification(this, close);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var closed = false, doneTimer;\n    var duration = options && typeof options.duration !== \"undefined\" ? options.duration : 5000;\n\n    function close() {\n      if (closed) return;\n      closed = true;\n      clearTimeout(doneTimer);\n      dialog.parentNode.removeChild(dialog);\n    }\n\n    CodeMirror.on(dialog, 'click', function(e) {\n      CodeMirror.e_preventDefault(e);\n      close();\n    });\n\n    if (duration)\n      doneTimer = setTimeout(close, duration);\n\n    return close;\n  });\n});\n"]}