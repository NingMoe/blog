{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/lint/coffeescript-lint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","text","found","parseError","err","loc","lineNumber","push","from","Pos","to","severity","level","message","res","coffeelint","lint","i","length","e","location","first_line","last_line","last_column"],"mappings":";;;;AAAA;AACA;;AAEA;;AAEA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,cAAX,CAA0B,MAA1B,EAAkC,cAAlC,EAAkD,UAASC,IAAT,EAAe;AAC/D,QAAIC,QAAQ,EAAZ;AACA,QAAIC,aAAa,SAAbA,UAAa,CAASC,GAAT,EAAc;AAC7B,UAAIC,MAAMD,IAAIE,UAAd;AACAJ,YAAMK,IAAN,CAAW,EAACC,MAAMT,WAAWU,GAAX,CAAeJ,MAAI,CAAnB,EAAsB,CAAtB,CAAP;AACCK,YAAIX,WAAWU,GAAX,CAAeJ,GAAf,EAAoB,CAApB,CADL;AAECM,kBAAUP,IAAIQ,KAFf;AAGCC,iBAAST,IAAIS,OAHd,EAAX;AAID,KAND;AAOA,QAAI;AACF,UAAIC,MAAMC,WAAWC,IAAX,CAAgBf,IAAhB,CAAV;AACA,WAAI,IAAIgB,IAAI,CAAZ,EAAeA,IAAIH,IAAII,MAAvB,EAA+BD,GAA/B,EAAoC;AAClCd,mBAAWW,IAAIG,CAAJ,CAAX;AACD;AACF,KALD,CAKE,OAAME,CAAN,EAAS;AACTjB,YAAMK,IAAN,CAAW,EAACC,MAAMT,WAAWU,GAAX,CAAeU,EAAEC,QAAF,CAAWC,UAA1B,EAAsC,CAAtC,CAAP;AACCX,YAAIX,WAAWU,GAAX,CAAeU,EAAEC,QAAF,CAAWE,SAA1B,EAAqCH,EAAEC,QAAF,CAAWG,WAAhD,CADL;AAECZ,kBAAU,OAFX;AAGCE,iBAASM,EAAEN,OAHZ,EAAX;AAID;AACD,WAAOX,KAAP;AACD,GArBD;AAuBC,CAjCD","file":"coffeescript-lint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Depends on coffeelint.js from http://www.coffeelint.org/js/coffeelint.js\n\n// declare global: coffeelint\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"lint\", \"coffeescript\", function(text) {\n  var found = [];\n  var parseError = function(err) {\n    var loc = err.lineNumber;\n    found.push({from: CodeMirror.Pos(loc-1, 0),\n                to: CodeMirror.Pos(loc, 0),\n                severity: err.level,\n                message: err.message});\n  };\n  try {\n    var res = coffeelint.lint(text);\n    for(var i = 0; i < res.length; i++) {\n      parseError(res[i]);\n    }\n  } catch(e) {\n    found.push({from: CodeMirror.Pos(e.location.first_line, 0),\n                to: CodeMirror.Pos(e.location.last_line, e.location.last_column),\n                severity: 'error',\n                message: e.message});\n  }\n  return found;\n});\n\n});\n"]}