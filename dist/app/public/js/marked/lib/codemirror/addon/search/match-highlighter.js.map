{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/search/match-highlighter.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","DEFAULT_MIN_CHARS","DEFAULT_TOKEN_STYLE","DEFAULT_DELAY","DEFAULT_WORDS_ONLY","State","options","minChars","style","showToken","delay","wordsOnly","overlay","timeout","defineOption","cm","val","old","Init","over","state","matchHighlighter","removeOverlay","clearTimeout","off","cursorActivity","highlightMatches","on","setTimeout","operation","somethingSelected","re","cur","getCursor","line","getLine","start","ch","end","test","charAt","length","addOverlay","makeOverlay","slice","from","to","isWord","selection","getRange","replace","str","match","pos","chr","boundariesAround","stream","string","query","hasBoundary","token","next","skipTo","skipToEnd"],"mappings":"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","file":"match-highlighter.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Highlighting text that matches the selection\n//\n// Defines an option highlightSelectionMatches, which, when enabled,\n// will style strings that match the selection throughout the\n// document.\n//\n// The option can be set to true to simply enable it, or to a\n// {minChars, style, wordsOnly, showToken, delay} object to explicitly\n// configure it. minChars is the minimum amount of characters that should be\n// selected for the behavior to occur, and style is the token style to\n// apply to the matches. This will be prefixed by \"cm-\" to create an\n// actual CSS class name. If wordsOnly is enabled, the matches will be\n// highlighted only if the selected text is a word. showToken, when enabled,\n// will cause the current token to be highlighted when nothing is selected.\n// delay is used to specify how much time to wait, in milliseconds, before\n// highlighting the matches.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var DEFAULT_MIN_CHARS = 2;\n  var DEFAULT_TOKEN_STYLE = \"matchhighlight\";\n  var DEFAULT_DELAY = 100;\n  var DEFAULT_WORDS_ONLY = false;\n\n  function State(options) {\n    if (typeof options == \"object\") {\n      this.minChars = options.minChars;\n      this.style = options.style;\n      this.showToken = options.showToken;\n      this.delay = options.delay;\n      this.wordsOnly = options.wordsOnly;\n    }\n    if (this.style == null) this.style = DEFAULT_TOKEN_STYLE;\n    if (this.minChars == null) this.minChars = DEFAULT_MIN_CHARS;\n    if (this.delay == null) this.delay = DEFAULT_DELAY;\n    if (this.wordsOnly == null) this.wordsOnly = DEFAULT_WORDS_ONLY;\n    this.overlay = this.timeout = null;\n  }\n\n  CodeMirror.defineOption(\"highlightSelectionMatches\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      var over = cm.state.matchHighlighter.overlay;\n      if (over) cm.removeOverlay(over);\n      clearTimeout(cm.state.matchHighlighter.timeout);\n      cm.state.matchHighlighter = null;\n      cm.off(\"cursorActivity\", cursorActivity);\n    }\n    if (val) {\n      cm.state.matchHighlighter = new State(val);\n      highlightMatches(cm);\n      cm.on(\"cursorActivity\", cursorActivity);\n    }\n  });\n\n  function cursorActivity(cm) {\n    var state = cm.state.matchHighlighter;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function() {highlightMatches(cm);}, state.delay);\n  }\n\n  function highlightMatches(cm) {\n    cm.operation(function() {\n      var state = cm.state.matchHighlighter;\n      if (state.overlay) {\n        cm.removeOverlay(state.overlay);\n        state.overlay = null;\n      }\n      if (!cm.somethingSelected() && state.showToken) {\n        var re = state.showToken === true ? /[\\w$]/ : state.showToken;\n        var cur = cm.getCursor(), line = cm.getLine(cur.line), start = cur.ch, end = start;\n        while (start && re.test(line.charAt(start - 1))) --start;\n        while (end < line.length && re.test(line.charAt(end))) ++end;\n        if (start < end)\n          cm.addOverlay(state.overlay = makeOverlay(line.slice(start, end), re, state.style));\n        return;\n      }\n      var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n      if (from.line != to.line) return;\n      if (state.wordsOnly && !isWord(cm, from, to)) return;\n      var selection = cm.getRange(from, to).replace(/^\\s+|\\s+$/g, \"\");\n      if (selection.length >= state.minChars)\n        cm.addOverlay(state.overlay = makeOverlay(selection, false, state.style));\n    });\n  }\n\n  function isWord(cm, from, to) {\n    var str = cm.getRange(from, to);\n    if (str.match(/^\\w+$/) !== null) {\n        if (from.ch > 0) {\n            var pos = {line: from.line, ch: from.ch - 1};\n            var chr = cm.getRange(pos, from);\n            if (chr.match(/\\W/) === null) return false;\n        }\n        if (to.ch < cm.getLine(from.line).length) {\n            var pos = {line: to.line, ch: to.ch + 1};\n            var chr = cm.getRange(to, pos);\n            if (chr.match(/\\W/) === null) return false;\n        }\n        return true;\n    } else return false;\n  }\n\n  function boundariesAround(stream, re) {\n    return (!stream.start || !re.test(stream.string.charAt(stream.start - 1))) &&\n      (stream.pos == stream.string.length || !re.test(stream.string.charAt(stream.pos)));\n  }\n\n  function makeOverlay(query, hasBoundary, style) {\n    return {token: function(stream) {\n      if (stream.match(query) &&\n          (!hasBoundary || boundariesAround(stream, hasBoundary)))\n        return style;\n      stream.next();\n      stream.skipTo(query.charAt(0)) || stream.skipToEnd();\n    }};\n  }\n});\n"]}