{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/edit/continuelist.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","listRE","emptyListRE","unorderedListRE","commands","newlineAndIndentContinueMarkdownList","cm","getOption","Pass","ranges","listSelections","replacements","i","length","pos","head","match","eolState","getStateAfter","line","inList","list","inQuote","quote","empty","getLine","execCommand","replaceRange","ch","indent","after","bullet","test","indexOf","parseInt","replaceSelections"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACtB;;AAEA,MAAIC,SAAS,qCAAb;AAAA,MACIC,cAAc,oCADlB;AAAA,MAEIC,kBAAkB,SAFtB;;AAIAH,aAAWI,QAAX,CAAoBC,oCAApB,GAA2D,UAASC,EAAT,EAAa;AACtE,QAAIA,GAAGC,SAAH,CAAa,cAAb,CAAJ,EAAkC,OAAOP,WAAWQ,IAAlB;AAClC,QAAIC,SAASH,GAAGI,cAAH,EAAb;AAAA,QAAkCC,eAAe,EAAjD;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,OAAOI,MAA3B,EAAmCD,GAAnC,EAAwC;AACtC,UAAIE,MAAML,OAAOG,CAAP,EAAUG,IAApB;AAAA,UAA0BC,KAA1B;AACA,UAAIC,WAAWX,GAAGY,aAAH,CAAiBJ,IAAIK,IAArB,CAAf;AACA,UAAIC,SAASH,SAASI,IAAT,KAAkB,KAA/B;AACA,UAAIC,UAAUL,SAASM,KAAT,KAAmB,KAAjC;;AAEA,UAAI,CAACd,OAAOG,CAAP,EAAUY,KAAV,EAAD,IAAuB,CAACJ,MAAD,IAAW,CAACE,OAAnC,IAA+C,EAAEN,QAAQV,GAAGmB,OAAH,CAAWX,IAAIK,IAAf,EAAqBH,KAArB,CAA2Bf,MAA3B,CAAV,CAAnD,EAAkG;AAChGK,WAAGoB,WAAH,CAAe,kBAAf;AACA;AACD;AACD,UAAIpB,GAAGmB,OAAH,CAAWX,IAAIK,IAAf,EAAqBH,KAArB,CAA2Bd,WAA3B,CAAJ,EAA6C;AAC3CI,WAAGqB,YAAH,CAAgB,EAAhB,EAAoB;AAClBR,gBAAML,IAAIK,IADQ,EACFS,IAAI;AADF,SAApB,EAEG;AACDT,gBAAML,IAAIK,IADT,EACeS,IAAId,IAAIc,EAAJ,GAAS;AAD5B,SAFH;AAKAjB,qBAAaC,CAAb,IAAkB,IAAlB;AAED,OARD,MAQO;AACL,YAAIiB,SAASb,MAAM,CAAN,CAAb;AAAA,YAAuBc,QAAQd,MAAM,CAAN,CAA/B;AACA,YAAIe,SAAS5B,gBAAgB6B,IAAhB,CAAqBhB,MAAM,CAAN,CAArB,KAAkCA,MAAM,CAAN,EAASiB,OAAT,CAAiB,GAAjB,KAAyB,CAA3D,GACTjB,MAAM,CAAN,CADS,GAERkB,SAASlB,MAAM,CAAN,CAAT,EAAmB,EAAnB,IAAyB,CAA1B,GAA+B,GAFnC;;AAIAL,qBAAaC,CAAb,IAAkB,OAAOiB,MAAP,GAAgBE,MAAhB,GAAyBD,KAA3C;AACD;AACF;;AAEDxB,OAAG6B,iBAAH,CAAqBxB,YAArB;AACD,GAhCD;AAiCD,CA/CD","file":"continuelist.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-]\\s|(\\d+)\\.)(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-]|(\\d+)\\.)(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head, match;\n      var eolState = cm.getStateAfter(pos.line);\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== false;\n\n      if (!ranges[i].empty() || (!inList && !inQuote) || !(match = cm.getLine(pos.line).match(listRE))) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n      if (cm.getLine(pos.line).match(emptyListRE)) {\n        cm.replaceRange(\"\", {\n          line: pos.line, ch: 0\n        }, {\n          line: pos.line, ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n\n      } else {\n        var indent = match[1], after = match[4];\n        var bullet = unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0\n          ? match[2]\n          : (parseInt(match[3], 10) + 1) + \".\";\n\n        replacements[i] = \"\\n\" + indent + bullet + after;\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  };\n});\n"]}