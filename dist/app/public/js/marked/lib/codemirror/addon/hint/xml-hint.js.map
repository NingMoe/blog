{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/addon/hint/xml-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","getHints","cm","options","tags","schemaInfo","quote","quoteChar","cur","getCursor","token","getTokenAt","end","ch","string","slice","start","inner","innerMode","getMode","state","mode","name","result","replaceToken","prefix","tag","test","type","tagName","tagStart","before","getLine","line","Math","max","tagType","cx","context","curTag","childList","children","i","length","lastIndexOf","push","hasOwnProperty","attrs","globalAttrs","set","nm","getRange","atName","match","atValues","call","n","charAt","len","substr","attr","list","from","to","registerHelper"],"mappings":"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","file":"xml-hint.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function getHints(cm, options) {\n    var tags = options && options.schemaInfo;\n    var quote = (options && options.quoteChar) || '\"';\n    if (!tags) return;\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"xml\") return;\n    var result = [], replaceToken = false, prefix;\n    var tag = /\\btag\\b/.test(token.type) && !/>$/.test(token.string);\n    var tagName = tag && /^\\w/.test(token.string), tagStart;\n\n    if (tagName) {\n      var before = cm.getLine(cur.line).slice(Math.max(0, token.start - 2), token.start);\n      var tagType = /<\\/$/.test(before) ? \"close\" : /<$/.test(before) ? \"open\" : null;\n      if (tagType) tagStart = token.start - (tagType == \"close\" ? 2 : 1);\n    } else if (tag && token.string == \"<\") {\n      tagType = \"open\";\n    } else if (tag && token.string == \"</\") {\n      tagType = \"close\";\n    }\n\n    if (!tag && !inner.state.tagName || tagType) {\n      if (tagName)\n        prefix = token.string;\n      replaceToken = tagType;\n      var cx = inner.state.context, curTag = cx && tags[cx.tagName];\n      var childList = cx ? curTag && curTag.children : tags[\"!top\"];\n      if (childList && tagType != \"close\") {\n        for (var i = 0; i < childList.length; ++i) if (!prefix || childList[i].lastIndexOf(prefix, 0) == 0)\n          result.push(\"<\" + childList[i]);\n      } else if (tagType != \"close\") {\n        for (var name in tags)\n          if (tags.hasOwnProperty(name) && name != \"!top\" && name != \"!attrs\" && (!prefix || name.lastIndexOf(prefix, 0) == 0))\n            result.push(\"<\" + name);\n      }\n      if (cx && (!prefix || tagType == \"close\" && cx.tagName.lastIndexOf(prefix, 0) == 0))\n        result.push(\"</\" + cx.tagName + \">\");\n    } else {\n      // Attribute completion\n      var curTag = tags[inner.state.tagName], attrs = curTag && curTag.attrs;\n      var globalAttrs = tags[\"!attrs\"];\n      if (!attrs && !globalAttrs) return;\n      if (!attrs) {\n        attrs = globalAttrs;\n      } else if (globalAttrs) { // Combine tag-local and global attributes\n        var set = {};\n        for (var nm in globalAttrs) if (globalAttrs.hasOwnProperty(nm)) set[nm] = globalAttrs[nm];\n        for (var nm in attrs) if (attrs.hasOwnProperty(nm)) set[nm] = attrs[nm];\n        attrs = set;\n      }\n      if (token.type == \"string\" || token.string == \"=\") { // A value\n        var before = cm.getRange(Pos(cur.line, Math.max(0, cur.ch - 60)),\n                                 Pos(cur.line, token.type == \"string\" ? token.start : token.end));\n        var atName = before.match(/([^\\s\\u00a0=<>\\\"\\']+)=$/), atValues;\n        if (!atName || !attrs.hasOwnProperty(atName[1]) || !(atValues = attrs[atName[1]])) return;\n        if (typeof atValues == 'function') atValues = atValues.call(this, cm); // Functions can be used to supply values for autocomplete widget\n        if (token.type == \"string\") {\n          prefix = token.string;\n          var n = 0;\n          if (/['\"]/.test(token.string.charAt(0))) {\n            quote = token.string.charAt(0);\n            prefix = token.string.slice(1);\n            n++;\n          }\n          var len = token.string.length;\n          if (/['\"]/.test(token.string.charAt(len - 1))) {\n            quote = token.string.charAt(len - 1);\n            prefix = token.string.substr(n, len - 2);\n          }\n          replaceToken = true;\n        }\n        for (var i = 0; i < atValues.length; ++i) if (!prefix || atValues[i].lastIndexOf(prefix, 0) == 0)\n          result.push(quote + atValues[i] + quote);\n      } else { // An attribute name\n        if (token.type == \"attribute\") {\n          prefix = token.string;\n          replaceToken = true;\n        }\n        for (var attr in attrs) if (attrs.hasOwnProperty(attr) && (!prefix || attr.lastIndexOf(prefix, 0) == 0))\n          result.push(attr);\n      }\n    }\n    return {\n      list: result,\n      from: replaceToken ? Pos(cur.line, tagStart == null ? token.start : tagStart) : cur,\n      to: replaceToken ? Pos(cur.line, token.end) : cur\n    };\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"xml\", getHints);\n});\n"]}