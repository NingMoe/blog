{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/d/d.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndentUnit","keywords","builtin","blockKeywords","atoms","hooks","multiLineStrings","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","result","tokenize","tokenString","test","eatWhile","eat","tokenComment","tokenNestedComment","skipToEnd","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","textAfter","Pass","firstChar","charAt","closing","electricChars","words","str","obj","split","i","length","defineMIME","name","_state"],"mappings":"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","file":"d.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"d\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings;\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"+\")) {\n        state.tokenize = tokenComment;\n        return tokenNestedComment(stream, state);\n      }\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (builtin.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function tokenNestedComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"+\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var blockKeywords = \"body catch class do else enum for foreach foreach_reverse if in interface mixin \" +\n                      \"out scope struct switch try union unittest version while with\";\n\n  CodeMirror.defineMIME(\"text/x-d\", {\n    name: \"d\",\n    keywords: words(\"abstract alias align asm assert auto break case cast cdouble cent cfloat const continue \" +\n                    \"debug default delegate delete deprecated export extern final finally function goto immutable \" +\n                    \"import inout invariant is lazy macro module new nothrow override package pragma private \" +\n                    \"protected public pure ref return shared short static super synchronized template this \" +\n                    \"throw typedef typeid typeof volatile __FILE__ __LINE__ __gshared __traits __vector __parameters \" +\n                    blockKeywords),\n    blockKeywords: words(blockKeywords),\n    builtin: words(\"bool byte char creal dchar double float idouble ifloat int ireal long real short ubyte \" +\n                   \"ucent uint ulong ushort wchar wstring void size_t sizediff_t\"),\n    atoms: words(\"exit failure success true false null\"),\n    hooks: {\n      \"@\": function(stream, _state) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n});\n"]}