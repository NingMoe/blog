{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/pegjs/pegjs.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","jsMode","getMode","identifier","stream","match","startState","inString","stringType","inComment","inChracterClass","braced","lhs","localState","token","state","peek","next","eol","skipToEnd","text","current","i","length","indexOf","eatSpace"],"mappings":"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","file":"pegjs.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pegjs\", function (config) {\n  var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n  function identifier(stream) {\n    return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n  }\n\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: null,\n        inComment: false,\n        inChracterClass: false,\n        braced: 0,\n        lhs: true,\n        localState: null\n      };\n    },\n    token: function (stream, state) {\n      if (stream)\n\n      //check for state changes\n      if (!state.inString && !state.inComment && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (!state.inString && !state.inComment && stream.match(/^\\/\\*/)) {\n        state.inComment = true;\n      }\n\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inComment) {\n        while (state.inComment && !stream.eol()) {\n          if (stream.match(/\\*\\//)) {\n            state.inComment = false; // Clear flag\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n        return \"comment\";\n      } else if (state.inChracterClass) {\n          while (state.inChracterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inChracterClass = false;\n            }\n          }\n      } else if (stream.peek() === '[') {\n        stream.next();\n        state.inChracterClass = true;\n        return 'bracket';\n      } else if (stream.match(/^\\/\\//)) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (state.braced || stream.peek() === '{') {\n        if (state.localState === null) {\n          state.localState = jsMode.startState();\n        }\n        var token = jsMode.token(stream, state.localState);\n        var text = stream.current();\n        if (!token) {\n          for (var i = 0; i < text.length; i++) {\n            if (text[i] === '{') {\n              state.braced++;\n            } else if (text[i] === '}') {\n              state.braced--;\n            }\n          };\n        }\n        return token;\n      } else if (identifier(stream)) {\n        if (stream.peek() === ':') {\n          return 'variable';\n        }\n        return 'variable-2';\n      } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n        stream.next();\n        return 'bracket';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n}, \"javascript\");\n\n});\n"]}