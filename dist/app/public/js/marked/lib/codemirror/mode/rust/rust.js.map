{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/rust/rust.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","indentUnit","altIndentUnit","valKeywords","typeKeywords","keywords","atoms","split","i","e","length","operatorChar","tcat","content","r","tc","style","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","skipTo","skipToEnd","tokenComment","eatWhile","match","flp","current","backUp","propertyIsEnumerable","escaped","depth","lastCh","cx","marked","cc","pass","arguments","push","cont","apply","pushlex","type","info","result","lexical","indented","column","prev","lex","poplex","typecx","valcx","commasep","comb","end","more","stat_of","tag","block","letdef1","fndef","tydef","endstatement","enumdef","iface","impl","expression","maybeop","exprbrace","matchBrackets","pattern","maybetype","inop","altbody","macro","maybeprop","typarams","blockvars","peek","record_of","ro","letdef2","rtype","argdef","enumblock","rtypemaybeparam","fntype","patternmaybeop","altblock1","altblock2","parse","combinator","pop","startState","align","token","sol","hasOwnProperty","indentation","eatSpace","indent","textAfter","firstChar","charAt","closing","electricChars","blockCommentStart","blockCommentEnd","lineComment","fold","defineMIME"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,UAAX,CAAsB,MAAtB,EAA8B,YAAW;AACvC,QAAIC,aAAa,CAAjB;AAAA,QAAoBC,gBAAgB,CAApC;AACA,QAAIC,cAAc;AAChB,YAAM,UADU,EACE,SAAS,UADX,EACuB,QAAQ,YAD/B,EAC6C,QAAQ,YADrD;AAEhB,YAAM,YAFU,EAEI,OAAO,YAFX,EAEyB,QAAQ,YAFjC;AAGhB,eAAS,MAHO,EAGC,QAAQ,MAHT,EAGiB,SAAS,KAH1B,EAGiC,YAAY,IAH7C;AAIhB,aAAO,KAJS,EAIF,MAAM,IAJJ,EAIU,OAAO,KAJjB,EAIwB,OAAO,KAJ/B,EAIsC,SAAS,OAJ/C;AAKhB,cAAQ,MALQ,EAKA,QAAQ,MALR,EAKgB,QAAQ,MALxB,EAKgC,OAAO,KALvC;AAMhB,YAAM,IANU,EAMJ,QAAQ,MANJ,EAMY,SAAS,MANrB,EAM6B,UAAU,IANvC,EAM6C,SAAS,IANtD;AAOhB,eAAS,IAPO,EAOD,UAAU,QAPT,EAOmB,UAAU,QAP7B,EAOuC,UAAU,YAPjD;AAQhB,gBAAU,YARM,EAQQ,QAAQ,IARhB,EAQsB,OAAO,IAR7B,EAQmC,WAAW,IAR9C;AAShB,aAAO,IATS,EASH,QAAQ,IATL,EASW,QAAQ,MATnB,EAS2B,UAAU;AATrC,KAAlB;AAWA,QAAIC,eAAe,YAAW;AAC5B,UAAIC,WAAW,EAAC,MAAM,IAAP,EAAa,SAAS,IAAtB,EAA4B,OAAO,KAAnC,EAAf;AACA,UAAIC,QAAQ,qEAAqEC,KAArE,CAA2E,GAA3E,CAAZ;AACA,WAAK,IAAIC,IAAI,CAAR,EAAWC,IAAIH,MAAMI,MAA1B,EAAkCF,IAAIC,CAAtC,EAAyC,EAAED,CAA3C;AAA8CH,iBAASC,MAAME,CAAN,CAAT,IAAqB,MAArB;AAA9C,OACA,OAAOH,QAAP;AACD,KALkB,EAAnB;AAMA,QAAIM,eAAe,mBAAnB;;AAEA;;AAEA;AACA;AACA,QAAIC,IAAJ,EAAUC,OAAV;AACA,aAASC,CAAT,CAAWC,EAAX,EAAeC,KAAf,EAAsB;AACpBJ,aAAOG,EAAP;AACA,aAAOC,KAAP;AACD;;AAED,aAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAChC,UAAIC,KAAKF,OAAOG,IAAP,EAAT;AACA,UAAID,MAAM,GAAV,EAAe;AACbD,cAAMG,QAAN,GAAiBC,WAAjB;AACA,eAAOJ,MAAMG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;AACD;AACD,UAAIC,MAAM,GAAV,EAAe;AACbR,eAAO,MAAP;AACA,YAAIM,OAAOM,GAAP,CAAW,IAAX,CAAJ,EAAsB;AACpB,cAAIN,OAAOO,MAAP,CAAc,GAAd,CAAJ,EAAwB;AAAEP,mBAAOG,IAAP,GAAe,OAAO,QAAP;AAAkB,WAA3D,MACK;AAAE,mBAAO,OAAP;AAAiB;AACzB,SAHD,MAGO;AACLH,iBAAOG,IAAP;AACA,iBAAOH,OAAOM,GAAP,CAAW,GAAX,IAAkB,QAAlB,GAA6B,OAApC;AACD;AACF;AACD,UAAIJ,MAAM,GAAV,EAAe;AACb,YAAIF,OAAOM,GAAP,CAAW,GAAX,CAAJ,EAAqB;AAAEN,iBAAOQ,SAAP,GAAoB,OAAO,SAAP;AAAmB;AAC9D,YAAIR,OAAOM,GAAP,CAAW,GAAX,CAAJ,EAAqB;AACnBL,gBAAMG,QAAN,GAAiBK,aAAa,CAAb,CAAjB;AACA,iBAAOR,MAAMG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;AACD;AACF;AACD,UAAIC,MAAM,GAAV,EAAe;AACb,YAAIF,OAAOM,GAAP,CAAW,GAAX,CAAJ,EAAqB;AAAEZ,iBAAO,WAAP,CAAoB,OAAO,IAAP;AAAc;AACzDM,eAAOU,QAAP,CAAgB,IAAhB;AACA,eAAOd,EAAE,OAAF,EAAW,MAAX,CAAP;AACD;AACD,UAAIM,MAAM,GAAN,IAAaF,OAAOW,KAAP,CAAa,IAAb,CAAjB,EAAqC;AACnC,eAAOf,EAAE,IAAF,EAAQ,IAAR,CAAP;AACD;AACD,UAAIM,GAAGS,KAAH,CAAS,IAAT,KAAmBT,MAAM,GAAN,IAAaF,OAAOM,GAAP,CAAW,IAAX,CAApC,EAAuD;AACrD,YAAIM,MAAM,KAAV;AACA,YAAI,CAACZ,OAAOW,KAAP,CAAa,aAAb,CAAD,IAAgC,CAACX,OAAOW,KAAP,CAAa,SAAb,CAArC,EAA8D;AAC5DX,iBAAOU,QAAP,CAAgB,IAAhB;AACA,cAAIV,OAAOM,GAAP,CAAW,GAAX,CAAJ,EAAqB;AAAEM,kBAAM,IAAN,CAAYZ,OAAOU,QAAP,CAAgB,IAAhB;AAAwB;AAC3D,cAAIV,OAAOW,KAAP,CAAa,cAAb,CAAJ,EAAkC;AAAEC,kBAAM,IAAN;AAAa;AAClD;AACD,YAAIA,GAAJ,EAASZ,OAAOW,KAAP,CAAa,aAAb,EAAT,KACKX,OAAOW,KAAP,CAAa,qBAAb;AACL,eAAOf,EAAE,MAAF,EAAU,QAAV,CAAP;AACD;AACD,UAAIM,GAAGS,KAAH,CAAS,eAAT,CAAJ,EAA+B,OAAOf,EAAEM,EAAF,EAAM,IAAN,CAAP;AAC/B,UAAIA,MAAM,GAAN,IAAaF,OAAOM,GAAP,CAAW,GAAX,CAAjB,EAAkC,OAAOV,EAAE,IAAF,EAAQ,IAAR,CAAP;AAClC,UAAIM,GAAGS,KAAH,CAASlB,YAAT,CAAJ,EAA4B;AAC1BO,eAAOU,QAAP,CAAgBjB,YAAhB;AACA,eAAOG,EAAE,IAAF,EAAQ,IAAR,CAAP;AACD;AACDI,aAAOU,QAAP,CAAgB,IAAhB;AACAf,gBAAUK,OAAOa,OAAP,EAAV;AACA,UAAIb,OAAOW,KAAP,CAAa,OAAb,CAAJ,EAA2B;AACzBX,eAAOc,MAAP,CAAc,CAAd;AACA,eAAOlB,EAAE,QAAF,EAAY,YAAZ,CAAP;AACD;AACD,UAAIK,MAAMd,QAAN,CAAe4B,oBAAf,CAAoCpB,OAApC,CAAJ,EACE,OAAOC,EAAEK,MAAMd,QAAN,CAAeQ,OAAf,CAAF,EAA2BA,QAAQgB,KAAR,CAAc,YAAd,IAA8B,MAA9B,GAAuC,SAAlE,CAAP;AACF,aAAOf,EAAE,MAAF,EAAU,UAAV,CAAP;AACD;;AAED,aAASS,WAAT,CAAqBL,MAArB,EAA6BC,KAA7B,EAAoC;AAClC,UAAIC,EAAJ;AAAA,UAAQc,UAAU,KAAlB;AACA,aAAOd,KAAKF,OAAOG,IAAP,EAAZ,EAA2B;AACzB,YAAID,MAAM,GAAN,IAAa,CAACc,OAAlB,EAA2B;AACzBf,gBAAMG,QAAN,GAAiBL,SAAjB;AACA,iBAAOH,EAAE,MAAF,EAAU,QAAV,CAAP;AACD;AACDoB,kBAAU,CAACA,OAAD,IAAYd,MAAM,IAA5B;AACD;AACD;AACA;AACA,aAAON,EAAE,IAAF,EAAQ,QAAR,CAAP;AACD;;AAED,aAASa,YAAT,CAAsBQ,KAAtB,EAA6B;AAC3B,aAAO,UAASjB,MAAT,EAAiBC,KAAjB,EAAwB;AAC7B,YAAIiB,SAAS,IAAb;AAAA,YAAmBhB,EAAnB;AACA,eAAOA,KAAKF,OAAOG,IAAP,EAAZ,EAA2B;AACzB,cAAID,MAAM,GAAN,IAAagB,UAAU,GAA3B,EAAgC;AAC9B,gBAAID,SAAS,CAAb,EAAgB;AACdhB,oBAAMG,QAAN,GAAiBL,SAAjB;AACA;AACD,aAHD,MAGO;AACLE,oBAAMG,QAAN,GAAiBK,aAAaQ,QAAQ,CAArB,CAAjB;AACA,qBAAOhB,MAAMG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;AACD;AACF;AACD,cAAIC,MAAM,GAAN,IAAagB,UAAU,GAA3B,EAAgC;AAC9BjB,kBAAMG,QAAN,GAAiBK,aAAaQ,QAAQ,CAArB,CAAjB;AACA,mBAAOhB,MAAMG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAP;AACD;AACDiB,mBAAShB,EAAT;AACD;AACD,eAAO,SAAP;AACD,OAnBD;AAoBD;;AAED;;AAEA,QAAIiB,KAAK,EAAClB,OAAO,IAAR,EAAcD,QAAQ,IAAtB,EAA4BoB,QAAQ,IAApC,EAA0CC,IAAI,IAA9C,EAAT;AACA,aAASC,IAAT,GAAgB;AACd,WAAK,IAAIhC,IAAIiC,UAAU/B,MAAV,GAAmB,CAAhC,EAAmCF,KAAK,CAAxC,EAA2CA,GAA3C;AAAgD6B,WAAGE,EAAH,CAAMG,IAAN,CAAWD,UAAUjC,CAAV,CAAX;AAAhD;AACD;AACD,aAASmC,IAAT,GAAgB;AACdH,WAAKI,KAAL,CAAW,IAAX,EAAiBH,SAAjB;AACA,aAAO,IAAP;AACD;;AAED,aAASI,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,UAAIC,SAAS,SAATA,MAAS,GAAW;AACtB,YAAI7B,QAAQkB,GAAGlB,KAAf;AACAA,cAAM8B,OAAN,GAAgB,EAACC,UAAU/B,MAAM+B,QAAjB,EAA2BC,QAAQd,GAAGnB,MAAH,CAAUiC,MAAV,EAAnC;AACCL,gBAAMA,IADP,EACaM,MAAMjC,MAAM8B,OADzB,EACkCF,MAAMA,IADxC,EAAhB;AAED,OAJD;AAKAC,aAAOK,GAAP,GAAa,IAAb;AACA,aAAOL,MAAP;AACD;AACD,aAASM,MAAT,GAAkB;AAChB,UAAInC,QAAQkB,GAAGlB,KAAf;AACA,UAAIA,MAAM8B,OAAN,CAAcG,IAAlB,EAAwB;AACtB,YAAIjC,MAAM8B,OAAN,CAAcH,IAAd,IAAsB,GAA1B,EACE3B,MAAM+B,QAAN,GAAiB/B,MAAM8B,OAAN,CAAcC,QAA/B;AACF/B,cAAM8B,OAAN,GAAgB9B,MAAM8B,OAAN,CAAcG,IAA9B;AACD;AACF;AACD,aAASG,MAAT,GAAkB;AAAElB,SAAGlB,KAAH,CAASd,QAAT,GAAoBD,YAApB;AAAmC;AACvD,aAASoD,KAAT,GAAiB;AAAEnB,SAAGlB,KAAH,CAASd,QAAT,GAAoBF,WAApB;AAAkC;AACrDmD,WAAOD,GAAP,GAAaE,OAAOF,GAAP,GAAaG,MAAMH,GAAN,GAAY,IAAtC;;AAEA,aAASI,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAC3B,eAASC,IAAT,CAAcd,IAAd,EAAoB;AAClB,YAAIA,QAAQ,GAAZ,EAAiB,OAAOH,KAAKe,IAAL,EAAWE,IAAX,CAAP;AACjB,YAAId,QAAQa,GAAZ,EAAiB,OAAOhB,MAAP;AACjB,eAAOA,KAAKiB,IAAL,CAAP;AACD;AACD,aAAO,UAASd,IAAT,EAAe;AACpB,YAAIA,QAAQa,GAAZ,EAAiB,OAAOhB,MAAP;AACjB,eAAOH,KAAKkB,IAAL,EAAWE,IAAX,CAAP;AACD,OAHD;AAID;;AAED,aAASC,OAAT,CAAiBH,IAAjB,EAAuBI,GAAvB,EAA4B;AAC1B,aAAOnB,KAAKE,QAAQ,MAAR,EAAgBiB,GAAhB,CAAL,EAA2BJ,IAA3B,EAAiCJ,MAAjC,EAAyCS,KAAzC,CAAP;AACD;AACD,aAASA,KAAT,CAAejB,IAAf,EAAqB;AACnB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,UAAIG,QAAQ,KAAZ,EAAmB,OAAOe,QAAQG,OAAR,EAAiB,KAAjB,CAAP;AACnB,UAAIlB,QAAQ,IAAZ,EAAkB,OAAOe,QAAQI,KAAR,CAAP;AAClB,UAAInB,QAAQ,MAAZ,EAAoB,OAAOH,KAAKE,QAAQ,MAAR,CAAL,EAAsBqB,KAAtB,EAA6BC,YAA7B,EAA2Cb,MAA3C,EAAmDS,KAAnD,CAAP;AACpB,UAAIjB,QAAQ,MAAZ,EAAoB,OAAOe,QAAQO,OAAR,CAAP;AACpB,UAAItB,QAAQ,KAAZ,EAAmB,OAAOe,QAAQpE,GAAR,CAAP;AACnB,UAAIqD,QAAQ,OAAZ,EAAqB,OAAOe,QAAQQ,KAAR,CAAP;AACrB,UAAIvB,QAAQ,MAAZ,EAAoB,OAAOe,QAAQS,IAAR,CAAP;AACpB,UAAIxB,QAAQ,WAAZ,EAAyB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAASc,UAAT,EAAqB,GAArB,CAAnB,EAA8CjB,MAA9C,CAAP;AACzB,UAAIR,QAAQ,QAAR,IAAoBA,KAAKjB,KAAL,CAAW,UAAX,CAAxB,EAAgD,OAAOc,KAAKoB,KAAL,CAAP;AAChD,aAAOvB,KAAKK,QAAQ,MAAR,CAAL,EAAsB0B,UAAtB,EAAkCjB,MAAlC,EAA0Ca,YAA1C,EAAwDJ,KAAxD,CAAP;AACD;AACD,aAASI,YAAT,CAAsBrB,IAAtB,EAA4B;AAC1B,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,aAAOH,MAAP;AACD;AACD,aAAS+B,UAAT,CAAoBzB,IAApB,EAA0B;AACxB,UAAIA,QAAQ,MAAR,IAAkBA,QAAQ,MAA9B,EAAsC,OAAOH,KAAK6B,OAAL,CAAP;AACtC,UAAI1B,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmB4B,SAAnB,EAA8BnB,MAA9B,CAAP;AACjB,UAAIR,KAAKjB,KAAL,CAAW,QAAX,CAAJ,EAA0B,OAAO6C,cAAc5B,IAAd,EAAoByB,UAApB,CAAP;AAC1B,UAAIzB,KAAKjB,KAAL,CAAW,YAAX,CAAJ,EAA8B,OAAOW,MAAP;AAC9B,UAAIM,QAAQ,UAAZ,EAAwB,OAAOH,KAAK4B,UAAL,EAAiBA,UAAjB,CAAP;AACxB,UAAIzB,QAAQ,YAAR,IAAwBA,QAAQ,IAApC,EAA0C,OAAOH,KAAK4B,UAAL,CAAP;AAC1C,UAAIzB,QAAQ,KAAZ,EAAmB,OAAOH,KAAKgC,OAAL,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BN,UAA/B,EAA2CA,UAA3C,CAAP;AACnB,UAAIzB,QAAQ,KAAZ,EAAmB,OAAOH,KAAK4B,UAAL,EAAiBO,OAAjB,CAAP;AACnB,UAAIhC,QAAQ,IAAZ,EAAkB,OAAOH,KAAKsB,KAAL,CAAP;AAClB,UAAInB,QAAQ,OAAZ,EAAqB,OAAOH,KAAKoC,KAAL,CAAP;AACrB,aAAOpC,MAAP;AACD;AACD,aAAS6B,OAAT,CAAiB1B,IAAjB,EAAuB;AACrB,UAAIjC,WAAW,GAAf,EAAoB,OAAO8B,KAAKqC,SAAL,CAAP;AACpB,UAAInE,WAAW,KAAf,EAAqB;AAAC,eAAO8B,KAAKsC,QAAL,EAAeT,OAAf,CAAP;AAAgC;AACtD,UAAI1B,QAAQ,IAAR,IAAgBjC,WAAW,GAA/B,EAAoC,OAAO8B,KAAK4B,UAAL,CAAP;AACpC,UAAIzB,QAAQ,GAAR,IAAeA,QAAQ,GAA3B,EAAgC,OAAO4B,cAAc5B,IAAd,EAAoByB,UAApB,CAAP;AAChC,aAAO/B,MAAP;AACD;AACD,aAASwC,SAAT,GAAqB;AACnB,UAAInE,QAAQgB,KAAR,CAAc,OAAd,CAAJ,EAA4B;AAACQ,WAAGC,MAAH,GAAY,UAAZ,CAAwB,OAAOK,KAAK6B,OAAL,CAAP;AAAsB;AAC3E,aAAOhC,KAAK+B,UAAL,CAAP;AACD;AACD,aAASE,SAAT,CAAmB3B,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,IAAZ,EAAkB;AAChB,YAAIjC,WAAW,GAAf,EAAoB,OAAO8B,KAAKuC,SAAL,EAAgB5B,MAAhB,EAAwBT,QAAQ,GAAR,EAAa,OAAb,CAAxB,EAA+CkB,KAA/C,CAAP;AACpB,YAAIlD,WAAW,IAAf,EAAqB,OAAO8B,KAAKW,MAAL,EAAaT,QAAQ,GAAR,EAAa,OAAb,CAAb,EAAoCkB,KAApC,CAAP;AACtB;AACD,UAAIlD,WAAW,SAAX,IAAyBA,QAAQgB,KAAR,CAAc,OAAd,KAA0BQ,GAAGnB,MAAH,CAAUiE,IAAV,MAAoB,GAA9C,IACG,CAAC9C,GAAGnB,MAAH,CAAUW,KAAV,CAAgB,IAAhB,EAAsB,KAAtB,CADjC,EAEE,OAAOW,KAAK4C,UAAUb,UAAV,CAAL,CAAP;AACF,aAAO/B,KAAKuB,KAAL,CAAP;AACD;AACD,aAASqB,SAAT,CAAmB1B,IAAnB,EAAyB;AACvB,eAAS2B,EAAT,CAAYvC,IAAZ,EAAkB;AAChB,YAAIjC,WAAW,SAAX,IAAwBA,WAAW,MAAvC,EAA+C;AAACwB,aAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAK0C,EAAL,CAAP;AAAiB;AACxF,YAAIxE,QAAQgB,KAAR,CAAc,OAAd,CAAJ,EAA4B;AAACQ,aAAGC,MAAH,GAAY,UAAZ,CAAwB,OAAOK,KAAK0C,EAAL,CAAP;AAAiB;AACtE,YAAIvC,QAAQ,GAAZ,EAAiB,OAAOH,KAAKe,IAAL,EAAW2B,EAAX,CAAP;AACjB,YAAIvC,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,eAAOA,KAAK0C,EAAL,CAAP;AACD;AACD,aAAOA,EAAP;AACD;AACD,aAASH,SAAT,CAAmBpC,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKuC,SAAL,CAAP;AAAwB;AAChE,UAAIpC,QAAQ,IAAR,IAAgBjC,WAAW,GAA/B,EAAoC,OAAO8B,MAAP;AACpC,aAAOA,KAAKuC,SAAL,CAAP;AACD;;AAED,aAASlB,OAAT,CAAiBlB,IAAjB,EAAuB;AACrB,UAAIA,KAAKjB,KAAL,CAAW,WAAX,CAAJ,EAA6B,OAAOc,MAAP;AAC7B,UAAI9B,WAAW,GAAf,EAAoB,OAAO8B,KAAK4B,UAAL,EAAiBe,OAAjB,CAAP;AACpB,UAAIxC,QAAQ,GAAZ,EAAiB,OAAOH,KAAKqB,OAAL,CAAP;AACjB,aAAOxB,KAAKmC,OAAL,EAAcC,SAAd,EAAyBZ,OAAzB,CAAP;AACD;AACD,aAASsB,OAAT,CAAiBxC,IAAjB,EAAuB;AACrB,UAAIA,KAAKjB,KAAL,CAAW,YAAX,CAAJ,EAA8B,OAAOW,KAAKwB,OAAL,CAAP,CAA9B,KACK,OAAOxB,KAAK+B,UAAL,EAAiBe,OAAjB,CAAP;AACN;AACD,aAASV,SAAT,CAAmB9B,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,KAAKY,MAAL,EAAagC,KAAb,EAAoB/B,KAApB,CAAP;AACjB,aAAOhB,MAAP;AACD;AACD,aAASqC,IAAT,CAAc/B,IAAd,EAAoB;AAClB,UAAIA,QAAQ,MAAR,IAAkBjC,WAAW,IAAjC,EAAuC;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,MAAP;AAAe;AAC9E,aAAOH,MAAP;AACD;AACD,aAASyB,KAAT,CAAenB,IAAf,EAAqB;AACnB,UAAIjC,WAAW,GAAX,IAAkBA,WAAW,GAAjC,EAAsC;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAKsB,KAAL,CAAP;AAAoB;AAClF,UAAInB,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKsB,KAAL,CAAP;AAAoB;AAC5D,UAAIpD,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,EAAehB,KAAf,CAAP;AACpB,UAAInB,QAAQ,GAAZ,EAAiB,OAAON,KAAK+B,UAAL,CAAP;AACjB,UAAIzB,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAAS+B,MAAT,EAAiB,GAAjB,CAAnB,EAA0ClC,MAA1C,EAAkDW,KAAlD,CAAP;AACjB,UAAInB,QAAQ,IAAZ,EAAkB,OAAOH,KAAKY,MAAL,EAAagC,KAAb,EAAoB/B,KAApB,EAA2BS,KAA3B,CAAP;AAClB,UAAInB,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,aAAOA,KAAKsB,KAAL,CAAP;AACD;AACD,aAASC,KAAT,CAAepB,IAAf,EAAqB;AACnB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKuB,KAAL,CAAP;AAAoB;AAC5D,UAAIrD,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,EAAef,KAAf,CAAP;AACpB,UAAIrD,WAAW,GAAf,EAAoB,OAAO8B,KAAKY,MAAL,EAAagC,KAAb,EAAoB/B,KAApB,CAAP;AACpB,aAAOb,KAAKuB,KAAL,CAAP;AACD;AACD,aAASE,OAAT,CAAiBtB,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKyB,OAAL,CAAP;AAAsB;AAC9D,UAAIvD,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,EAAeb,OAAf,CAAP;AACpB,UAAIvD,WAAW,GAAf,EAAoB,OAAO8B,KAAKY,MAAL,EAAagC,KAAb,EAAoB/B,KAApB,EAA2BW,YAA3B,CAAP;AACpB,UAAIrB,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBU,MAAnB,EAA2BkC,SAA3B,EAAsCjC,KAAtC,EAA6CF,MAA7C,CAAP;AACjB,aAAOX,KAAKyB,OAAL,CAAP;AACD;AACD,aAASqB,SAAT,CAAmB3C,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,UAAIG,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAAS8B,KAAT,EAAgB,GAAhB,CAAnB,EAAyCjC,MAAzC,EAAiDmC,SAAjD,CAAP;AACjB,UAAI5E,QAAQgB,KAAR,CAAc,OAAd,CAAJ,EAA4BQ,GAAGC,MAAH,GAAY,KAAZ;AAC5B,aAAOK,KAAK8C,SAAL,CAAP;AACD;AACD,aAAShG,GAAT,CAAaqD,IAAb,EAAmB;AACjB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKlD,GAAL,CAAP;AAAkB;AAC1D,UAAIqD,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBkB,KAAnB,EAA0BT,MAA1B,CAAP;AACjB,aAAOd,MAAP;AACD;AACD,aAAS6B,KAAT,CAAevB,IAAf,EAAqB;AACnB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAK0B,KAAL,CAAP;AAAoB;AAC5D,UAAIxD,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,EAAeZ,KAAf,CAAP;AACpB,UAAIvB,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBkB,KAAnB,EAA0BT,MAA1B,CAAP;AACjB,aAAOd,MAAP;AACD;AACD,aAAS8B,IAAT,CAAcxB,IAAd,EAAoB;AAClB,UAAIjC,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,EAAeX,IAAf,CAAP;AACpB,UAAIzD,WAAW,IAAX,IAAmBA,WAAW,KAAlC,EAAyC;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAK4C,KAAL,EAAYjB,IAAZ,CAAP;AAA0B;AAC3F,UAAIxB,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAK2B,IAAL,CAAP;AAAmB;AAC3D,UAAIxB,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBkB,KAAnB,EAA0BT,MAA1B,CAAP;AACjB,aAAOd,MAAP;AACD;AACD,aAASyC,QAAT,GAAoB;AAClB,UAAIpE,WAAW,GAAf,EAAoB,OAAO8B,MAAP;AACpB,UAAI9B,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,CAAP;AACpB,UAAIpE,WAAW,GAAf,EAAoB,OAAO8B,KAAK4C,KAAL,EAAYN,QAAZ,CAAP;AACpB,aAAOzC,KAAK+C,KAAL,EAAYN,QAAZ,CAAP;AACD;AACD,aAASO,MAAT,CAAgB1C,IAAhB,EAAsB;AACpB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAK6C,MAAL,CAAP;AAAqB;AAC7D,UAAI1C,QAAQ,GAAZ,EAAiB,OAAOH,KAAKY,MAAL,EAAagC,KAAb,EAAoB/B,KAApB,CAAP;AACjB,aAAOhB,MAAP;AACD;AACD,aAAS+C,KAAT,CAAezC,IAAf,EAAqB;AACnB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,YAAZ,CAA0B,OAAOK,KAAK+C,eAAL,CAAP;AAA+B;AAC9E,UAAI7E,WAAW,SAAf,EAA0B;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAK4C,KAAL,CAAP;AAAoB;AACtE,UAAIzC,QAAQ,MAAZ,EAAoB,OAAOH,KAAK+C,eAAL,CAAP;AACpB,UAAI5C,QAAQ,IAAR,IAAgBA,QAAQ,KAA5B,EAAmC,OAAOH,KAAK4C,KAAL,CAAP;AACnC,UAAIzC,QAAQ,IAAZ,EAAkB,OAAOH,KAAKgD,MAAL,CAAP;AAClB,UAAI7C,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBuC,UAAUG,KAAV,CAAnB,EAAqCjC,MAArC,CAAP;AACjB,aAAOoB,cAAc5B,IAAd,EAAoByC,KAApB,CAAP;AACD;AACD,aAASG,eAAT,GAA2B;AACzB,UAAI7E,WAAW,GAAf,EAAoB,OAAO8B,KAAKsC,QAAL,CAAP;AACpB,aAAOzC,MAAP;AACD;AACD,aAASmD,MAAT,CAAgB7C,IAAhB,EAAsB;AACpB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAAS8B,KAAT,EAAgB,GAAhB,CAAnB,EAAyCjC,MAAzC,EAAiDqC,MAAjD,CAAP;AACjB,UAAI7C,QAAQ,IAAZ,EAAkB,OAAOH,KAAK4C,KAAL,CAAP;AAClB,aAAO/C,MAAP;AACD;AACD,aAASmC,OAAT,CAAiB7B,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,MAAZ,EAAoB;AAACT,WAAGC,MAAH,GAAY,KAAZ,CAAmB,OAAOK,KAAKiD,cAAL,CAAP;AAA6B;AACrE,UAAI9C,QAAQ,MAAZ,EAAoB,OAAOH,KAAKiD,cAAL,CAAP;AACpB,UAAI9C,QAAQ,IAAZ,EAAkB,OAAOH,KAAKgC,OAAL,CAAP;AAClB,UAAI7B,KAAKjB,KAAL,CAAW,YAAX,CAAJ,EAA8B,OAAOW,MAAP;AAC9B,aAAOkC,cAAc5B,IAAd,EAAoB6B,OAApB,CAAP;AACD;AACD,aAASiB,cAAT,CAAwB9C,IAAxB,EAA8B;AAC5B,UAAIA,QAAQ,IAAR,IAAgBjC,WAAW,GAA/B,EAAoC,OAAO8B,MAAP;AACpC,UAAI9B,WAAW,IAAf,EAAqB;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAKgC,OAAL,CAAP;AAAsB,OAAnE,MACK,OAAOnC,MAAP;AACN;AACD,aAASsC,OAAT,CAAiBhC,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,EAAa,KAAb,CAAL,EAA0BgD,SAA1B,EAAqCvC,MAArC,CAAP;AACjB,aAAOd,MAAP;AACD;AACD,aAASqD,SAAT,CAAmB/C,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,MAAP;AACjB,UAAIG,QAAQ,GAAZ,EAAiB,OAAOH,KAAKkD,SAAL,CAAP;AACjB,UAAIhF,WAAW,MAAf,EAAuB;AAACwB,WAAGC,MAAH,GAAY,SAAZ,CAAuB,OAAOK,KAAK4B,UAAL,EAAiBuB,SAAjB,CAAP;AAAoC;AACnF,UAAIhD,KAAKjB,KAAL,CAAW,UAAX,CAAJ,EAA4B,OAAOc,KAAKkD,SAAL,CAAP;AAC5B,aAAOrD,KAAKmC,OAAL,EAAcmB,SAAd,CAAP;AACD;AACD,aAASA,SAAT,CAAmBhD,IAAnB,EAAyB;AACvB,UAAIA,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,EAAa,KAAb,CAAL,EAA0BkB,KAA1B,EAAiCT,MAAjC,EAAyCuC,SAAzC,CAAP,CAAjB,KACK,OAAOrD,KAAKqD,SAAL,CAAP;AACN;;AAED,aAASd,KAAT,CAAejC,IAAf,EAAqB;AACnB,UAAIA,KAAKjB,KAAL,CAAW,UAAX,CAAJ,EAA4B,OAAO6C,cAAc5B,IAAd,EAAoByB,UAApB,CAAP;AAC5B,aAAO/B,MAAP;AACD;AACD,aAASkC,aAAT,CAAuB5B,IAAvB,EAA6BY,IAA7B,EAAmC;AACjC,UAAIZ,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAASC,IAAT,EAAe,GAAf,CAAnB,EAAwCJ,MAAxC,CAAP;AACjB,UAAIR,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAASC,IAAT,EAAe,GAAf,CAAnB,EAAwCJ,MAAxC,CAAP;AACjB,UAAIR,QAAQ,GAAZ,EAAiB,OAAOH,KAAKE,QAAQ,GAAR,CAAL,EAAmBY,SAASC,IAAT,EAAe,GAAf,CAAnB,EAAwCJ,MAAxC,CAAP;AACjB,aAAOX,MAAP;AACD;;AAED,aAASoD,KAAT,CAAe5E,KAAf,EAAsBD,MAAtB,EAA8BF,KAA9B,EAAqC;AACnC,UAAIuB,KAAKpB,MAAMoB,EAAf;AACA;AACA;AACAF,SAAGlB,KAAH,GAAWA,KAAX,CAAkBkB,GAAGnB,MAAH,GAAYA,MAAZ,CAAoBmB,GAAGC,MAAH,GAAY,IAAZ,EAAkBD,GAAGE,EAAH,GAAQA,EAA1B;;AAEtC,aAAO,IAAP,EAAa;AACX,YAAIyD,aAAazD,GAAG7B,MAAH,GAAY6B,GAAG0D,GAAH,EAAZ,GAAuBlC,KAAxC;AACA,YAAIiC,WAAWpF,IAAX,CAAJ,EAAsB;AACpB,iBAAM2B,GAAG7B,MAAH,IAAa6B,GAAGA,GAAG7B,MAAH,GAAY,CAAf,EAAkB2C,GAArC;AACEd,eAAG0D,GAAH;AADF,WAEA,OAAO5D,GAAGC,MAAH,IAAatB,KAApB;AACD;AACF;AACF;;AAED,WAAO;AACLkF,kBAAY,sBAAW;AACrB,eAAO;AACL5E,oBAAUL,SADL;AAELsB,cAAI,EAFC;AAGLU,mBAAS,EAACC,UAAU,CAACjD,UAAZ,EAAwBkD,QAAQ,CAAhC,EAAmCL,MAAM,KAAzC,EAAgDqD,OAAO,KAAvD,EAHJ;AAIL9F,oBAAUF,WAJL;AAKL+C,oBAAU;AALL,SAAP;AAOD,OATI;;AAWLkD,aAAO,eAASlF,MAAT,EAAiBC,KAAjB,EAAwB;AAC7B,YAAID,OAAOmF,GAAP,EAAJ,EAAkB;AAChB,cAAI,CAAClF,MAAM8B,OAAN,CAAcqD,cAAd,CAA6B,OAA7B,CAAL,EACEnF,MAAM8B,OAAN,CAAckD,KAAd,GAAsB,KAAtB;AACFhF,gBAAM+B,QAAN,GAAiBhC,OAAOqF,WAAP,EAAjB;AACD;AACD,YAAIrF,OAAOsF,QAAP,EAAJ,EAAuB,OAAO,IAAP;AACvB5F,eAAOC,UAAU,IAAjB;AACA,YAAIG,QAAQG,MAAMG,QAAN,CAAeJ,MAAf,EAAuBC,KAAvB,CAAZ;AACA,YAAIH,SAAS,SAAb,EAAwB,OAAOA,KAAP;AACxB,YAAI,CAACG,MAAM8B,OAAN,CAAcqD,cAAd,CAA6B,OAA7B,CAAL,EACEnF,MAAM8B,OAAN,CAAckD,KAAd,GAAsB,IAAtB;AACF,YAAIvF,QAAQ,QAAZ,EAAsB,OAAOI,KAAP;AACtB,YAAI,CAACH,OAAL,EAAcA,UAAUK,OAAOa,OAAP,EAAV;AACd,eAAOgE,MAAM5E,KAAN,EAAaD,MAAb,EAAqBF,KAArB,CAAP;AACD,OA1BI;;AA4BLyF,cAAQ,gBAAStF,KAAT,EAAgBuF,SAAhB,EAA2B;AACjC,YAAIvF,MAAMG,QAAN,IAAkBL,SAAtB,EAAiC,OAAO,CAAP;AACjC,YAAI0F,YAAYD,aAAaA,UAAUE,MAAV,CAAiB,CAAjB,CAA7B;AAAA,YAAkD3D,UAAU9B,MAAM8B,OAAlE;AAAA,YACIH,OAAOG,QAAQH,IADnB;AAAA,YACyB+D,UAAUF,aAAa7D,IADhD;AAEA,YAAIA,QAAQ,MAAZ,EAAoB,OAAOG,QAAQC,QAAR,GAAmBjD,UAA1B;AACpB,YAAIgD,QAAQkD,KAAZ,EAAmB,OAAOlD,QAAQE,MAAR,IAAkB0D,UAAU,CAAV,GAAc,CAAhC,CAAP;AACnB,eAAO5D,QAAQC,QAAR,IAAoB2D,UAAU,CAAV,GAAe5D,QAAQF,IAAR,IAAgB,KAAhB,GAAwB7C,aAAxB,GAAwCD,UAA3E,CAAP;AACD,OAnCI;;AAqCL6G,qBAAe,IArCV;AAsCLC,yBAAmB,IAtCd;AAuCLC,uBAAiB,IAvCZ;AAwCLC,mBAAa,IAxCR;AAyCLC,YAAM;AAzCD,KAAP;AA2CD,GAjbD;;AAmbAnH,aAAWoH,UAAX,CAAsB,gBAAtB,EAAwC,MAAxC;AAEC,CA/bD","file":"rust.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rust\", function() {\n  var indentUnit = 4, altIndentUnit = 2;\n  var valKeywords = {\n    \"if\": \"if-style\", \"while\": \"if-style\", \"loop\": \"else-style\", \"else\": \"else-style\",\n    \"do\": \"else-style\", \"ret\": \"else-style\", \"fail\": \"else-style\",\n    \"break\": \"atom\", \"cont\": \"atom\", \"const\": \"let\", \"resource\": \"fn\",\n    \"let\": \"let\", \"fn\": \"fn\", \"for\": \"for\", \"alt\": \"alt\", \"iface\": \"iface\",\n    \"impl\": \"impl\", \"type\": \"type\", \"enum\": \"enum\", \"mod\": \"mod\",\n    \"as\": \"op\", \"true\": \"atom\", \"false\": \"atom\", \"assert\": \"op\", \"check\": \"op\",\n    \"claim\": \"op\", \"native\": \"ignore\", \"unsafe\": \"ignore\", \"import\": \"else-style\",\n    \"export\": \"else-style\", \"copy\": \"op\", \"log\": \"op\", \"log_err\": \"op\",\n    \"use\": \"op\", \"bind\": \"op\", \"self\": \"atom\", \"struct\": \"enum\"\n  };\n  var typeKeywords = function() {\n    var keywords = {\"fn\": \"fn\", \"block\": \"fn\", \"obj\": \"obj\"};\n    var atoms = \"bool uint int i8 i16 i32 i64 u8 u16 u32 u64 float f32 f64 str char\".split(\" \");\n    for (var i = 0, e = atoms.length; i < e; ++i) keywords[atoms[i]] = \"atom\";\n    return keywords;\n  }();\n  var operatorChar = /[+\\-*&%=<>!?|\\.@]/;\n\n  // Tokenizer\n\n  // Used as scratch variable to communicate multiple values without\n  // consing up tons of objects.\n  var tcat, content;\n  function r(tc, style) {\n    tcat = tc;\n    return style;\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      tcat = \"atom\";\n      if (stream.eat(\"\\\\\")) {\n        if (stream.skipTo(\"'\")) { stream.next(); return \"string\"; }\n        else { return \"error\"; }\n      } else {\n        stream.next();\n        return stream.eat(\"'\") ? \"string\" : \"error\";\n      }\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"/\")) { stream.skipToEnd(); return \"comment\"; }\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment(1);\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch == \"#\") {\n      if (stream.eat(\"[\")) { tcat = \"open-attr\"; return null; }\n      stream.eatWhile(/\\w/);\n      return r(\"macro\", \"meta\");\n    }\n    if (ch == \":\" && stream.match(\":<\")) {\n      return r(\"op\", null);\n    }\n    if (ch.match(/\\d/) || (ch == \".\" && stream.eat(/\\d/))) {\n      var flp = false;\n      if (!stream.match(/^x[\\da-f]+/i) && !stream.match(/^b[01]+/)) {\n        stream.eatWhile(/\\d/);\n        if (stream.eat(\".\")) { flp = true; stream.eatWhile(/\\d/); }\n        if (stream.match(/^e[+\\-]?\\d+/i)) { flp = true; }\n      }\n      if (flp) stream.match(/^f(?:32|64)/);\n      else stream.match(/^[ui](?:8|16|32|64)/);\n      return r(\"atom\", \"number\");\n    }\n    if (ch.match(/[()\\[\\]{}:;,]/)) return r(ch, null);\n    if (ch == \"-\" && stream.eat(\">\")) return r(\"->\", null);\n    if (ch.match(operatorChar)) {\n      stream.eatWhile(operatorChar);\n      return r(\"op\", null);\n    }\n    stream.eatWhile(/\\w/);\n    content = stream.current();\n    if (stream.match(/^::\\w/)) {\n      stream.backUp(1);\n      return r(\"prefix\", \"variable-2\");\n    }\n    if (state.keywords.propertyIsEnumerable(content))\n      return r(state.keywords[content], content.match(/true|false/) ? \"atom\" : \"keyword\");\n    return r(\"name\", \"variable\");\n  }\n\n  function tokenString(stream, state) {\n    var ch, escaped = false;\n    while (ch = stream.next()) {\n      if (ch == '\"' && !escaped) {\n        state.tokenize = tokenBase;\n        return r(\"atom\", \"string\");\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    // Hack to not confuse the parser when a string is split in\n    // pieces.\n    return r(\"op\", \"string\");\n  }\n\n  function tokenComment(depth) {\n    return function(stream, state) {\n      var lastCh = null, ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && lastCh == \"*\") {\n          if (depth == 1) {\n            state.tokenize = tokenBase;\n            break;\n          } else {\n            state.tokenize = tokenComment(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n        if (ch == \"*\" && lastCh == \"/\") {\n          state.tokenize = tokenComment(depth + 1);\n          return state.tokenize(stream, state);\n        }\n        lastCh = ch;\n      }\n      return \"comment\";\n    };\n  }\n\n  // Parser\n\n  var cx = {state: null, stream: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state;\n      state.lexical = {indented: state.indented, column: cx.stream.column(),\n                       type: type, prev: state.lexical, info: info};\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  function typecx() { cx.state.keywords = typeKeywords; }\n  function valcx() { cx.state.keywords = valKeywords; }\n  poplex.lex = typecx.lex = valcx.lex = true;\n\n  function commasep(comb, end) {\n    function more(type) {\n      if (type == \",\") return cont(comb, more);\n      if (type == end) return cont();\n      return cont(more);\n    }\n    return function(type) {\n      if (type == end) return cont();\n      return pass(comb, more);\n    };\n  }\n\n  function stat_of(comb, tag) {\n    return cont(pushlex(\"stat\", tag), comb, poplex, block);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    if (type == \"let\") return stat_of(letdef1, \"let\");\n    if (type == \"fn\") return stat_of(fndef);\n    if (type == \"type\") return cont(pushlex(\"stat\"), tydef, endstatement, poplex, block);\n    if (type == \"enum\") return stat_of(enumdef);\n    if (type == \"mod\") return stat_of(mod);\n    if (type == \"iface\") return stat_of(iface);\n    if (type == \"impl\") return stat_of(impl);\n    if (type == \"open-attr\") return cont(pushlex(\"]\"), commasep(expression, \"]\"), poplex);\n    if (type == \"ignore\" || type.match(/[\\]\\);,]/)) return cont(block);\n    return pass(pushlex(\"stat\"), expression, poplex, endstatement, block);\n  }\n  function endstatement(type) {\n    if (type == \";\") return cont();\n    return pass();\n  }\n  function expression(type) {\n    if (type == \"atom\" || type == \"name\") return cont(maybeop);\n    if (type == \"{\") return cont(pushlex(\"}\"), exprbrace, poplex);\n    if (type.match(/[\\[\\(]/)) return matchBrackets(type, expression);\n    if (type.match(/[\\]\\)\\};,]/)) return pass();\n    if (type == \"if-style\") return cont(expression, expression);\n    if (type == \"else-style\" || type == \"op\") return cont(expression);\n    if (type == \"for\") return cont(pattern, maybetype, inop, expression, expression);\n    if (type == \"alt\") return cont(expression, altbody);\n    if (type == \"fn\") return cont(fndef);\n    if (type == \"macro\") return cont(macro);\n    return cont();\n  }\n  function maybeop(type) {\n    if (content == \".\") return cont(maybeprop);\n    if (content == \"::<\"){return cont(typarams, maybeop);}\n    if (type == \"op\" || content == \":\") return cont(expression);\n    if (type == \"(\" || type == \"[\") return matchBrackets(type, expression);\n    return pass();\n  }\n  function maybeprop() {\n    if (content.match(/^\\w+$/)) {cx.marked = \"variable\"; return cont(maybeop);}\n    return pass(expression);\n  }\n  function exprbrace(type) {\n    if (type == \"op\") {\n      if (content == \"|\") return cont(blockvars, poplex, pushlex(\"}\", \"block\"), block);\n      if (content == \"||\") return cont(poplex, pushlex(\"}\", \"block\"), block);\n    }\n    if (content == \"mutable\" || (content.match(/^\\w+$/) && cx.stream.peek() == \":\"\n                                 && !cx.stream.match(\"::\", false)))\n      return pass(record_of(expression));\n    return pass(block);\n  }\n  function record_of(comb) {\n    function ro(type) {\n      if (content == \"mutable\" || content == \"with\") {cx.marked = \"keyword\"; return cont(ro);}\n      if (content.match(/^\\w*$/)) {cx.marked = \"variable\"; return cont(ro);}\n      if (type == \":\") return cont(comb, ro);\n      if (type == \"}\") return cont();\n      return cont(ro);\n    }\n    return ro;\n  }\n  function blockvars(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(blockvars);}\n    if (type == \"op\" && content == \"|\") return cont();\n    return cont(blockvars);\n  }\n\n  function letdef1(type) {\n    if (type.match(/[\\]\\)\\};]/)) return cont();\n    if (content == \"=\") return cont(expression, letdef2);\n    if (type == \",\") return cont(letdef1);\n    return pass(pattern, maybetype, letdef1);\n  }\n  function letdef2(type) {\n    if (type.match(/[\\]\\)\\};,]/)) return pass(letdef1);\n    else return pass(expression, letdef2);\n  }\n  function maybetype(type) {\n    if (type == \":\") return cont(typecx, rtype, valcx);\n    return pass();\n  }\n  function inop(type) {\n    if (type == \"name\" && content == \"in\") {cx.marked = \"keyword\"; return cont();}\n    return pass();\n  }\n  function fndef(type) {\n    if (content == \"@\" || content == \"~\") {cx.marked = \"keyword\"; return cont(fndef);}\n    if (type == \"name\") {cx.marked = \"def\"; return cont(fndef);}\n    if (content == \"<\") return cont(typarams, fndef);\n    if (type == \"{\") return pass(expression);\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(argdef, \")\"), poplex, fndef);\n    if (type == \"->\") return cont(typecx, rtype, valcx, fndef);\n    if (type == \";\") return cont();\n    return cont(fndef);\n  }\n  function tydef(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(tydef);}\n    if (content == \"<\") return cont(typarams, tydef);\n    if (content == \"=\") return cont(typecx, rtype, valcx);\n    return cont(tydef);\n  }\n  function enumdef(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(enumdef);}\n    if (content == \"<\") return cont(typarams, enumdef);\n    if (content == \"=\") return cont(typecx, rtype, valcx, endstatement);\n    if (type == \"{\") return cont(pushlex(\"}\"), typecx, enumblock, valcx, poplex);\n    return cont(enumdef);\n  }\n  function enumblock(type) {\n    if (type == \"}\") return cont();\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(rtype, \")\"), poplex, enumblock);\n    if (content.match(/^\\w+$/)) cx.marked = \"def\";\n    return cont(enumblock);\n  }\n  function mod(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(mod);}\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    return pass();\n  }\n  function iface(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(iface);}\n    if (content == \"<\") return cont(typarams, iface);\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    return pass();\n  }\n  function impl(type) {\n    if (content == \"<\") return cont(typarams, impl);\n    if (content == \"of\" || content == \"for\") {cx.marked = \"keyword\"; return cont(rtype, impl);}\n    if (type == \"name\") {cx.marked = \"def\"; return cont(impl);}\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    return pass();\n  }\n  function typarams() {\n    if (content == \">\") return cont();\n    if (content == \",\") return cont(typarams);\n    if (content == \":\") return cont(rtype, typarams);\n    return pass(rtype, typarams);\n  }\n  function argdef(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(argdef);}\n    if (type == \":\") return cont(typecx, rtype, valcx);\n    return pass();\n  }\n  function rtype(type) {\n    if (type == \"name\") {cx.marked = \"variable-3\"; return cont(rtypemaybeparam); }\n    if (content == \"mutable\") {cx.marked = \"keyword\"; return cont(rtype);}\n    if (type == \"atom\") return cont(rtypemaybeparam);\n    if (type == \"op\" || type == \"obj\") return cont(rtype);\n    if (type == \"fn\") return cont(fntype);\n    if (type == \"{\") return cont(pushlex(\"{\"), record_of(rtype), poplex);\n    return matchBrackets(type, rtype);\n  }\n  function rtypemaybeparam() {\n    if (content == \"<\") return cont(typarams);\n    return pass();\n  }\n  function fntype(type) {\n    if (type == \"(\") return cont(pushlex(\"(\"), commasep(rtype, \")\"), poplex, fntype);\n    if (type == \"->\") return cont(rtype);\n    return pass();\n  }\n  function pattern(type) {\n    if (type == \"name\") {cx.marked = \"def\"; return cont(patternmaybeop);}\n    if (type == \"atom\") return cont(patternmaybeop);\n    if (type == \"op\") return cont(pattern);\n    if (type.match(/[\\]\\)\\};,]/)) return pass();\n    return matchBrackets(type, pattern);\n  }\n  function patternmaybeop(type) {\n    if (type == \"op\" && content == \".\") return cont();\n    if (content == \"to\") {cx.marked = \"keyword\"; return cont(pattern);}\n    else return pass();\n  }\n  function altbody(type) {\n    if (type == \"{\") return cont(pushlex(\"}\", \"alt\"), altblock1, poplex);\n    return pass();\n  }\n  function altblock1(type) {\n    if (type == \"}\") return cont();\n    if (type == \"|\") return cont(altblock1);\n    if (content == \"when\") {cx.marked = \"keyword\"; return cont(expression, altblock2);}\n    if (type.match(/[\\]\\);,]/)) return cont(altblock1);\n    return pass(pattern, altblock2);\n  }\n  function altblock2(type) {\n    if (type == \"{\") return cont(pushlex(\"}\", \"alt\"), block, poplex, altblock1);\n    else return pass(altblock1);\n  }\n\n  function macro(type) {\n    if (type.match(/[\\[\\(\\{]/)) return matchBrackets(type, expression);\n    return pass();\n  }\n  function matchBrackets(type, comb) {\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(comb, \"]\"), poplex);\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(comb, \")\"), poplex);\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(comb, \"}\"), poplex);\n    return cont();\n  }\n\n  function parse(state, stream, style) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n    while (true) {\n      var combinator = cc.length ? cc.pop() : block;\n      if (combinator(tcat)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        return cx.marked || style;\n      }\n    }\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        cc: [],\n        lexical: {indented: -indentUnit, column: 0, type: \"top\", align: false},\n        keywords: valKeywords,\n        indented: 0\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      tcat = content = null;\n      var style = state.tokenize(stream, state);\n      if (style == \"comment\") return style;\n      if (!state.lexical.hasOwnProperty(\"align\"))\n        state.lexical.align = true;\n      if (tcat == \"prefix\") return style;\n      if (!content) content = stream.current();\n      return parse(state, stream, style);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical,\n          type = lexical.type, closing = firstChar == type;\n      if (type == \"stat\") return lexical.indented + indentUnit;\n      if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      return lexical.indented + (closing ? 0 : (lexical.info == \"alt\" ? altIndentUnit : indentUnit));\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rustsrc\", \"rust\");\n\n});\n"]}