{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/python/python.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","wordRegexp","words","RegExp","join","wordOperators","commonKeywords","commonBuiltins","py2","builtins","keywords","py3","registerHelper","concat","top","state","scopes","length","defineMode","conf","parserConf","ERRORCLASS","singleDelimiters","doubleOperators","doubleDelimiters","tripleDelimiters","version","parseInt","singleOperators","identifiers","hangingIndent","indentUnit","myKeywords","myBuiltins","extra_keywords","undefined","extra_builtins","stringPrefixes","tokenBase","stream","sol","type","scopeOffset","offset","eatSpace","lineOffset","indentation","pushScope","dedent","errorToken","style","tokenBaseInner","ch","peek","skipToEnd","match","floatLiteral","eat","intLiteral","tokenize","tokenStringFactory","current","lastToken","next","delimiter","indexOf","charAt","toLowerCase","substr","singleline","OUTCLASS","tokenString","eol","eatWhile","singleLineStringErrors","isString","align","pop","column","push","indented","tokenLexer","lastStyle","lambda","delimiter_index","slice","external","startState","basecolumn","token","addErr","indent","textAfter","Pass","scope","closing","lineComment","fold","defineMIME","str","split","name"],"mappings":"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","file":"python.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  var py2 = {builtins: [\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                        \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                        \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"],\n             keywords: [\"exec\", \"print\"]};\n  var py3 = {builtins: [\"ascii\", \"bytes\", \"exec\", \"print\"],\n             keywords: [\"nonlocal\", \"False\", \"True\", \"None\"]};\n\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var singleDelimiters = parserConf.singleDelimiters || new RegExp(\"^[\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}@,:`=;\\\\.]\");\n    var doubleOperators = parserConf.doubleOperators || new RegExp(\"^((==)|(!=)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\\\*\\\\*))\");\n    var doubleDelimiters = parserConf.doubleDelimiters || new RegExp(\"^((\\\\+=)|(\\\\-=)|(\\\\*=)|(%=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\n    var tripleDelimiters = parserConf.tripleDelimiters || new RegExp(\"^((//=)|(>>=)|(<<=)|(\\\\*\\\\*=))\");\n\n    if (parserConf.version && parseInt(parserConf.version, 10) == 3){\n        // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n        var singleOperators = parserConf.singleOperators || new RegExp(\"^[\\\\+\\\\-\\\\*/%&|\\\\^~<>!@]\");\n        var identifiers = parserConf.identifiers|| new RegExp(\"^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*\");\n    } else {\n        var singleOperators = parserConf.singleOperators || new RegExp(\"^[\\\\+\\\\-\\\\*/%&|\\\\^~<>!]\");\n        var identifiers = parserConf.identifiers|| new RegExp(\"^[_A-Za-z][_A-Za-z0-9]*\");\n    }\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if(parserConf.extra_keywords != undefined){\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n    }\n    if(parserConf.extra_builtins != undefined){\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n    }\n    if (parserConf.version && parseInt(parserConf.version, 10) == 3) {\n      myKeywords = myKeywords.concat(py3.keywords);\n      myBuiltins = myBuiltins.concat(py3.builtins);\n      var stringPrefixes = new RegExp(\"^(([rb]|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      myKeywords = myKeywords.concat(py2.keywords);\n      myBuiltins = myBuiltins.concat(py2.builtins);\n      var stringPrefixes = new RegExp(\"^(([rub]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      // Handle scope changes\n      if (stream.sol() && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushScope(stream, state, \"py\");\n          else if (lineOffset < scopeOffset && dedent(stream, state))\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state) {\n      if (stream.eatSpace()) return null;\n\n      var ch = stream.peek();\n\n      // Handle Comments\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^\\d+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenStringFactory(stream.current());\n        return state.tokenize(stream, state);\n      }\n\n      // Handle operators and Delimiters\n      if (stream.match(tripleDelimiters) || stream.match(doubleDelimiters))\n        return null;\n\n      if (stream.match(doubleOperators)\n          || stream.match(singleOperators)\n          || stream.match(wordOperators))\n        return \"operator\";\n\n      if (stream.match(singleDelimiters))\n        return null;\n\n      if (stream.match(keywords))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n      while (\"rub\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenBase;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushScope(stream, state, type) {\n      var offset = 0, align = null;\n      if (type == \"py\") {\n        while (top(state).type != \"py\")\n          state.scopes.pop();\n      }\n      offset = top(state).offset + (type == \"py\" ? conf.indentUnit : hangingIndent);\n      if (type != \"py\" && !stream.match(/^(\\s|#.*)*$/, false))\n        align = stream.column() + 1;\n      state.scopes.push({offset: offset, type: type, align: align});\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle '.' connected identifiers\n      if (current == \".\") {\n        style = stream.match(identifiers, false) ? null : ERRORCLASS;\n        if (style == null && state.lastStyle == \"meta\") {\n          // Apply 'meta' style to '.' connected identifiers when\n          // appropriate.\n          style = \"meta\";\n        }\n        return style;\n      }\n\n      // Handle decorators\n      if (current == \"@\"){\n        if(parserConf.version && parseInt(parserConf.version, 10) == 3){\n            return stream.match(identifiers, false) ? \"meta\" : \"operator\";\n        } else {\n            return stream.match(identifiers, false) ? \"meta\" : ERRORCLASS;\n        }\n      }\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastStyle == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushScope(stream, state, \"py\");\n\n      var delimiter_index = current.length == 1 ? \"[({\".indexOf(current) : -1;\n      if (delimiter_index != -1)\n        pushScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n      delimiter_index = \"])}\".indexOf(current);\n      if (delimiter_index != -1) {\n        if (top(state).type == current) state.scopes.pop();\n        else return ERRORCLASS;\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          lastStyle: null,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        state.lastStyle = style;\n\n        var current = stream.current();\n        if (current && style)\n          state.lastToken = current;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state);\n        var closing = textAfter && textAfter.charAt(0) == scope.type;\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0);\n        else if (closing && state.scopes.length > 1)\n          return state.scopes[state.scopes.length - 2].offset;\n        else\n          return scope.offset;\n      },\n\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except\"+\n                          \"extern gil include nogil property public\"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n"]}