{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/eiffel/eiffel.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME"],"mappings":"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","file":"eiffel.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"eiffel\", function() {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    'note',\n    'across',\n    'when',\n    'variant',\n    'until',\n    'unique',\n    'undefine',\n    'then',\n    'strip',\n    'select',\n    'retry',\n    'rescue',\n    'require',\n    'rename',\n    'reference',\n    'redefine',\n    'prefix',\n    'once',\n    'old',\n    'obsolete',\n    'loop',\n    'local',\n    'like',\n    'is',\n    'inspect',\n    'infix',\n    'include',\n    'if',\n    'frozen',\n    'from',\n    'external',\n    'export',\n    'ensure',\n    'end',\n    'elseif',\n    'else',\n    'do',\n    'creation',\n    'create',\n    'check',\n    'alias',\n    'agent',\n    'separate',\n    'invariant',\n    'inherit',\n    'indexing',\n    'feature',\n    'expanded',\n    'deferred',\n    'class',\n    'Void',\n    'True',\n    'Result',\n    'Precursor',\n    'False',\n    'Current',\n    'create',\n    'attached',\n    'detachable',\n    'as',\n    'and',\n    'implies',\n    'not',\n    'or'\n  ]);\n  var operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    curPunc = null;\n    if (stream.eatSpace()) return null;\n    var ch = stream.next();\n    if (ch == '\"'||ch == \"'\") {\n      return chain(readQuoted(ch, \"string\"), stream, state);\n    } else if (ch == \"-\"&&stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \":\"&&stream.eat(\"=\")) {\n      return \"operator\";\n    } else if (/[0-9]/.test(ch)) {\n      stream.eatWhile(/[xXbBCc0-9\\.]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[a-zA-Z_0-9]/.test(ch)) {\n      stream.eatWhile(/[a-zA-Z_0-9]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n      stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function readQuoted(quote, style,  unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        escaped = !escaped && ch == \"%\";\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase]};\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n          : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n          : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n          : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n          : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n          : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n          : /^[0-9]+$/g.test(word) ? \"number\"\n          : \"variable\";\n      }\n      return style;\n    },\n    lineComment: \"--\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n\n});\n"]}