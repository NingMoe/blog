{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/r/r.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","wordObj","str","words","split","res","i","length","atoms","builtins","keywords","blockkeywords","opChars","curPunc","tokenBase","stream","state","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","tokenString","word","current","propertyIsEnumerable","skipTo","ctx","argList","quote","backUp","push","type","indent","align","column","prev","pop","startState","indentUnit","afterIdent","token","sol","indentation","eatSpace","style","ctype","textAfter","firstChar","charAt","closing","lineComment","defineMIME"],"mappings":"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","file":"r.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"r\", function(config) {\n  function wordObj(str) {\n    var words = str.split(\" \"), res = {};\n    for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n    return res;\n  }\n  var atoms = wordObj(\"NULL NA Inf NaN NA_integer_ NA_real_ NA_complex_ NA_character_\");\n  var builtins = wordObj(\"list quote bquote eval return call parse deparse\");\n  var keywords = wordObj(\"if else repeat while function for in next break\");\n  var blockkeywords = wordObj(\"if else repeat while function for\");\n  var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    curPunc = null;\n    var ch = stream.next();\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"0\" && stream.eat(\"x\")) {\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    } else if (ch == \".\" && stream.eat(/\\d/)) {\n      stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n      return \"number\";\n    } else if (ch == \"'\" || ch == '\"') {\n      state.tokenize = tokenString(ch);\n      return \"string\";\n    } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n      return \"keyword\";\n    } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n      stream.eatWhile(/[\\w\\.]/);\n      var word = stream.current();\n      if (atoms.propertyIsEnumerable(word)) return \"atom\";\n      if (keywords.propertyIsEnumerable(word)) {\n        // Block keywords start new blocks, except 'else if', which only starts\n        // one new block for the 'if', no block for the 'else'.\n        if (blockkeywords.propertyIsEnumerable(word) &&\n            !stream.match(/\\s*if(\\s+|$)/, false))\n          curPunc = \"block\";\n        return \"keyword\";\n      }\n      if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n      return \"variable\";\n    } else if (ch == \"%\") {\n      if (stream.skipTo(\"%\")) stream.next();\n      return \"variable-2\";\n    } else if (ch == \"<\" && stream.eat(\"-\")) {\n      return \"arrow\";\n    } else if (ch == \"=\" && state.ctx.argList) {\n      return \"arg-is\";\n    } else if (opChars.test(ch)) {\n      if (ch == \"$\") return \"dollar\";\n      stream.eatWhile(opChars);\n      return \"operator\";\n    } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n      curPunc = ch;\n      if (ch == \";\") return \"semi\";\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      if (stream.eat(\"\\\\\")) {\n        var ch = stream.next();\n        if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n        else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n        else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n        else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n        else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n        return \"string-2\";\n      } else {\n        var next;\n        while ((next = stream.next()) != null) {\n          if (next == quote) { state.tokenize = tokenBase; break; }\n          if (next == \"\\\\\") { stream.backUp(1); break; }\n        }\n        return \"string\";\n      }\n    };\n  }\n\n  function push(state, type, stream) {\n    state.ctx = {type: type,\n                 indent: state.indent,\n                 align: null,\n                 column: stream.column(),\n                 prev: state.ctx};\n  }\n  function pop(state) {\n    state.indent = state.ctx.indent;\n    state.ctx = state.ctx.prev;\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: tokenBase,\n              ctx: {type: \"top\",\n                    indent: -config.indentUnit,\n                    align: false},\n              indent: 0,\n              afterIdent: false};\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (state.ctx.align == null) state.ctx.align = false;\n        state.indent = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (style != \"comment\" && state.ctx.align == null) state.ctx.align = true;\n\n      var ctype = state.ctx.type;\n      if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && ctype == \"block\") pop(state);\n      if (curPunc == \"{\") push(state, \"}\", stream);\n      else if (curPunc == \"(\") {\n        push(state, \")\", stream);\n        if (state.afterIdent) state.ctx.argList = true;\n      }\n      else if (curPunc == \"[\") push(state, \"]\", stream);\n      else if (curPunc == \"block\") push(state, \"block\", stream);\n      else if (curPunc == ctype) pop(state);\n      state.afterIdent = style == \"variable\" || style == \"keyword\";\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n          closing = firstChar == ctx.type;\n      if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indent + (closing ? 0 : config.indentUnit);\n    },\n\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n\n});\n"]}