{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/haskell/haskell.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","_config","modeConfig","switchState","source","setState","f","smallRE","largeRE","digitRE","hexitRE","octitRE","idRE","symbolRE","specialRE","whiteCharRE","normal","eatWhile","ch","next","test","eat","t","ncomment","stringLiteral","match","skipToEnd","type","nest","currNest","eol","stringGap","wellKnownWords","wkw","setType","i","arguments","length","override","overrideKeywords","word","hasOwnProperty","startState","copyState","s","token","stream","state","w","current","blockCommentStart","blockCommentEnd","lineComment","defineMIME"],"mappings":"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","file":"haskell.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haskell\", function(_config, modeConfig) {\n\n  function switchState(source, setState, f) {\n    setState(f);\n    return f(source, setState);\n  }\n\n  // These should all be Unicode extended, as per the Haskell 2010 report\n  var smallRE = /[a-z_]/;\n  var largeRE = /[A-Z]/;\n  var digitRE = /\\d/;\n  var hexitRE = /[0-9A-Fa-f]/;\n  var octitRE = /[0-7]/;\n  var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n  var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n  var specialRE = /[(),;[\\]`{}]/;\n  var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n  function normal(source, setState) {\n    if (source.eatWhile(whiteCharRE)) {\n      return null;\n    }\n\n    var ch = source.next();\n    if (specialRE.test(ch)) {\n      if (ch == '{' && source.eat('-')) {\n        var t = \"comment\";\n        if (source.eat('#')) {\n          t = \"meta\";\n        }\n        return switchState(source, setState, ncomment(t, 1));\n      }\n      return null;\n    }\n\n    if (ch == '\\'') {\n      if (source.eat('\\\\')) {\n        source.next();  // should handle other escapes here\n      }\n      else {\n        source.next();\n      }\n      if (source.eat('\\'')) {\n        return \"string\";\n      }\n      return \"error\";\n    }\n\n    if (ch == '\"') {\n      return switchState(source, setState, stringLiteral);\n    }\n\n    if (largeRE.test(ch)) {\n      source.eatWhile(idRE);\n      if (source.eat('.')) {\n        return \"qualifier\";\n      }\n      return \"variable-2\";\n    }\n\n    if (smallRE.test(ch)) {\n      source.eatWhile(idRE);\n      return \"variable\";\n    }\n\n    if (digitRE.test(ch)) {\n      if (ch == '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexitRE); // should require at least 1\n          return \"integer\";\n        }\n        if (source.eat(/[oO]/)) {\n          source.eatWhile(octitRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      source.eatWhile(digitRE);\n      var t = \"number\";\n      if (source.match(/^\\.\\d+/)) {\n        t = \"number\";\n      }\n      if (source.eat(/[eE]/)) {\n        t = \"number\";\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return t;\n    }\n\n    if (ch == \".\" && source.eat(\".\"))\n      return \"keyword\";\n\n    if (symbolRE.test(ch)) {\n      if (ch == '-' && source.eat(/-/)) {\n        source.eatWhile(/-/);\n        if (!source.eat(symbolRE)) {\n          source.skipToEnd();\n          return \"comment\";\n        }\n      }\n      var t = \"variable\";\n      if (ch == ':') {\n        t = \"variable-2\";\n      }\n      source.eatWhile(symbolRE);\n      return t;\n    }\n\n    return \"error\";\n  }\n\n  function ncomment(type, nest) {\n    if (nest == 0) {\n      return normal;\n    }\n    return function(source, setState) {\n      var currNest = nest;\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '{' && source.eat('-')) {\n          ++currNest;\n        }\n        else if (ch == '-' && source.eat('}')) {\n          --currNest;\n          if (currNest == 0) {\n            setState(normal);\n            return type;\n          }\n        }\n      }\n      setState(ncomment(type, currNest));\n      return type;\n    };\n  }\n\n  function stringLiteral(source, setState) {\n    while (!source.eol()) {\n      var ch = source.next();\n      if (ch == '\"') {\n        setState(normal);\n        return \"string\";\n      }\n      if (ch == '\\\\') {\n        if (source.eol() || source.eat(whiteCharRE)) {\n          setState(stringGap);\n          return \"string\";\n        }\n        if (source.eat('&')) {\n        }\n        else {\n          source.next(); // should handle other escapes here\n        }\n      }\n    }\n    setState(normal);\n    return \"error\";\n  }\n\n  function stringGap(source, setState) {\n    if (source.eat('\\\\')) {\n      return switchState(source, setState, stringLiteral);\n    }\n    source.next();\n    setState(normal);\n    return \"error\";\n  }\n\n\n  var wellKnownWords = (function() {\n    var wkw = {};\n    function setType(t) {\n      return function () {\n        for (var i = 0; i < arguments.length; i++)\n          wkw[arguments[i]] = t;\n      };\n    }\n\n    setType(\"keyword\")(\n      \"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\",\n      \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\",\n      \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n\n    setType(\"keyword\")(\n      \"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"\\\"\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n\n    setType(\"builtin\")(\n      \"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<=\", \"=<<\",\n      \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\", \"**\");\n\n    setType(\"builtin\")(\n      \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\", \"Eq\",\n      \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\", \"GT\",\n      \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\",\n      \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\",\n      \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\",\n      \"String\", \"True\");\n\n    setType(\"builtin\")(\n      \"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\",\n      \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\",\n      \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\",\n      \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\",\n      \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\",\n      \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\",\n      \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\",\n      \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\",\n      \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\",\n      \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\",\n      \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\",\n      \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\",\n      \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\",\n      \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\",\n      \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\",\n      \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\",\n      \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\",\n      \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\",\n      \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\",\n      \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\",\n      \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\",\n      \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\",\n      \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\",\n      \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\",\n      \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\",\n      \"zip3\", \"zipWith\", \"zipWith3\");\n\n    var override = modeConfig.overrideKeywords;\n    if (override) for (var word in override) if (override.hasOwnProperty(word))\n      wkw[word] = override[word];\n\n    return wkw;\n  })();\n\n\n\n  return {\n    startState: function ()  { return { f: normal }; },\n    copyState:  function (s) { return { f: s.f }; },\n\n    token: function(stream, state) {\n      var t = state.f(stream, function(s) { state.f = s; });\n      var w = stream.current();\n      return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n    },\n\n    blockCommentStart: \"{-\",\n    blockCommentEnd: \"-}\",\n    lineComment: \"--\"\n  };\n\n});\n\nCodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n\n});\n"]}