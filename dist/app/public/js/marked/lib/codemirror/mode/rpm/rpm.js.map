{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/rpm/rpm.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","headerSeperator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","ch","peek","skipToEnd","eol"],"mappings":"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","file":"rpm.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rpm-changes\", function() {\n  var headerSeperator = /^-+$/;\n  var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n  var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n\n  return {\n    token: function(stream) {\n      if (stream.sol()) {\n        if (stream.match(headerSeperator)) { return 'tag'; }\n        if (stream.match(headerLine)) { return 'tag'; }\n      }\n      if (stream.match(simpleEmail)) { return 'string'; }\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n// Quick and dirty spec file highlighting\n\nCodeMirror.defineMode(\"rpm-spec\", function() {\n  var arch = /^(i386|i586|i686|x86_64|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n\n  var preamble = /^(Name|Version|Release|License|Summary|Url|Group|Source|BuildArch|BuildRequires|BuildRoot|AutoReqProv|Provides|Requires(\\(\\w+\\))?|Obsoletes|Conflicts|Recommends|Source\\d*|Patch\\d*|ExclusiveArch|NoSource|Supplements):/;\n  var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pre|post|triggerin|triggerun|pretrans|posttrans|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n  var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n  var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n  var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n  return {\n    startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      if (ch == \"#\") { stream.skipToEnd(); return \"comment\"; }\n\n      if (stream.sol()) {\n        if (stream.match(preamble)) { return \"preamble\"; }\n        if (stream.match(section)) { return \"section\"; }\n      }\n\n      if (stream.match(/^\\$\\w+/)) { return \"def\"; } // Variables like '$RPM_BUILD_ROOT'\n      if (stream.match(/^\\$\\{\\w+\\}/)) { return \"def\"; } // Variables like '${RPM_BUILD_ROOT}'\n\n      if (stream.match(control_flow_simple)) { return \"keyword\"; }\n      if (stream.match(control_flow_complex)) {\n        state.controlFlow = true;\n        return \"keyword\";\n      }\n      if (state.controlFlow) {\n        if (stream.match(operators)) { return \"operator\"; }\n        if (stream.match(/^(\\d+)/)) { return \"number\"; }\n        if (stream.eol()) { state.controlFlow = false; }\n      }\n\n      if (stream.match(arch)) { return \"number\"; }\n\n      // Macros like '%make_install' or '%attr(0775,root,root)'\n      if (stream.match(/^%[\\w]+/)) {\n        if (stream.match(/^\\(/)) { state.macroParameters = true; }\n        return \"macro\";\n      }\n      if (state.macroParameters) {\n        if (stream.match(/^\\d+/)) { return \"number\";}\n        if (stream.match(/^\\)/)) {\n          state.macroParameters = false;\n          return \"macro\";\n        }\n      }\n      if (stream.match(/^%\\{\\??[\\w \\-]+\\}/)) { return \"macro\"; } // Macros like '%{defined fedora}'\n\n      //TODO: Include bash script sub-parser (CodeMirror supports that)\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n\n});\n"]}