{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/dockerfile/dockerfile.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","instructions","instructionRegex","join","instructionOnlyLine","RegExp","instructionWithArguments","defineSimpleMode","start","regex","token","next","arguments","defineMIME"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EAAqCA,QAAQ,yBAAR,CAArC,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,EAAyB,yBAAzB,CAAP,EAA4DJ,GAA5D,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACtB;;AAEA;;AACA,MAAIC,eAAe,CAAC,MAAD,EAAS,YAAT,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,QAArC,EAA+C,KAA/C,EACC,KADD,EACQ,MADR,EACgB,YADhB,EAC8B,QAD9B,EACwC,MADxC,EAEC,SAFD,EAEY,SAFZ,CAAnB;AAAA,MAGIC,mBAAmB,MAAMD,aAAaE,IAAb,CAAkB,GAAlB,CAAN,GAA+B,GAHtD;AAAA,MAIIC,sBAAsB,IAAIC,MAAJ,CAAWH,mBAAmB,OAA9B,EAAuC,GAAvC,CAJ1B;AAAA,MAKII,2BAA2B,IAAID,MAAJ,CAAWH,mBAAmB,QAA9B,EAAwC,GAAxC,CAL/B;;AAOAF,aAAWO,gBAAX,CAA4B,YAA5B,EAA0C;AACxCC,WAAO;AACL;AACA;AACEC,aAAO,MADT;AAEEC,aAAO;AAFT,KAFK;AAML;AACA;AACED,aAAOL,mBADT;AAEEM,aAAO;AAFT,KAPK;AAWL;AACA;AACED,aAAOH,wBADT;AAEEI,aAAO,CAAC,YAAD,EAAe,IAAf,CAFT;AAGEC,YAAM;AAHR,KAZK,EAiBL;AACEF,aAAO,GADT;AAEEC,aAAO;AAFT,KAjBK,CADiC;AAuBxCE,eAAW,CACT;AACE;AACAH,aAAO,MAFT;AAGEC,aAAO,OAHT;AAIEC,YAAM;AAJR,KADS,EAOT;AACEF,aAAO,UADT;AAEEC,aAAO;AAFT,KAPS,EAWT;AACE;AACAD,aAAO,OAFT;AAGEC,aAAO,IAHT;AAIEC,YAAM;AAJR,KAXS,EAiBT;AACEF,aAAO,GADT;AAEEC,aAAO,IAFT;AAGEC,YAAM;AAHR,KAjBS;AAsBT;AACA;AACED,aAAO,IADT;AAEEC,YAAM;AAFR,KAvBS;AAvB6B,GAA1C;;AAqDAX,aAAWa,UAAX,CAAsB,mBAAtB,EAA2C,YAA3C;AACD,CAxED","file":"dockerfile.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  // Collect all Dockerfile directives\n  var instructions = [\"from\", \"maintainer\", \"run\", \"cmd\", \"expose\", \"env\",\n                      \"add\", \"copy\", \"entrypoint\", \"volume\", \"user\",\n                      \"workdir\", \"onbuild\"],\n      instructionRegex = \"(\" + instructions.join('|') + \")\",\n      instructionOnlyLine = new RegExp(instructionRegex + \"\\\\s*$\", \"i\"),\n      instructionWithArguments = new RegExp(instructionRegex + \"(\\\\s+)\", \"i\");\n\n  CodeMirror.defineSimpleMode(\"dockerfile\", {\n    start: [\n      // Block comment: This is a line starting with a comment\n      {\n        regex: /#.*$/,\n        token: \"comment\"\n      },\n      // Highlight an instruction without any arguments (for convenience)\n      {\n        regex: instructionOnlyLine,\n        token: \"variable-2\"\n      },\n      // Highlight an instruction followed by arguments\n      {\n        regex: instructionWithArguments,\n        token: [\"variable-2\", null],\n        next: \"arguments\"\n      },\n      {\n        regex: /./,\n        token: null\n      }\n    ],\n    arguments: [\n      {\n        // Line comment without instruction arguments is an error\n        regex: /#.*$/,\n        token: \"error\",\n        next: \"start\"\n      },\n      {\n        regex: /[^#]+\\\\$/,\n        token: null\n      },\n      {\n        // Match everything except for the inline comment\n        regex: /[^#]+/,\n        token: null,\n        next: \"start\"\n      },\n      {\n        regex: /$/,\n        token: null,\n        next: \"start\"\n      },\n      // Fail safe return to start\n      {\n        token: null,\n        next: \"start\"\n      }\n    ]\n  });\n\n  CodeMirror.defineMIME(\"text/x-dockerfile\", \"dockerfile\");\n});\n"]}