{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/spreadsheet/spreadsheet.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace","defineMIME"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else return null;\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n"]}