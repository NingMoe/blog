{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/properties/properties.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipToEnd","skipTo","eat","startState","defineMIME"],"mappings":";;;;AAAA;AACA;;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,UAAX,CAAsB,YAAtB,EAAoC,YAAW;AAC7C,WAAO;AACLC,aAAO,eAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAC7B,YAAIC,MAAMF,OAAOE,GAAP,MAAgBD,MAAME,YAAhC;AACA,YAAIC,MAAMJ,OAAOI,GAAP,EAAV;;AAEAH,cAAME,YAAN,GAAqB,KAArB;;AAEA,YAAID,GAAJ,EAAS;AACP,cAAID,MAAMI,aAAV,EAAyB;AACvBJ,kBAAMK,WAAN,GAAoB,IAApB;AACAL,kBAAMI,aAAN,GAAsB,KAAtB;AACD,WAHD,MAGO;AACLJ,kBAAMM,QAAN,GAAiB,KAAjB;AACD;AACF;;AAED,YAAIH,OAAO,CAAEH,MAAMI,aAAnB,EAAkC;AAChCJ,gBAAMK,WAAN,GAAoB,KAApB;AACAL,gBAAMM,QAAN,GAAiB,KAAjB;AACD;;AAED,YAAIL,GAAJ,EAAS;AACP,iBAAMF,OAAOQ,QAAP,EAAN;AACD;;AAED,YAAIC,KAAKT,OAAOU,IAAP,EAAT;;AAEA,YAAIR,QAAQO,OAAO,GAAP,IAAcA,OAAO,GAArB,IAA4BA,OAAO,GAA3C,CAAJ,EAAqD;AACnDR,gBAAMM,QAAN,GAAiB,SAAjB;AACAP,iBAAOW,SAAP;AACA,iBAAO,SAAP;AACD,SAJD,MAIO,IAAIT,OAAOO,OAAO,GAAlB,EAAuB;AAC5BR,gBAAME,YAAN,GAAqB,IAArB;AACAH,iBAAOY,MAAP,CAAc,GAAd,EAAoBZ,OAAOa,GAAP,CAAW,GAAX;AACpB,iBAAO,QAAP;AACD,SAJM,MAIA,IAAIJ,OAAO,GAAP,IAAcA,OAAO,GAAzB,EAA8B;AACnCR,gBAAMM,QAAN,GAAiB,OAAjB;AACA,iBAAO,IAAP;AACD,SAHM,MAGA,IAAIE,OAAO,IAAP,IAAeR,MAAMM,QAAN,KAAmB,OAAtC,EAA+C;AACpD,cAAIP,OAAOU,IAAP,OAAkB,GAAtB,EAA2B;AAAK;AAC9B;AACAT,kBAAMI,aAAN,GAAsB,IAAtB;AACD;AACF;;AAED,eAAOJ,MAAMM,QAAb;AACD,OA9CI;;AAgDLO,kBAAY,sBAAW;AACrB,eAAO;AACLP,oBAAW,KADN,EACmB;AACxBF,yBAAgB,KAFX,EAEmB;AACxBC,uBAAc,KAHT,EAGmB;AACxBH,wBAAe,KAJV,CAImB;AAJnB,SAAP;AAMD;;AAvDI,KAAP;AA0DD,GA3DD;;AA6DAN,aAAWkB,UAAX,CAAsB,mBAAtB,EAA2C,YAA3C;AACAlB,aAAWkB,UAAX,CAAsB,YAAtB,EAAoC,YAApC;AAEC,CA1ED","file":"properties.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"properties\", function() {\n  return {\n    token: function(stream, state) {\n      var sol = stream.sol() || state.afterSection;\n      var eol = stream.eol();\n\n      state.afterSection = false;\n\n      if (sol) {\n        if (state.nextMultiline) {\n          state.inMultiline = true;\n          state.nextMultiline = false;\n        } else {\n          state.position = \"def\";\n        }\n      }\n\n      if (eol && ! state.nextMultiline) {\n        state.inMultiline = false;\n        state.position = \"def\";\n      }\n\n      if (sol) {\n        while(stream.eatSpace());\n      }\n\n      var ch = stream.next();\n\n      if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n        state.position = \"comment\";\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (sol && ch === \"[\") {\n        state.afterSection = true;\n        stream.skipTo(\"]\"); stream.eat(\"]\");\n        return \"header\";\n      } else if (ch === \"=\" || ch === \":\") {\n        state.position = \"quote\";\n        return null;\n      } else if (ch === \"\\\\\" && state.position === \"quote\") {\n        if (stream.next() !== \"u\") {    // u = Unicode sequence \\u1234\n          // Multiline value\n          state.nextMultiline = true;\n        }\n      }\n\n      return state.position;\n    },\n\n    startState: function() {\n      return {\n        position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n        nextMultiline : false,  // Is the next line multiline value\n        inMultiline : false,    // Is the current line a multiline value\n        afterSection : false    // Did we just open a section\n      };\n    }\n\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-properties\", \"properties\");\nCodeMirror.defineMIME(\"text/x-ini\", \"properties\");\n\n});\n"]}