{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/shell/shell.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","words","style","string","split","i","length","tokenBase","stream","state","eatSpace","sol","ch","next","tokens","unshift","tokenString","tokenize","eat","skipToEnd","tokenDollar","eatWhile","test","eol","peek","cur","current","hasOwnProperty","quote","end","escaped","backUp","shift","hungry","startState","token","lineComment","fold","defineMIME"],"mappings":"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","file":"shell.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('shell', function() {\n\n  var words = {};\n  function define(style, string) {\n    var split = string.split(' ');\n    for(var i = 0; i < split.length; i++) {\n      words[split[i]] = style;\n    }\n  };\n\n  // Atoms\n  define('atom', 'true false');\n\n  // Keywords\n  define('keyword', 'if then do else elif while until for in esac fi fin ' +\n    'fil done exit set unset export function');\n\n  // Commands\n  define('builtin', 'ab awk bash beep cat cc cd chown chmod chroot clear cp ' +\n    'curl cut diff echo find gawk gcc get git grep kill killall ln ls make ' +\n    'mkdir openssl mv nc node npm ping ps restart rm rmdir sed service sh ' +\n    'shopt shred source sort sleep ssh start stop su sudo tee telnet top ' +\n    'touch vi vim wall wc wget who write yes zsh');\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n\n    var sol = stream.sol();\n    var ch = stream.next();\n\n    if (ch === '\\\\') {\n      stream.next();\n      return null;\n    }\n    if (ch === '\\'' || ch === '\"' || ch === '`') {\n      state.tokens.unshift(tokenString(ch));\n      return tokenize(stream, state);\n    }\n    if (ch === '#') {\n      if (sol && stream.eat('!')) {\n        stream.skipToEnd();\n        return 'meta'; // 'comment'?\n      }\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (ch === '$') {\n      state.tokens.unshift(tokenDollar);\n      return tokenize(stream, state);\n    }\n    if (ch === '+' || ch === '=') {\n      return 'operator';\n    }\n    if (ch === '-') {\n      stream.eat('-');\n      stream.eatWhile(/\\w/);\n      return 'attribute';\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/\\d/);\n      if(stream.eol() || !/\\w/.test(stream.peek())) {\n        return 'number';\n      }\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n    return words.hasOwnProperty(cur) ? words[cur] : null;\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var next, end = false, escaped = false;\n      while ((next = stream.next()) != null) {\n        if (next === quote && !escaped) {\n          end = true;\n          break;\n        }\n        if (next === '$' && !escaped && quote !== '\\'') {\n          escaped = true;\n          stream.backUp(1);\n          state.tokens.unshift(tokenDollar);\n          break;\n        }\n        escaped = !escaped && next === '\\\\';\n      }\n      if (end || !escaped) {\n        state.tokens.shift();\n      }\n      return (quote === '`' || quote === ')' ? 'quote' : 'string');\n    };\n  };\n\n  var tokenDollar = function(stream, state) {\n    if (state.tokens.length > 1) stream.eat('$');\n    var ch = stream.next(), hungry = /\\w/;\n    if (ch === '{') hungry = /[^}]/;\n    if (ch === '(') {\n      state.tokens[0] = tokenString(')');\n      return tokenize(stream, state);\n    }\n    if (!/\\d/.test(ch)) {\n      stream.eatWhile(hungry);\n      stream.eat('}');\n    }\n    state.tokens.shift();\n    return 'def';\n  };\n\n  function tokenize(stream, state) {\n    return (state.tokens[0] || tokenBase) (stream, state);\n  };\n\n  return {\n    startState: function() {return {tokens:[]};},\n    token: function(stream, state) {\n      return tokenize(stream, state);\n    },\n    lineComment: '#',\n    fold: \"brace\"\n  };\n});\n\nCodeMirror.defineMIME('text/x-sh', 'shell');\n\n});\n"]}