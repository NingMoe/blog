{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/verilog/verilog.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndentUnit","dontAlignCalls","noIndentKeywords","multiLineStrings","hooks","words","str","obj","split","i","length","keywords","isOperatorChar","isBracketChar","unsignedNumber","decimalLiteral","binaryLiteral","octLiteral","hexLiteral","realLiteral","closingBracketOrWord","closingBracket","curPunc","curKeyword","blockKeywords","openClose","keyword","undefined","statementKeywords","tokenBase","stream","state","ch","peek","style","test","next","eatWhile","tokenize","tokenString","eat","tokenComment","skipToEnd","backUp","match","cur","current","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","c","context","popContext","t","isClosing","text","contextClosing","closingKeywords","buildElectricInputRegEx","allClosings","closings","j","push","re","RegExp","join","electricInput","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","close","textAfter","Pass","fromHook","firstChar","charAt","closing","possibleClosing","blockCommentStart","blockCommentEnd","lineComment","defineMIME","name","svxchScopePrefixes","svxGenIndent","svxindentUnit","rtnIndent","indentUnitRq","curIndent","svxCurCtlFlowChar","svxPrevPrevCtlFlowChar","svxPrevCtlFlowChar","vxIndent","string","vxCodeActive","vxIndentRq","svxisOperatorChar","svxkpScopePrefixs","vxCurCtlFlowCharValueAtStart","skipTo","propertyIsEnumerable"],"mappings":"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","file":"verilog.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"verilog\", function(config, parserConfig) {\n\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      noIndentKeywords = parserConfig.noIndentKeywords || [],\n      multiLineStrings = parserConfig.multiLineStrings,\n      hooks = parserConfig.hooks || {};\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  /**\n   * Keywords from IEEE 1800-2012\n   */\n  var keywords = words(\n    \"accept_on alias always always_comb always_ff always_latch and assert assign assume automatic before begin bind \" +\n    \"bins binsof bit break buf bufif0 bufif1 byte case casex casez cell chandle checker class clocking cmos config \" +\n    \"const constraint context continue cover covergroup coverpoint cross deassign default defparam design disable \" +\n    \"dist do edge else end endcase endchecker endclass endclocking endconfig endfunction endgenerate endgroup \" +\n    \"endinterface endmodule endpackage endprimitive endprogram endproperty endspecify endsequence endtable endtask \" +\n    \"enum event eventually expect export extends extern final first_match for force foreach forever fork forkjoin \" +\n    \"function generate genvar global highz0 highz1 if iff ifnone ignore_bins illegal_bins implements implies import \" +\n    \"incdir include initial inout input inside instance int integer interconnect interface intersect join join_any \" +\n    \"join_none large let liblist library local localparam logic longint macromodule matches medium modport module \" +\n    \"nand negedge nettype new nexttime nmos nor noshowcancelled not notif0 notif1 null or output package packed \" +\n    \"parameter pmos posedge primitive priority program property protected pull0 pull1 pulldown pullup \" +\n    \"pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos real realtime ref reg \" +\n    \"reject_on release repeat restrict return rnmos rpmos rtran rtranif0 rtranif1 s_always s_eventually s_nexttime \" +\n    \"s_until s_until_with scalared sequence shortint shortreal showcancelled signed small soft solve specify \" +\n    \"specparam static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on sync_reject_on \" +\n    \"table tagged task this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 triand trior \" +\n    \"trireg type typedef union unique unique0 unsigned until until_with untyped use uwire var vectored virtual void \" +\n    \"wait wait_order wand weak weak0 weak1 while wildcard wire with within wor xnor xor\");\n\n  /** Operators from IEEE 1800-2012\n     unary_operator ::=\n       + | - | ! | ~ | & | ~& | | | ~| | ^ | ~^ | ^~\n     binary_operator ::=\n       + | - | * | / | % | == | != | === | !== | ==? | !=? | && | || | **\n       | < | <= | > | >= | & | | | ^ | ^~ | ~^ | >> | << | >>> | <<<\n       | -> | <->\n     inc_or_dec_operator ::= ++ | --\n     unary_module_path_operator ::=\n       ! | ~ | & | ~& | | | ~| | ^ | ~^ | ^~\n     binary_module_path_operator ::=\n       == | != | && | || | & | | | ^ | ^~ | ~^\n  */\n  var isOperatorChar = /[\\+\\-\\*\\/!~&|^%=?:]/;\n  var isBracketChar = /[\\[\\]{}()]/;\n\n  var unsignedNumber = /\\d[0-9_]*/;\n  var decimalLiteral = /\\d*\\s*'s?d\\s*\\d[0-9_]*/i;\n  var binaryLiteral = /\\d*\\s*'s?b\\s*[xz01][xz01_]*/i;\n  var octLiteral = /\\d*\\s*'s?o\\s*[xz0-7][xz0-7_]*/i;\n  var hexLiteral = /\\d*\\s*'s?h\\s*[0-9a-fxz?][0-9a-fxz?_]*/i;\n  var realLiteral = /(\\d[\\d_]*(\\.\\d[\\d_]*)?E-?[\\d_]+)|(\\d[\\d_]*\\.\\d[\\d_]*)/i;\n\n  var closingBracketOrWord = /^((\\w+)|[)}\\]])/;\n  var closingBracket = /[)}\\]]/;\n\n  var curPunc;\n  var curKeyword;\n\n  // Block openings which are closed by a matching keyword in the form of (\"end\" + keyword)\n  // E.g. \"task\" => \"endtask\"\n  var blockKeywords = words(\n    \"case checker class clocking config function generate interface module package\" +\n    \"primitive program property specify sequence table task\"\n  );\n\n  // Opening/closing pairs\n  var openClose = {};\n  for (var keyword in blockKeywords) {\n    openClose[keyword] = \"end\" + keyword;\n  }\n  openClose[\"begin\"] = \"end\";\n  openClose[\"casex\"] = \"endcase\";\n  openClose[\"casez\"] = \"endcase\";\n  openClose[\"do\"   ] = \"while\";\n  openClose[\"fork\" ] = \"join;join_any;join_none\";\n  openClose[\"covergroup\"] = \"endgroup\";\n\n  for (var i in noIndentKeywords) {\n    var keyword = noIndentKeywords[i];\n    if (openClose[keyword]) {\n      openClose[keyword] = undefined;\n    }\n  }\n\n  // Keywords which open statements that are ended with a semi-colon\n  var statementKeywords = words(\"always always_comb always_ff always_latch assert assign assume else export for foreach forever if import initial repeat while\");\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek(), style;\n    if (hooks[ch] && (style = hooks[ch](stream, state)) != false) return style;\n    if (hooks.tokenBase && (style = hooks.tokenBase(stream, state)) != false)\n      return style;\n\n    if (/[,;:\\.]/.test(ch)) {\n      curPunc = stream.next();\n      return null;\n    }\n    if (isBracketChar.test(ch)) {\n      curPunc = stream.next();\n      return \"bracket\";\n    }\n    // Macros (tick-defines)\n    if (ch == '`') {\n      stream.next();\n      if (stream.eatWhile(/[\\w\\$_]/)) {\n        return \"def\";\n      } else {\n        return null;\n      }\n    }\n    // System calls\n    if (ch == '$') {\n      stream.next();\n      if (stream.eatWhile(/[\\w\\$_]/)) {\n        return \"meta\";\n      } else {\n        return null;\n      }\n    }\n    // Time literals\n    if (ch == '#') {\n      stream.next();\n      stream.eatWhile(/[\\d_.]/);\n      return \"def\";\n    }\n    // Strings\n    if (ch == '\"') {\n      stream.next();\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    // Comments\n    if (ch == \"/\") {\n      stream.next();\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      stream.backUp(1);\n    }\n\n    // Numeric literals\n    if (stream.match(realLiteral) ||\n        stream.match(decimalLiteral) ||\n        stream.match(binaryLiteral) ||\n        stream.match(octLiteral) ||\n        stream.match(hexLiteral) ||\n        stream.match(unsignedNumber) ||\n        stream.match(realLiteral)) {\n      return \"number\";\n    }\n\n    // Operators\n    if (stream.eatWhile(isOperatorChar)) {\n      return \"meta\";\n    }\n\n    // Keywords / plain variables\n    if (stream.eatWhile(/[\\w\\$_]/)) {\n      var cur = stream.current();\n      if (keywords[cur]) {\n        if (openClose[cur]) {\n          curPunc = \"newblock\";\n        }\n        if (statementKeywords[cur]) {\n          curPunc = \"newstatement\";\n        }\n        curKeyword = cur;\n        return \"keyword\";\n      }\n      return \"variable\";\n    }\n\n    stream.next();\n    return null;\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    var c = new Context(indent, col, type, null, state.context);\n    return state.context = c;\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\") {\n      state.indented = state.context.indented;\n    }\n    return state.context = state.context.prev;\n  }\n\n  function isClosing(text, contextClosing) {\n    if (text == contextClosing) {\n      return true;\n    } else {\n      // contextClosing may be mulitple keywords separated by ;\n      var closingKeywords = contextClosing.split(\";\");\n      for (var i in closingKeywords) {\n        if (text == closingKeywords[i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  function buildElectricInputRegEx() {\n    // Reindentation should occur on any bracket char: {}()[]\n    // or on a match of any of the block closing keywords, at\n    // the end of a line\n    var allClosings = [];\n    for (var i in openClose) {\n      if (openClose[i]) {\n        var closings = openClose[i].split(\";\");\n        for (var j in closings) {\n          allClosings.push(closings[j]);\n        }\n      }\n    }\n    var re = new RegExp(\"[{}()\\\\[\\\\]]|(\" + allClosings.join(\"|\") + \")$\");\n    return re;\n  }\n\n  // Interface\n  return {\n\n    // Regex to force current line to reindent\n    electricInput: buildElectricInputRegEx(),\n\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n      if (hooks.startState) hooks.startState(state);\n      return state;\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (hooks.token) hooks.token(stream, state);\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      curKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\" || style == \"variable\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == ctx.type) {\n        popContext(state);\n      } else if ((curPunc == \";\" && ctx.type == \"statement\") ||\n               (ctx.type && isClosing(curKeyword, ctx.type))) {\n        ctx = popContext(state);\n        while (ctx && ctx.type == \"statement\") ctx = popContext(state);\n      } else if (curPunc == \"{\") {\n        pushContext(state, stream.column(), \"}\");\n      } else if (curPunc == \"[\") {\n        pushContext(state, stream.column(), \"]\");\n      } else if (curPunc == \"(\") {\n        pushContext(state, stream.column(), \")\");\n      } else if (ctx && ctx.type == \"endcase\" && curPunc == \":\") {\n        pushContext(state, stream.column(), \"statement\");\n      } else if (curPunc == \"newstatement\") {\n        pushContext(state, stream.column(), \"statement\");\n      } else if (curPunc == \"newblock\") {\n        if (curKeyword == \"function\" && ctx && (ctx.type == \"statement\" || ctx.type == \"endgroup\")) {\n          // The 'function' keyword can appear in some other contexts where it actually does not\n          // indicate a function (import/export DPI and covergroup definitions).\n          // Do nothing in this case\n        } else if (curKeyword == \"task\" && ctx && ctx.type == \"statement\") {\n          // Same thing for task\n        } else {\n          var close = openClose[curKeyword];\n          pushContext(state, stream.column(), close);\n        }\n      }\n\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      if (hooks.indent) {\n        var fromHook = hooks.indent(state);\n        if (fromHook >= 0) return fromHook;\n      }\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = false;\n      var possibleClosing = textAfter.match(closingBracketOrWord);\n      if (possibleClosing)\n        closing = isClosing(possibleClosing[0], ctx.type);\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (closingBracket.test(ctx.type) && ctx.align && !dontAlignCalls) return ctx.column + (closing ? 0 : 1);\n      else if (ctx.type == \")\" && !closing) return ctx.indented + statementIndentUnit;\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\n  CodeMirror.defineMIME(\"text/x-verilog\", {\n    name: \"verilog\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-systemverilog\", {\n    name: \"verilog\"\n  });\n\n  // SVXVerilog mode\n\n  var svxchScopePrefixes = {\n    \">\": \"property\", \"->\": \"property\", \"-\": \"hr\", \"|\": \"link\", \"?$\": \"qualifier\", \"?*\": \"qualifier\",\n    \"@-\": \"variable-3\", \"@\": \"variable-3\", \"?\": \"qualifier\"\n  };\n\n  function svxGenIndent(stream, state) {\n    var svxindentUnit = 2;\n    var rtnIndent = -1, indentUnitRq = 0, curIndent = stream.indentation();\n    switch (state.svxCurCtlFlowChar) {\n    case \"\\\\\":\n      curIndent = 0;\n      break;\n    case \"|\":\n      if (state.svxPrevPrevCtlFlowChar == \"@\") {\n        indentUnitRq = -2; //-2 new pipe rq after cur pipe\n        break;\n      }\n      if (svxchScopePrefixes[state.svxPrevCtlFlowChar])\n        indentUnitRq = 1; // +1 new scope\n      break;\n    case \"M\":  // m4\n      if (state.svxPrevPrevCtlFlowChar == \"@\") {\n        indentUnitRq = -2; //-2 new inst rq after  pipe\n        break;\n      }\n      if (svxchScopePrefixes[state.svxPrevCtlFlowChar])\n        indentUnitRq = 1; // +1 new scope\n      break;\n    case \"@\":\n      if (state.svxPrevCtlFlowChar == \"S\")\n        indentUnitRq = -1; // new pipe stage after stmts\n      if (state.svxPrevCtlFlowChar == \"|\")\n        indentUnitRq = 1; // 1st pipe stage\n      break;\n    case \"S\":\n      if (state.svxPrevCtlFlowChar == \"@\")\n        indentUnitRq = 1; // flow in pipe stage\n      if (svxchScopePrefixes[state.svxPrevCtlFlowChar])\n        indentUnitRq = 1; // +1 new scope\n      break;\n    }\n    var statementIndentUnit = svxindentUnit;\n    rtnIndent = curIndent + (indentUnitRq*statementIndentUnit);\n    return rtnIndent >= 0 ? rtnIndent : curIndent;\n  }\n\n  CodeMirror.defineMIME(\"text/x-svx\", {\n    name: \"verilog\",\n    hooks: {\n      \"\\\\\": function(stream, state) {\n        var vxIndent = 0, style = false;\n        var curPunc  = stream.string;\n        if ((stream.sol()) && (/\\\\SV/.test(stream.string))) {\n          curPunc = (/\\\\SVX_version/.test(stream.string))\n            ? \"\\\\SVX_version\" : stream.string;\n          stream.skipToEnd();\n          if (curPunc == \"\\\\SV\" && state.vxCodeActive) {state.vxCodeActive = false;};\n          if ((/\\\\SVX/.test(curPunc) && !state.vxCodeActive)\n            || (curPunc==\"\\\\SVX_version\" && state.vxCodeActive)) {state.vxCodeActive = true;};\n          style = \"keyword\";\n          state.svxCurCtlFlowChar  = state.svxPrevPrevCtlFlowChar\n            = state.svxPrevCtlFlowChar = \"\";\n          if (state.vxCodeActive == true) {\n            state.svxCurCtlFlowChar  = \"\\\\\";\n            vxIndent = svxGenIndent(stream, state);\n          }\n          state.vxIndentRq = vxIndent;\n        }\n        return style;\n      },\n      tokenBase: function(stream, state) {\n        var vxIndent = 0, style = false;\n        var svxisOperatorChar = /[\\[\\]=:]/;\n        var svxkpScopePrefixs = {\n          \"**\":\"variable-2\", \"*\":\"variable-2\", \"$$\":\"variable\", \"$\":\"variable\",\n          \"^^\":\"attribute\", \"^\":\"attribute\"};\n        var ch = stream.peek();\n        var vxCurCtlFlowCharValueAtStart = state.svxCurCtlFlowChar;\n        if (state.vxCodeActive == true) {\n          if (/[\\[\\]{}\\(\\);\\:]/.test(ch)) {\n            // bypass nesting and 1 char punc\n            style = \"meta\";\n            stream.next();\n          } else if (ch == \"/\") {\n            stream.next();\n            if (stream.eat(\"/\")) {\n              stream.skipToEnd();\n              style = \"comment\";\n              state.svxCurCtlFlowChar = \"S\";\n            } else {\n              stream.backUp(1);\n            }\n          } else if (ch == \"@\") {\n            // pipeline stage\n            style = svxchScopePrefixes[ch];\n            state.svxCurCtlFlowChar = \"@\";\n            stream.next();\n            stream.eatWhile(/[\\w\\$_]/);\n          } else if (stream.match(/\\b[mM]4+/, true)) { // match: function(pattern, consume, caseInsensitive)\n            // m4 pre proc\n            stream.skipTo(\"(\");\n            style = \"def\";\n            state.svxCurCtlFlowChar = \"M\";\n          } else if (ch == \"!\" && stream.sol()) {\n            // v stmt in svx region\n            // state.svxCurCtlFlowChar  = \"S\";\n            style = \"comment\";\n            stream.next();\n          } else if (svxisOperatorChar.test(ch)) {\n            // operators\n            stream.eatWhile(svxisOperatorChar);\n            style = \"operator\";\n          } else if (ch == \"#\") {\n            // phy hier\n            state.svxCurCtlFlowChar  = (state.svxCurCtlFlowChar == \"\")\n              ? ch : state.svxCurCtlFlowChar;\n            stream.next();\n            stream.eatWhile(/[+-]\\d/);\n            style = \"tag\";\n          } else if (svxkpScopePrefixs.propertyIsEnumerable(ch)) {\n            // special SVX operators\n            style = svxkpScopePrefixs[ch];\n            state.svxCurCtlFlowChar = state.svxCurCtlFlowChar == \"\" ? \"S\" : state.svxCurCtlFlowChar;  // stmt\n            stream.next();\n            stream.match(/[a-zA-Z_0-9]+/);\n          } else if (style = svxchScopePrefixes[ch] || false) {\n            // special SVX operators\n            state.svxCurCtlFlowChar = state.svxCurCtlFlowChar == \"\" ? ch : state.svxCurCtlFlowChar;\n            stream.next();\n            stream.match(/[a-zA-Z_0-9]+/);\n          }\n          if (state.svxCurCtlFlowChar != vxCurCtlFlowCharValueAtStart) { // flow change\n            vxIndent = svxGenIndent(stream, state);\n            state.vxIndentRq = vxIndent;\n          }\n        }\n        return style;\n      },\n      token: function(stream, state) {\n        if (state.vxCodeActive == true && stream.sol() && state.svxCurCtlFlowChar != \"\") {\n          state.svxPrevPrevCtlFlowChar = state.svxPrevCtlFlowChar;\n          state.svxPrevCtlFlowChar = state.svxCurCtlFlowChar;\n          state.svxCurCtlFlowChar = \"\";\n        }\n      },\n      indent: function(state) {\n        return (state.vxCodeActive == true) ? state.vxIndentRq : -1;\n      },\n      startState: function(state) {\n        state.svxCurCtlFlowChar = \"\";\n        state.svxPrevCtlFlowChar = \"\";\n        state.svxPrevPrevCtlFlowChar = \"\";\n        state.vxCodeActive = true;\n        state.vxIndentRq = 0;\n      }\n    }\n  });\n});\n"]}