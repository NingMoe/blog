{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/shell/test.js"],"names":["mode","CodeMirror","getMode","MT","name","test","Array","prototype","slice","call","arguments"],"mappings":";;AAAA;AACA;;AAEA,CAAC,YAAW;AACV,OAAIA,OAAOC,WAAWC,OAAX,CAAmB,EAAnB,EAAuB,OAAvB,CAAX;AACA,YAASC,EAAT,CAAYC,IAAZ,EAAkB;AAAEC,WAAKL,IAAL,CAAUI,IAAV,EAAgBJ,IAAhB,EAAsBM,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAtB;AAAkE;;AAEtFP,MAAG,KAAH,EACG,sBADH;AAEAA,MAAG,WAAH,EACG,sBADH;AAEAA,MAAG,QAAH,EACG,sBADH;AAEAA,MAAG,oBAAH,EACG,wBADH;;AAGAA,MAAG,iBAAH,EACG,2BADH;AAEAA,MAAG,uBAAH,EACG,6BADH;;AAGAA,MAAG,iBAAH,EACG,0CADH;AAEAA,MAAG,uBAAH,EACG,0CADH;AAEAA,MAAG,sBAAH,EACG,wCADH;AAEAA,MAAG,oBAAH,EACG,gCADH;AAEAA,MAAG,gCAAH,EACG,oCADH;;AAGAA,MAAG,YAAH,EACG,aADH;AAEAA,MAAG,SAAH,EACG,+FADH;;AAGAA,MAAG,UAAH,EACG,kEADH;AAEAA,MAAG,sBAAH,EACG,gFADH;;AAGAA,MAAG,UAAH,EACG,oBADH;AAEAA,MAAG,SAAH,EACG,wBADH;;AAGAA,MAAG,SAAH,EACG,kCADH;AAEAA,MAAG,UAAH,EACG,2CADH,EAEG,8BAFH,EAGG,gBAHH;AAIAA,MAAG,SAAH,EACG,0DADH;AAEAA,MAAG,UAAH,EACG,4BADH;AAED,CAtDD","file":"test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({}, \"shell\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  MT(\"var\",\n     \"text [def $var] text\");\n  MT(\"varBraces\",\n     \"text[def ${var}]text\");\n  MT(\"varVar\",\n     \"text [def $a$b] text\");\n  MT(\"varBracesVarBraces\",\n     \"text[def ${a}${b}]text\");\n\n  MT(\"singleQuotedVar\",\n     \"[string 'text $var text']\");\n  MT(\"singleQuotedVarBraces\",\n     \"[string 'text ${var} text']\");\n\n  MT(\"doubleQuotedVar\",\n     '[string \"text ][def $var][string  text\"]');\n  MT(\"doubleQuotedVarBraces\",\n     '[string \"text][def ${var}][string text\"]');\n  MT(\"doubleQuotedVarPunct\",\n     '[string \"text ][def $@][string  text\"]');\n  MT(\"doubleQuotedVarVar\",\n     '[string \"][def $a$b][string \"]');\n  MT(\"doubleQuotedVarBracesVarBraces\",\n     '[string \"][def ${a}${b}][string \"]');\n\n  MT(\"notAString\",\n     \"text\\\\'text\");\n  MT(\"escapes\",\n     \"outside\\\\'\\\\\\\"\\\\`\\\\\\\\[string \\\"inside\\\\`\\\\'\\\\\\\"\\\\\\\\`\\\\$notAVar\\\"]outside\\\\$\\\\(notASubShell\\\\)\");\n\n  MT(\"subshell\",\n     \"[builtin echo] [quote $(whoami)] s log, stardate [quote `date`].\");\n  MT(\"doubleQuotedSubshell\",\n     \"[builtin echo] [string \\\"][quote $(whoami)][string 's log, stardate `date`.\\\"]\");\n\n  MT(\"hashbang\",\n     \"[meta #!/bin/bash]\");\n  MT(\"comment\",\n     \"text [comment # Blurb]\");\n\n  MT(\"numbers\",\n     \"[number 0] [number 1] [number 2]\");\n  MT(\"keywords\",\n     \"[keyword while] [atom true]; [keyword do]\",\n     \"  [builtin sleep] [number 3]\",\n     \"[keyword done]\");\n  MT(\"options\",\n     \"[builtin ls] [attribute -l] [attribute --human-readable]\");\n  MT(\"operator\",\n     \"[def var][operator =]value\");\n})();\n"]}