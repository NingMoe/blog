{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","cssMode","scriptTypes","scriptTypesConf","push","matches","mode","i","length","conf","html","stream","state","tagName","htmlState","toLowerCase","style","token","test","current","scriptType","string","slice","Math","max","pos","match","charAt","tp","script","localMode","localState","startState","indent","css","maybeBackup","pat","cur","close","search","m","backUp","copyState","local","textAfter","Pass","innerMode","defineMIME"],"mappings":"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","file":"htmlmixed.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"htmlmixed\", function(config, parserConfig) {\n  var htmlMode = CodeMirror.getMode(config, {name: \"xml\",\n                                             htmlMode: true,\n                                             multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n                                             multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag});\n  var cssMode = CodeMirror.getMode(config, \"css\");\n\n  var scriptTypes = [], scriptTypesConf = parserConfig && parserConfig.scriptTypes;\n  scriptTypes.push({matches: /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^$/i,\n                    mode: CodeMirror.getMode(config, \"javascript\")});\n  if (scriptTypesConf) for (var i = 0; i < scriptTypesConf.length; ++i) {\n    var conf = scriptTypesConf[i];\n    scriptTypes.push({matches: conf.matches, mode: conf.mode && CodeMirror.getMode(config, conf.mode)});\n  }\n  scriptTypes.push({matches: /./,\n                    mode: CodeMirror.getMode(config, \"text/plain\")});\n\n  function html(stream, state) {\n    var tagName = state.htmlState.tagName;\n    if (tagName) tagName = tagName.toLowerCase();\n    var style = htmlMode.token(stream, state.htmlState);\n    if (tagName == \"script\" && /\\btag\\b/.test(style) && stream.current() == \">\") {\n      // Script block: mode to change to depends on type attribute\n      var scriptType = stream.string.slice(Math.max(0, stream.pos - 100), stream.pos).match(/\\btype\\s*=\\s*(\"[^\"]+\"|'[^']+'|\\S+)[^<]*$/i);\n      scriptType = scriptType ? scriptType[1] : \"\";\n      if (scriptType && /[\\\"\\']/.test(scriptType.charAt(0))) scriptType = scriptType.slice(1, scriptType.length - 1);\n      for (var i = 0; i < scriptTypes.length; ++i) {\n        var tp = scriptTypes[i];\n        if (typeof tp.matches == \"string\" ? scriptType == tp.matches : tp.matches.test(scriptType)) {\n          if (tp.mode) {\n            state.token = script;\n            state.localMode = tp.mode;\n            state.localState = tp.mode.startState && tp.mode.startState(htmlMode.indent(state.htmlState, \"\"));\n          }\n          break;\n        }\n      }\n    } else if (tagName == \"style\" && /\\btag\\b/.test(style) && stream.current() == \">\") {\n      state.token = css;\n      state.localMode = cssMode;\n      state.localState = cssMode.startState(htmlMode.indent(state.htmlState, \"\"));\n    }\n    return style;\n  }\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current();\n    var close = cur.search(pat), m;\n    if (close > -1) stream.backUp(cur.length - close);\n    else if (m = cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n  function script(stream, state) {\n    if (stream.match(/^<\\/\\s*script\\s*>/i, false)) {\n      state.token = html;\n      state.localState = state.localMode = null;\n      return null;\n    }\n    return maybeBackup(stream, /<\\/\\s*script\\s*>/,\n                       state.localMode.token(stream, state.localState));\n  }\n  function css(stream, state) {\n    if (stream.match(/^<\\/\\s*style\\s*>/i, false)) {\n      state.token = html;\n      state.localState = state.localMode = null;\n      return null;\n    }\n    return maybeBackup(stream, /<\\/\\s*style\\s*>/,\n                       cssMode.token(stream, state.localState));\n  }\n\n  return {\n    startState: function() {\n      var state = htmlMode.startState();\n      return {token: html, localMode: null, localState: null, htmlState: state};\n    },\n\n    copyState: function(state) {\n      if (state.localState)\n        var local = CodeMirror.copyState(state.localMode, state.localState);\n      return {token: state.token, localMode: state.localMode, localState: local,\n              htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n    },\n\n    token: function(stream, state) {\n      return state.token(stream, state);\n    },\n\n    indent: function(state, textAfter) {\n      if (!state.localMode || /^\\s*<\\//.test(textAfter))\n        return htmlMode.indent(state.htmlState, textAfter);\n      else if (state.localMode.indent)\n        return state.localMode.indent(state.localState, textAfter);\n      else\n        return CodeMirror.Pass;\n    },\n\n    innerMode: function(state) {\n      return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n    }\n  };\n}, \"xml\", \"javascript\", \"css\");\n\nCodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n\n});\n"]}