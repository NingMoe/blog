{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/toml/toml.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","inString","stringType","lhs","inArray","token","stream","state","peek","next","sol","eol","match","skipTo","skipToEnd","eatSpace","eatWhile","c","defineMIME"],"mappings":"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","file":"toml.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"toml\", function () {\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: \"\",\n        lhs: true,\n        inArray: 0\n      };\n    },\n    token: function (stream, state) {\n      //check for state changes\n      if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (stream.sol() && state.inArray === 0) {\n        state.lhs = true;\n      }\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inArray && stream.peek() === ']') {\n        stream.next();\n        state.inArray--;\n        return 'bracket';\n      } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n        stream.next();//skip closing ]\n        // array of objects has an extra open & close []\n        if (stream.peek() === ']') stream.next();\n        return \"atom\";\n      } else if (stream.peek() === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n        return \"property\";\n      } else if (state.lhs && stream.peek() === \"=\") {\n        stream.next();\n        state.lhs = false;\n        return null;\n      } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n        return 'atom'; //date\n      } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n        return 'atom';\n      } else if (!state.lhs && stream.peek() === '[') {\n        state.inArray++;\n        stream.next();\n        return 'bracket';\n      } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n        return 'number';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-toml', 'toml');\n\n});\n"]}