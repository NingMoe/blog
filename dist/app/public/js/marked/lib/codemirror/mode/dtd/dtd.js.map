{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/dtd/dtd.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","type","ret","style","tp","tokenBase","stream","state","ch","next","eat","eatWhile","tokenize","tokenSGMLComment","inBlock","match","tokenString","sc","current","substr","length","backUp","dashes","quote","escaped","terminator","eol","startState","base","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","n","electricChars","defineMIME"],"mappings":"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","file":"dtd.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"dtd\", function(config) {\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch == \"<\" && stream.eat(\"!\") ) {\n      if (stream.eatWhile(/[\\-]/)) {\n        state.tokenize = tokenSGMLComment;\n        return tokenSGMLComment(stream, state);\n      } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n    } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n      state.tokenize = inBlock(\"meta\", \"?>\");\n      return ret(\"meta\", ch);\n    } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n    else if (ch == \"|\") return ret(\"keyword\", \"seperator\");\n    else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n    else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n      var sc = stream.current();\n      if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n      return ret(\"tag\", \"tag\");\n    } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n    else {\n      stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n      return ret(null, null);\n    }\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return ret(\"string\", \"tag\");\n    };\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n      else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n      else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n      else if (type == \"[\") state.stack.push(\"[\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n\n      if( textAfter.match(/\\]\\s+|\\]/) )n=n-1;\n      else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n        if(textAfter.substr(0,1) === \"<\")n;\n        else if( type == \"doindent\" && textAfter.length > 1 )n;\n        else if( type == \"doindent\")n--;\n        else if( type == \">\" && textAfter.length > 1)n;\n        else if( type == \"tag\" && textAfter !== \">\")n;\n        else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n        else if( type == \"tag\")n++;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\")n;\n        else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n        else if( textAfter === \">\")n;\n        else n=n-1;\n        //over rule them all\n        if(type == null || type == \"]\")n--;\n      }\n\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"]>\"\n  };\n});\n\nCodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n\n});\n"]}