{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/clike/clike.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndentUnit","dontAlignCalls","keywords","builtin","blockKeywords","atoms","hooks","multiLineStrings","indentStatements","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","result","tokenize","tokenString","test","eatWhile","eat","tokenComment","skipToEnd","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","textAfter","Pass","firstChar","charAt","closing","electricChars","blockCommentStart","blockCommentEnd","lineComment","fold","words","str","obj","split","i","length","cKeywords","cppHook","skipTo","eol","cpp11StringHook","backUp","match","cpp11RawStringDelim","tokenRawString","tokenAtString","delim","replace","RegExp","def","mimes","mode","add","prop","hasOwnProperty","push","helperType","registerHelper","defineMIME","name","modeProps","tokenTripleString"],"mappings":"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","file":"clike.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false;\n  var isOperatorChar = /[+\\-*&%=<>!?|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (builtin.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != ';') ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\")))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      else if (ctx.align && (!dontAlignCalls || ctx.type != \")\")) return ctx.column + (closing ? 0 : 1);\n      else if (ctx.type == \")\" && !closing) return ctx.indented + statementIndentUnit;\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var cKeywords = \"auto if break int case long char register continue return default short do sizeof \" +\n    \"double static else struct entry switch extern typedef float union for unsigned \" +\n    \"goto while enum void const signed volatile\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false;\n    for (;;) {\n      if (stream.skipTo(\"\\\\\")) {\n        stream.next();\n        if (stream.eol()) {\n          state.tokenize = cppHook;\n          break;\n        }\n      } else {\n        stream.skipToEnd();\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"meta\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/(R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/(u8|u|U|L)/)) {\n      if (stream.match(/[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    atoms: words(\"null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" asm dynamic_cast namespace reinterpret_cast try bool explicit new \" +\n                    \"static_cast typeid catch operator template typename class friend private \" +\n                    \"this using const_cast inline public throw virtual delete mutable protected \" +\n                    \"wchar_t alignas alignof constexpr decltype nullptr noexcept thread_local final \" +\n                    \"static_assert override\"),\n    blockKeywords: words(\"catch class do else finally for if struct switch try while\"),\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"#\": cppHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert boolean break byte case catch char class const continue default \" +\n                    \"do double else enum extends final finally float for goto if implements import \" +\n                    \"instanceof int interface long native new package private protected public \" +\n                    \"return short static strictfp super switch synchronized this throw throws transient \" +\n                    \"try void volatile while\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly ref return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    builtin: words(\"Boolean Byte Char DateTime DateTimeOffset Decimal Double\" +\n                    \" Guid Int16 Int32 Int64 Object SByte Single String TimeSpan UInt16 UInt32\" +\n                    \" UInt64 bool byte char decimal double short int long object\"  +\n                    \" sbyte float string ushort uint ulong\"),\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n\n      /* scala */\n      \"abstract case catch class def do else extends false final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try trye type val var while with yield _ : = => <- <: \" +\n      \"<% >: # @ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble \" +\n\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector :: #:: \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class do else finally for forSome if match switch try while\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      }\n    }\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"float int bool void \" +\n                    \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                    \"mat2 mat3 mat4 \" +\n                    \"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    blockKeywords: words(\"case do else for if switch while struct\"),\n    atoms: words(\"null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \"inline restrict _Bool _Complex _Imaginery BOOL Class bycopy byref id IMP in \" +\n                    \"inout nil oneway out Protocol SEL self super atomic nonatomic retain copy readwrite readonly\"),\n    atoms: words(\"YES NO NULL NILL ON OFF\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$]/);\n        return \"keyword\";\n      },\n      \"#\": cppHook\n    },\n    modeProps: {fold: \"brace\"}\n  });\n\n});\n"]}