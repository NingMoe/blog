{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/smarty/smarty.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","settings","rightDelimiter","leftDelimiter","smartyVersion","hasOwnProperty","keyFunctions","last","regs","operatorChars","validIdentifier","stringChar","helpers","cont","style","lastType","chain","stream","state","parser","tokenize","parsers","tokenizer","match","eat","inBlock","depth","isEol","eol","isFollowedByWhitespace","test","peek","smarty","next","ch","eatWhile","inAttribute","str","c","i","j","length","quote","prevChar","currChar","terminator","startState","mode","token","electricChars","defineMIME"],"mappings":"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","file":"smarty.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Smarty 2 and 3 mode.\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"smarty\", function(config) {\n  \"use strict\";\n\n  // our default settings; check to see if they're overridden\n  var settings = {\n    rightDelimiter: '}',\n    leftDelimiter: '{',\n    smartyVersion: 2 // for backward compatibility\n  };\n  if (config.hasOwnProperty(\"leftDelimiter\")) {\n    settings.leftDelimiter = config.leftDelimiter;\n  }\n  if (config.hasOwnProperty(\"rightDelimiter\")) {\n    settings.rightDelimiter = config.rightDelimiter;\n  }\n  if (config.hasOwnProperty(\"smartyVersion\") && config.smartyVersion === 3) {\n    settings.smartyVersion = 3;\n  }\n\n  var keyFunctions = [\"debug\", \"extends\", \"function\", \"include\", \"literal\"];\n  var last;\n  var regs = {\n    operatorChars: /[+\\-*&%=<>!?]/,\n    validIdentifier: /[a-zA-Z0-9_]/,\n    stringChar: /['\"]/\n  };\n\n  var helpers = {\n    cont: function(style, lastType) {\n      last = lastType;\n      return style;\n    },\n    chain: function(stream, state, parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n  };\n\n\n  // our various parsers\n  var parsers = {\n\n    // the main tokenizer\n    tokenizer: function(stream, state) {\n      if (stream.match(settings.leftDelimiter, true)) {\n        if (stream.eat(\"*\")) {\n          return helpers.chain(stream, state, parsers.inBlock(\"comment\", \"*\" + settings.rightDelimiter));\n        } else {\n          // Smarty 3 allows { and } surrounded by whitespace to NOT slip into Smarty mode\n          state.depth++;\n          var isEol = stream.eol();\n          var isFollowedByWhitespace = /\\s/.test(stream.peek());\n          if (settings.smartyVersion === 3 && settings.leftDelimiter === \"{\" && (isEol || isFollowedByWhitespace)) {\n            state.depth--;\n            return null;\n          } else {\n            state.tokenize = parsers.smarty;\n            last = \"startTag\";\n            return \"tag\";\n          }\n        }\n      } else {\n        stream.next();\n        return null;\n      }\n    },\n\n    // parsing Smarty content\n    smarty: function(stream, state) {\n      if (stream.match(settings.rightDelimiter, true)) {\n        if (settings.smartyVersion === 3) {\n          state.depth--;\n          if (state.depth <= 0) {\n            state.tokenize = parsers.tokenizer;\n          }\n        } else {\n          state.tokenize = parsers.tokenizer;\n        }\n        return helpers.cont(\"tag\", null);\n      }\n\n      if (stream.match(settings.leftDelimiter, true)) {\n        state.depth++;\n        return helpers.cont(\"tag\", \"startTag\");\n      }\n\n      var ch = stream.next();\n      if (ch == \"$\") {\n        stream.eatWhile(regs.validIdentifier);\n        return helpers.cont(\"variable-2\", \"variable\");\n      } else if (ch == \"|\") {\n        return helpers.cont(\"operator\", \"pipe\");\n      } else if (ch == \".\") {\n        return helpers.cont(\"operator\", \"property\");\n      } else if (regs.stringChar.test(ch)) {\n        state.tokenize = parsers.inAttribute(ch);\n        return helpers.cont(\"string\", \"string\");\n      } else if (regs.operatorChars.test(ch)) {\n        stream.eatWhile(regs.operatorChars);\n        return helpers.cont(\"operator\", \"operator\");\n      } else if (ch == \"[\" || ch == \"]\") {\n        return helpers.cont(\"bracket\", \"bracket\");\n      } else if (ch == \"(\" || ch == \")\") {\n        return helpers.cont(\"bracket\", \"operator\");\n      } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/\\d/);\n        return helpers.cont(\"number\", \"number\");\n      } else {\n\n        if (state.last == \"variable\") {\n          if (ch == \"@\") {\n            stream.eatWhile(regs.validIdentifier);\n            return helpers.cont(\"property\", \"property\");\n          } else if (ch == \"|\") {\n            stream.eatWhile(regs.validIdentifier);\n            return helpers.cont(\"qualifier\", \"modifier\");\n          }\n        } else if (state.last == \"pipe\") {\n          stream.eatWhile(regs.validIdentifier);\n          return helpers.cont(\"qualifier\", \"modifier\");\n        } else if (state.last == \"whitespace\") {\n          stream.eatWhile(regs.validIdentifier);\n          return helpers.cont(\"attribute\", \"modifier\");\n        } if (state.last == \"property\") {\n          stream.eatWhile(regs.validIdentifier);\n          return helpers.cont(\"property\", null);\n        } else if (/\\s/.test(ch)) {\n          last = \"whitespace\";\n          return null;\n        }\n\n        var str = \"\";\n        if (ch != \"/\") {\n          str += ch;\n        }\n        var c = null;\n        while (c = stream.eat(regs.validIdentifier)) {\n          str += c;\n        }\n        for (var i=0, j=keyFunctions.length; i<j; i++) {\n          if (keyFunctions[i] == str) {\n            return helpers.cont(\"keyword\", \"keyword\");\n          }\n        }\n        if (/\\s/.test(ch)) {\n          return null;\n        }\n        return helpers.cont(\"tag\", \"tag\");\n      }\n    },\n\n    inAttribute: function(quote) {\n      return function(stream, state) {\n        var prevChar = null;\n        var currChar = null;\n        while (!stream.eol()) {\n          currChar = stream.peek();\n          if (stream.next() == quote && prevChar !== '\\\\') {\n            state.tokenize = parsers.smarty;\n            break;\n          }\n          prevChar = currChar;\n        }\n        return \"string\";\n      };\n    },\n\n    inBlock: function(style, terminator) {\n      return function(stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = parsers.tokenizer;\n            break;\n          }\n          stream.next();\n        }\n        return style;\n      };\n    }\n  };\n\n\n  // the public API for CodeMirror\n  return {\n    startState: function() {\n      return {\n        tokenize: parsers.tokenizer,\n        mode: \"smarty\",\n        last: null,\n        depth: 0\n      };\n    },\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      state.last = last;\n      return style;\n    },\n    electricChars: \"\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-smarty\", \"smarty\");\n\n});\n"]}