{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/tiddlywiki/tiddlywiki.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","textwords","keywords","kw","type","style","isSpaceName","reHR","reWikiCommentStart","reWikiCommentStop","reBlockQuote","reJsCodeStart","reJsCodeStop","reXmlCodeStart","reXmlCodeStop","reCodeBlockStart","reCodeBlockStop","reUntilCodeStop","chain","stream","state","f","tokenize","content","ret","tp","cont","jsTokenBase","sol","ch","block","peek","test","match","twTokenCode","next","skipToEnd","eatWhile","eat","twTokenComment","twTokenEm","twTokenUnderline","twTokenStrike","twTokenStrong","twTokenMacro","word","current","known","propertyIsEnumerable","maybeEnd","sb","startState","indented","level","token","eatSpace","electricChars","defineMIME"],"mappings":"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","file":"tiddlywiki.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/***\n    |''Name''|tiddlywiki.js|\n    |''Description''|Enables TiddlyWikiy syntax highlighting using CodeMirror|\n    |''Author''|PMario|\n    |''Version''|0.1.7|\n    |''Status''|''stable''|\n    |''Source''|[[GitHub|https://github.com/pmario/CodeMirror2/blob/tw-syntax/mode/tiddlywiki]]|\n    |''Documentation''|http://codemirror.tiddlyspace.com/|\n    |''License''|[[MIT License|http://www.opensource.org/licenses/mit-license.php]]|\n    |''CoreVersion''|2.5.0|\n    |''Requires''|codemirror.js|\n    |''Keywords''|syntax highlighting color code mirror codemirror|\n    ! Info\n    CoreVersion parameter is needed for TiddlyWiki only!\n***/\n//{{{\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"tiddlywiki\", function () {\n  // Tokenizer\n  var textwords = {};\n\n  var keywords = function () {\n    function kw(type) {\n      return { type: type, style: \"macro\"};\n    }\n    return {\n      \"allTags\": kw('allTags'), \"closeAll\": kw('closeAll'), \"list\": kw('list'),\n      \"newJournal\": kw('newJournal'), \"newTiddler\": kw('newTiddler'),\n      \"permaview\": kw('permaview'), \"saveChanges\": kw('saveChanges'),\n      \"search\": kw('search'), \"slider\": kw('slider'),   \"tabs\": kw('tabs'),\n      \"tag\": kw('tag'), \"tagging\": kw('tagging'),       \"tags\": kw('tags'),\n      \"tiddler\": kw('tiddler'), \"timeline\": kw('timeline'),\n      \"today\": kw('today'), \"version\": kw('version'),   \"option\": kw('option'),\n\n      \"with\": kw('with'),\n      \"filter\": kw('filter')\n    };\n  }();\n\n  var isSpaceName = /[\\w_\\-]/i,\n  reHR = /^\\-\\-\\-\\-+$/,                                 // <hr>\n  reWikiCommentStart = /^\\/\\*\\*\\*$/,            // /***\n  reWikiCommentStop = /^\\*\\*\\*\\/$/,             // ***/\n  reBlockQuote = /^<<<$/,\n\n  reJsCodeStart = /^\\/\\/\\{\\{\\{$/,                       // //{{{ js block start\n  reJsCodeStop = /^\\/\\/\\}\\}\\}$/,                        // //}}} js stop\n  reXmlCodeStart = /^<!--\\{\\{\\{-->$/,           // xml block start\n  reXmlCodeStop = /^<!--\\}\\}\\}-->$/,            // xml stop\n\n  reCodeBlockStart = /^\\{\\{\\{$/,                        // {{{ TW text div block start\n  reCodeBlockStop = /^\\}\\}\\}$/,                 // }}} TW text stop\n\n  reUntilCodeStop = /.*?\\}\\}\\}/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n\n  function ret(tp, style, cont) {\n    type = tp;\n    content = cont;\n    return style;\n  }\n\n  function jsTokenBase(stream, state) {\n    var sol = stream.sol(), ch;\n\n    state.block = false;        // indicates the start of a code block.\n\n    ch = stream.peek();         // don't eat, to make matching simpler\n\n    // check start of  blocks\n    if (sol && /[<\\/\\*{}\\-]/.test(ch)) {\n      if (stream.match(reCodeBlockStart)) {\n        state.block = true;\n        return chain(stream, state, twTokenCode);\n      }\n      if (stream.match(reBlockQuote)) {\n        return ret('quote', 'quote');\n      }\n      if (stream.match(reWikiCommentStart) || stream.match(reWikiCommentStop)) {\n        return ret('code', 'comment');\n      }\n      if (stream.match(reJsCodeStart) || stream.match(reJsCodeStop) || stream.match(reXmlCodeStart) || stream.match(reXmlCodeStop)) {\n        return ret('code', 'comment');\n      }\n      if (stream.match(reHR)) {\n        return ret('hr', 'hr');\n      }\n    } // sol\n    ch = stream.next();\n\n    if (sol && /[\\/\\*!#;:>|]/.test(ch)) {\n      if (ch == \"!\") { // tw header\n        stream.skipToEnd();\n        return ret(\"header\", \"header\");\n      }\n      if (ch == \"*\") { // tw list\n        stream.eatWhile('*');\n        return ret(\"list\", \"comment\");\n      }\n      if (ch == \"#\") { // tw numbered list\n        stream.eatWhile('#');\n        return ret(\"list\", \"comment\");\n      }\n      if (ch == \";\") { // definition list, term\n        stream.eatWhile(';');\n        return ret(\"list\", \"comment\");\n      }\n      if (ch == \":\") { // definition list, description\n        stream.eatWhile(':');\n        return ret(\"list\", \"comment\");\n      }\n      if (ch == \">\") { // single line quote\n        stream.eatWhile(\">\");\n        return ret(\"quote\", \"quote\");\n      }\n      if (ch == '|') {\n        return ret('table', 'header');\n      }\n    }\n\n    if (ch == '{' && stream.match(/\\{\\{/)) {\n      return chain(stream, state, twTokenCode);\n    }\n\n    // rudimentary html:// file:// link matching. TW knows much more ...\n    if (/[hf]/i.test(ch)) {\n      if (/[ti]/i.test(stream.peek()) && stream.match(/\\b(ttps?|tp|ile):\\/\\/[\\-A-Z0-9+&@#\\/%?=~_|$!:,.;]*[A-Z0-9+&@#\\/%=~_|$]/i)) {\n        return ret(\"link\", \"link\");\n      }\n    }\n    // just a little string indicator, don't want to have the whole string covered\n    if (ch == '\"') {\n      return ret('string', 'string');\n    }\n    if (ch == '~') {    // _no_ CamelCase indicator should be bold\n      return ret('text', 'brace');\n    }\n    if (/[\\[\\]]/.test(ch)) { // check for [[..]]\n      if (stream.peek() == ch) {\n        stream.next();\n        return ret('brace', 'brace');\n      }\n    }\n    if (ch == \"@\") {    // check for space link. TODO fix @@...@@ highlighting\n      stream.eatWhile(isSpaceName);\n      return ret(\"link\", \"link\");\n    }\n    if (/\\d/.test(ch)) {        // numbers\n      stream.eatWhile(/\\d/);\n      return ret(\"number\", \"number\");\n    }\n    if (ch == \"/\") { // tw invisible comment\n      if (stream.eat(\"%\")) {\n        return chain(stream, state, twTokenComment);\n      }\n      else if (stream.eat(\"/\")) { //\n        return chain(stream, state, twTokenEm);\n      }\n    }\n    if (ch == \"_\") { // tw underline\n      if (stream.eat(\"_\")) {\n        return chain(stream, state, twTokenUnderline);\n      }\n    }\n    // strikethrough and mdash handling\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        // if strikethrough looks ugly, change CSS.\n        if (stream.peek() != ' ')\n          return chain(stream, state, twTokenStrike);\n        // mdash\n        if (stream.peek() == ' ')\n          return ret('text', 'brace');\n      }\n    }\n    if (ch == \"'\") { // tw bold\n      if (stream.eat(\"'\")) {\n        return chain(stream, state, twTokenStrong);\n      }\n    }\n    if (ch == \"<\") { // tw macro\n      if (stream.eat(\"<\")) {\n        return chain(stream, state, twTokenMacro);\n      }\n    }\n    else {\n      return ret(ch);\n    }\n\n    // core macro handling\n    stream.eatWhile(/[\\w\\$_]/);\n    var word = stream.current(),\n    known = textwords.propertyIsEnumerable(word) && textwords[word];\n\n    return known ? ret(known.type, known.style, word) : ret(\"text\", null, word);\n\n  } // jsTokenBase()\n\n  // tw invisible comment\n  function twTokenComment(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = jsTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"%\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  // tw strong / bold\n  function twTokenStrong(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"'\" && maybeEnd) {\n        state.tokenize = jsTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"'\");\n    }\n    return ret(\"text\", \"strong\");\n  }\n\n  // tw code\n  function twTokenCode(stream, state) {\n    var ch, sb = state.block;\n\n    if (sb && stream.current()) {\n      return ret(\"code\", \"comment\");\n    }\n\n    if (!sb && stream.match(reUntilCodeStop)) {\n      state.tokenize = jsTokenBase;\n      return ret(\"code\", \"comment\");\n    }\n\n    if (sb && stream.sol() && stream.match(reCodeBlockStop)) {\n      state.tokenize = jsTokenBase;\n      return ret(\"code\", \"comment\");\n    }\n\n    ch = stream.next();\n    return (sb) ? ret(\"code\", \"comment\") : ret(\"code\", \"comment\");\n  }\n\n  // tw em / italic\n  function twTokenEm(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = jsTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"/\");\n    }\n    return ret(\"text\", \"em\");\n  }\n\n  // tw underlined text\n  function twTokenUnderline(stream, state) {\n    var maybeEnd = false,\n    ch;\n    while (ch = stream.next()) {\n      if (ch == \"_\" && maybeEnd) {\n        state.tokenize = jsTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"_\");\n    }\n    return ret(\"text\", \"underlined\");\n  }\n\n  // tw strike through text looks ugly\n  // change CSS if needed\n  function twTokenStrike(stream, state) {\n    var maybeEnd = false, ch;\n\n    while (ch = stream.next()) {\n      if (ch == \"-\" && maybeEnd) {\n        state.tokenize = jsTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"-\");\n    }\n    return ret(\"text\", \"strikethrough\");\n  }\n\n  // macro\n  function twTokenMacro(stream, state) {\n    var ch, word, known;\n\n    if (stream.current() == '<<') {\n      return ret('brace', 'macro');\n    }\n\n    ch = stream.next();\n    if (!ch) {\n      state.tokenize = jsTokenBase;\n      return ret(ch);\n    }\n    if (ch == \">\") {\n      if (stream.peek() == '>') {\n        stream.next();\n        state.tokenize = jsTokenBase;\n        return ret(\"brace\", \"macro\");\n      }\n    }\n\n    stream.eatWhile(/[\\w\\$_]/);\n    word = stream.current();\n    known = keywords.propertyIsEnumerable(word) && keywords[word];\n\n    if (known) {\n      return ret(known.type, known.style, word);\n    }\n    else {\n      return ret(\"macro\", null, word);\n    }\n  }\n\n  // Interface\n  return {\n    startState: function () {\n      return {\n        tokenize: jsTokenBase,\n        indented: 0,\n        level: 0\n      };\n    },\n\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      return style;\n    },\n\n    electricChars: \"\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-tiddlywiki\", \"tiddlywiki\");\n});\n\n//}}}\n"]}