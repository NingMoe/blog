{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/css/test.js"],"names":["mode","CodeMirror","getMode","indentUnit","MT","name","test","Array","prototype","slice","call","arguments"],"mappings":"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","file":"test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function() {\n  var mode = CodeMirror.getMode({indentUnit: 2}, \"css\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  // Error, because \"foobarhello\" is neither a known type or property, but\n  // property was expected (after \"and\"), and it should be in parenthese.\n  MT(\"atMediaUnknownType\",\n     \"[def @media] [attribute screen] [keyword and] [error foobarhello] { }\");\n\n  // Soft error, because \"foobarhello\" is not a known property or type.\n  MT(\"atMediaUnknownProperty\",\n     \"[def @media] [attribute screen] [keyword and] ([error foobarhello]) { }\");\n\n  // Make sure nesting works with media queries\n  MT(\"atMediaMaxWidthNested\",\n     \"[def @media] [attribute screen] [keyword and] ([property max-width]: [number 25px]) { [tag foo] { } }\");\n\n  MT(\"tagSelector\",\n     \"[tag foo] { }\");\n\n  MT(\"classSelector\",\n     \"[qualifier .foo-bar_hello] { }\");\n\n  MT(\"idSelector\",\n     \"[builtin #foo] { [error #foo] }\");\n\n  MT(\"tagSelectorUnclosed\",\n     \"[tag foo] { [property margin]: [number 0] } [tag bar] { }\");\n\n  MT(\"tagStringNoQuotes\",\n     \"[tag foo] { [property font-family]: [variable hello] [variable world]; }\");\n\n  MT(\"tagStringDouble\",\n     \"[tag foo] { [property font-family]: [string \\\"hello world\\\"]; }\");\n\n  MT(\"tagStringSingle\",\n     \"[tag foo] { [property font-family]: [string 'hello world']; }\");\n\n  MT(\"tagColorKeyword\",\n     \"[tag foo] {\",\n     \"  [property color]: [keyword black];\",\n     \"  [property color]: [keyword navy];\",\n     \"  [property color]: [keyword yellow];\",\n     \"}\");\n\n  MT(\"tagColorHex3\",\n     \"[tag foo] { [property background]: [atom #fff]; }\");\n\n  MT(\"tagColorHex6\",\n     \"[tag foo] { [property background]: [atom #ffffff]; }\");\n\n  MT(\"tagColorHex4\",\n     \"[tag foo] { [property background]: [atom&error #ffff]; }\");\n\n  MT(\"tagColorHexInvalid\",\n     \"[tag foo] { [property background]: [atom&error #ffg]; }\");\n\n  MT(\"tagNegativeNumber\",\n     \"[tag foo] { [property margin]: [number -5px]; }\");\n\n  MT(\"tagPositiveNumber\",\n     \"[tag foo] { [property padding]: [number 5px]; }\");\n\n  MT(\"tagVendor\",\n     \"[tag foo] { [meta -foo-][property box-sizing]: [meta -foo-][atom border-box]; }\");\n\n  MT(\"tagBogusProperty\",\n     \"[tag foo] { [property&error barhelloworld]: [number 0]; }\");\n\n  MT(\"tagTwoProperties\",\n     \"[tag foo] { [property margin]: [number 0]; [property padding]: [number 0]; }\");\n\n  MT(\"tagTwoPropertiesURL\",\n     \"[tag foo] { [property background]: [atom url]([string //example.com/foo.png]); [property padding]: [number 0]; }\");\n\n  MT(\"commentSGML\",\n     \"[comment <!--comment-->]\");\n\n  MT(\"commentSGML2\",\n     \"[comment <!--comment]\",\n     \"[comment -->] [tag div] {}\");\n\n  MT(\"indent_tagSelector\",\n     \"[tag strong], [tag em] {\",\n     \"  [property background]: [atom rgba](\",\n     \"    [number 255], [number 255], [number 0], [number .2]\",\n     \"  );\",\n     \"}\");\n\n  MT(\"indent_atMedia\",\n     \"[def @media] {\",\n     \"  [tag foo] {\",\n     \"    [property color]:\",\n     \"      [keyword yellow];\",\n     \"  }\",\n     \"}\");\n\n  MT(\"indent_comma\",\n     \"[tag foo] {\",\n     \"  [property font-family]: [variable verdana],\",\n     \"    [atom sans-serif];\",\n     \"}\");\n\n  MT(\"indent_parentheses\",\n     \"[tag foo]:[variable-3 before] {\",\n     \"  [property background]: [atom url](\",\n     \"[string     blahblah]\",\n     \"[string     etc]\",\n     \"[string   ]) [keyword !important];\",\n     \"}\");\n\n  MT(\"font_face\",\n     \"[def @font-face] {\",\n     \"  [property font-family]: [string 'myfont'];\",\n     \"  [error nonsense]: [string 'abc'];\",\n     \"  [property src]: [atom url]([string http://blah]),\",\n     \"    [atom url]([string http://foo]);\",\n     \"}\");\n\n  MT(\"empty_url\",\n     \"[def @import] [tag url]() [tag screen];\");\n\n  MT(\"parens\",\n     \"[qualifier .foo] {\",\n     \"  [property background-image]: [variable fade]([atom #000], [number 20%]);\",\n     \"  [property border-image]: [atom linear-gradient](\",\n     \"    [atom to] [atom bottom],\",\n     \"    [variable fade]([atom #000], [number 20%]) [number 0%],\",\n     \"    [variable fade]([atom #000], [number 20%]) [number 100%]\",\n     \"  );\",\n     \"}\");\n\n  MT(\"css_variable\",\n     \":[variable-3 root] {\",\n     \"  [variable-2 --main-color]: [atom #06c];\",\n     \"}\",\n     \"[tag h1][builtin #foo] {\",\n     \"  [property color]: [atom var]([variable-2 --main-color]);\",\n     \"}\");\n\n  MT(\"supports\",\n     \"[def @supports] ([keyword not] (([property text-align-last]: [atom justify]) [keyword or] ([meta -moz-][property text-align-last]: [atom justify])) {\",\n     \"  [property text-align-last]: [atom justify];\",\n     \"}\");\n\n   MT(\"document\",\n      \"[def @document] [tag url]([string http://blah]),\",\n      \"  [tag url-prefix]([string https://]),\",\n      \"  [tag domain]([string blah.com]),\",\n      \"  [tag regexp]([string \\\".*blah.+\\\"]) {\",\n      \"    [builtin #id] {\",\n      \"      [property background-color]: [keyword white];\",\n      \"    }\",\n      \"    [tag foo] {\",\n      \"      [property font-family]: [variable Verdana], [atom sans-serif];\",\n      \"    }\",\n      \"  }\");\n\n   MT(\"document_url\",\n      \"[def @document] [tag url]([string http://blah]) { [qualifier .class] { } }\");\n\n   MT(\"document_urlPrefix\",\n      \"[def @document] [tag url-prefix]([string https://]) { [builtin #id] { } }\");\n\n   MT(\"document_domain\",\n      \"[def @document] [tag domain]([string blah.com]) { [tag foo] { } }\");\n\n   MT(\"document_regexp\",\n      \"[def @document] [tag regexp]([string \\\".*blah.+\\\"]) { [builtin #id] { } }\");\n\n   MT(\"counter-style\",\n      \"[def @counter-style] [variable binary] {\",\n      \"  [property system]: [atom numeric];\",\n      \"  [property symbols]: [number 0] [number 1];\",\n      \"  [property suffix]: [string \\\".\\\"];\",\n      \"  [property range]: [atom infinite];\",\n      \"  [property speak-as]: [atom numeric];\",\n      \"}\");\n\n   MT(\"counter-style-additive-symbols\",\n      \"[def @counter-style] [variable simple-roman] {\",\n      \"  [property system]: [atom additive];\",\n      \"  [property additive-symbols]: [number 10] [variable X], [number 5] [variable V], [number 1] [variable I];\",\n      \"  [property range]: [number 1] [number 49];\",\n      \"}\");\n\n   MT(\"counter-style-use\",\n      \"[tag ol][qualifier .roman] { [property list-style]: [variable simple-roman]; }\");\n\n   MT(\"counter-style-symbols\",\n      \"[tag ol] { [property list-style]: [atom symbols]([atom cyclic] [string \\\"*\\\"] [string \\\"\\\\2020\\\"] [string \\\"\\\\2021\\\"] [string \\\"\\\\A7\\\"]); }\");\n})();\n"]}