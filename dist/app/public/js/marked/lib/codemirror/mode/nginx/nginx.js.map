{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/nginx/nginx.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","words","str","obj","split","i","length","keywords","keywords_block","keywords_important","indentUnit","type","ret","style","tp","tokenBase","stream","state","eatWhile","cur","current","propertyIsEnumerable","ch","next","eat","tokenize","tokenCComment","tokenSGMLComment","tokenString","skipToEnd","match","test","maybeEnd","dashes","quote","escaped","startState","base","baseIndent","stack","token","eatSpace","context","pop","push","indent","textAfter","n","electricChars","defineMIME"],"mappings":"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","file":"nginx.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"nginx\", function(config) {\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  var keywords = words(\n    /* ngxDirectiveControl */ \"break return rewrite set\" +\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\n    );\n\n  var keywords_block = words(\n    /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\n    );\n\n  var keywords_important = words(\n    /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\n    );\n\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n\n\n    stream.eatWhile(/[\\w\\$_]/);\n\n    var cur = stream.current();\n\n\n    if (keywords.propertyIsEnumerable(cur)) {\n      return \"keyword\";\n    }\n    else if (keywords_block.propertyIsEnumerable(cur)) {\n      return \"variable-2\";\n    }\n    else if (keywords_important.propertyIsEnumerable(cur)) {\n      return \"string-2\";\n    }\n    /**/\n\n    var ch = stream.next();\n    if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\n    else if (ch == \"/\" && stream.eat(\"*\")) {\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n    else if (ch == \"<\" && stream.eat(\"!\")) {\n      state.tokenize = tokenSGMLComment;\n      return tokenSGMLComment(stream, state);\n    }\n    else if (ch == \"=\") ret(null, \"compare\");\n    else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"comment\", \"comment\");\n    }\n    else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    }\n    else if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    }\n    else if (/[,.+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    }\n    else if (/[;{}:\\[\\]]/.test(ch)) {\n      return ret(null, ch);\n    }\n    else {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"variable\", \"variable\");\n    }\n  }\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped)\n          break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (type == \"hash\" && context == \"rule\") style = \"atom\";\n      else if (style == \"variable\") {\n        if (context == \"rule\") style = \"number\";\n        else if (!context || context == \"@media{\") style = \"tag\";\n      }\n\n      if (context == \"rule\" && /^[\\{\\};]$/.test(type))\n        state.stack.pop();\n      if (type == \"{\") {\n        if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\n        else state.stack.push(\"{\");\n      }\n      else if (type == \"}\") state.stack.pop();\n      else if (type == \"@media\") state.stack.push(\"@media\");\n      else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n      if (/^\\}/.test(textAfter))\n        n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/nginx\", \"text/x-nginx-conf\");\n\n});\n"]}