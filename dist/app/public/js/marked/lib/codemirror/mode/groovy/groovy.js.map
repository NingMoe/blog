{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/groovy/groovy.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","words","str","obj","split","i","length","keywords","blockKeywords","atoms","curPunc","tokenBase","stream","state","ch","next","startString","test","eatWhile","eat","tokenize","push","tokenComment","skipToEnd","expectExpression","lastToken","cur","current","propertyIsEnumerable","isBase","quote","tripleQuoted","t","escaped","end","match","tokenBaseUntilBrace","pop","depth","peek","maybeEnd","last","Context","indented","column","type","align","prev","pushContext","col","context","popContext","startState","basecolumn","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","firstChar","charAt","closing","electricChars","fold","defineMIME"],"mappings":"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","file":"groovy.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"groovy\", function(config) {\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = words(\n    \"abstract as assert boolean break byte case catch char class const continue def default \" +\n    \"do double else enum extends final finally float for goto if implements import in \" +\n    \"instanceof int interface long native new package private protected public return \" +\n    \"short static strictfp super switch synchronized threadsafe throw throws transient \" +\n    \"try void volatile while\");\n  var blockKeywords = words(\"catch class do else finally for if switch try while enum interface def\");\n  var atoms = words(\"null true false this\");\n\n  var curPunc;\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      return startString(ch, stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      if (stream.eat(/eE/)) { stream.eat(/\\+\\-/); stream.eatWhile(/\\d/); }\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment);\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (expectExpression(state.lastToken)) {\n        return startString(ch, stream, state);\n      }\n    }\n    if (ch == \"-\" && stream.eat(\">\")) {\n      curPunc = \"->\";\n      return null;\n    }\n    if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n      stream.eatWhile(/[+\\-*&%=<>|~]/);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    if (ch == \"@\") { stream.eatWhile(/[\\w\\$_\\.]/); return \"meta\"; }\n    if (state.lastToken == \".\") return \"property\";\n    if (stream.eat(\":\")) { curPunc = \"proplabel\"; return \"property\"; }\n    var cur = stream.current();\n    if (atoms.propertyIsEnumerable(cur)) { return \"atom\"; }\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    return \"variable\";\n  }\n  tokenBase.isBase = true;\n\n  function startString(quote, stream, state) {\n    var tripleQuoted = false;\n    if (quote != \"/\" && stream.eat(quote)) {\n      if (stream.eat(quote)) tripleQuoted = true;\n      else return \"string\";\n    }\n    function t(stream, state) {\n      var escaped = false, next, end = !tripleQuoted;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          if (!tripleQuoted) { break; }\n          if (stream.match(quote + quote)) { end = true; break; }\n        }\n        if (quote == '\"' && next == \"$\" && !escaped && stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize.pop();\n      return \"string\";\n    }\n    state.tokenize.push(t);\n    return t(stream, state);\n  }\n\n  function tokenBaseUntilBrace() {\n    var depth = 1;\n    function t(stream, state) {\n      if (stream.peek() == \"}\") {\n        depth--;\n        if (depth == 0) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        }\n      } else if (stream.peek() == \"{\") {\n        depth++;\n      }\n      return tokenBase(stream, state);\n    }\n    t.isBase = true;\n    return t;\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize.pop();\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function expectExpression(last) {\n    return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) ||\n      last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: [tokenBase],\n        context: new Context((basecolumn || 0) - config.indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true,\n        lastToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        // Automatic semicolon insertion\n        if (ctx.type == \"statement\" && !expectExpression(state.lastToken)) {\n          popContext(state); ctx = state.context;\n        }\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      // Handle indentation for {x -> \\n ... }\n      else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n        popContext(state);\n        state.context.align = false;\n      }\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      state.lastToken = curPunc || style;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (!state.tokenize[state.tokenize.length-1].isBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context;\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken)) ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : config.indentUnit);\n    },\n\n    electricChars: \"{}\",\n    fold: \"brace\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-groovy\", \"groovy\");\n\n});\n"]}