{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/haxe/haxe.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","keywords","kw","type","style","A","B","C","operator","atom","attribute","isOperatorChar","chain","stream","state","f","tokenize","nextUntilUnescaped","end","escaped","next","content","ret","tp","cont","haxeTokenBase","ch","haxeTokenString","test","eat","eatWhile","match","reAllowed","haxeTokenComment","skipToEnd","current","word","known","propertyIsEnumerable","kwAllowed","quote","maybeEnd","atomicTypes","HaxeLexical","indented","column","align","prev","info","inScope","varname","v","localVars","name","parseHaxe","cc","cx","marked","lexical","hasOwnProperty","combinator","length","pop","statement","lex","imported","typename","charAt","len","importedtypes","i","registerimport","importname","t","pass","arguments","push","apply","register","context","defaultVars","pushcontext","vars","popcontext","pushlex","result","poplex","expect","wanted","metadef","vardef1","expression","block","maybeattribute","functiondef","forspec1","maybelabel","funarg","importdef","typedef","maybeoperator","maybeexpression","commasep","objprop","value","property","metaargs","what","proceed","typeuse","vardef2","forin","_type","typestring","typeprop","startState","basecolumn","defaulttypes","token","sol","indentation","eatSpace","indent","textAfter","firstChar","closing","electricChars","blockCommentStart","blockCommentEnd","lineComment","defineMIME","inString","peek","skipTo"],"mappings":"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","file":"haxe.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haxe\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"}, attribute = {type:\"attribute\", style: \"attribute\"};\n  var type = kw(\"typedef\");\n    return {\n      \"if\": A, \"while\": A, \"else\": B, \"do\": B, \"try\": B,\n      \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"throw\": C,\n      \"var\": kw(\"var\"), \"inline\":attribute, \"static\": attribute, \"using\":kw(\"import\"),\n    \"public\": attribute, \"private\": attribute, \"cast\": kw(\"cast\"), \"import\": kw(\"import\"), \"macro\": kw(\"macro\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"), \"untyped\": kw(\"untyped\"), \"callback\": kw(\"cb\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"never\": kw(\"property_access\"), \"trace\":kw(\"trace\"),\n    \"class\": type, \"abstract\":type, \"enum\":type, \"interface\":type, \"typedef\":type, \"extends\":type, \"implements\":type, \"dynamic\":type,\n      \"true\": atom, \"false\": atom, \"null\": atom\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|]/;\n\n  function chain(stream, state, f) {\n    state.tokenize = f;\n    return f(stream, state);\n  }\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next == end && !escaped)\n        return false;\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return escaped;\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n\n  function haxeTokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\")\n      return chain(stream, state, haxeTokenString(ch));\n    else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch))\n      return ret(ch);\n    else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    }\n    else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\n      stream.match(/^\\d*(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    }\n    else if (state.reAllowed && (ch == \"~\" && stream.eat(/\\//))) {\n      nextUntilUnescaped(stream, \"/\");\n      stream.eatWhile(/[gimsu]/);\n      return ret(\"regexp\", \"string-2\");\n    }\n    else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        return chain(stream, state, haxeTokenComment);\n      }\n      else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      }\n      else {\n        stream.eatWhile(isOperatorChar);\n        return ret(\"operator\", null, stream.current());\n      }\n    }\n    else if (ch == \"#\") {\n        stream.skipToEnd();\n        return ret(\"conditional\", \"meta\");\n    }\n    else if (ch == \"@\") {\n      stream.eat(/:/);\n      stream.eatWhile(/[\\w_]/);\n      return ret (\"metadata\", \"meta\");\n    }\n    else if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return ret(\"operator\", null, stream.current());\n    }\n    else {\n    var word;\n    if(/[A-Z]/.test(ch))\n    {\n      stream.eatWhile(/[\\w_<>]/);\n      word = stream.current();\n      return ret(\"type\", \"variable-3\", word);\n    }\n    else\n    {\n        stream.eatWhile(/[\\w_]/);\n        var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n        return (known && state.kwAllowed) ? ret(known.type, known.style, word) :\n                       ret(\"variable\", \"variable\", word);\n    }\n    }\n  }\n\n  function haxeTokenString(quote) {\n    return function(stream, state) {\n      if (!nextUntilUnescaped(stream, quote))\n        state.tokenize = haxeTokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function haxeTokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = haxeTokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true};\n\n  function HaxeLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n  }\n\n  function parseHaxe(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n    if (type == \"variable\" && imported(state, content)) return \"variable-3\";\n        return style;\n      }\n    }\n  }\n\n  function imported(state, typename)\n  {\n  if (/[a-z]/.test(typename.charAt(0)))\n    return false;\n  var len = state.importedtypes.length;\n  for (var i = 0; i<len; i++)\n    if(state.importedtypes[i]==typename) return true;\n  }\n\n\n  function registerimport(importname) {\n  var state = cx.state;\n  for (var t = state.importedtypes; t; t = t.next)\n    if(t.name == importname) return;\n  state.importedtypes = { name: importname, next: state.importedtypes };\n  }\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function register(varname) {\n    var state = cx.state;\n    if (state.context) {\n      cx.marked = \"def\";\n      for (var v = state.localVars; v; v = v.next)\n        if (v.name == varname) return;\n      state.localVars = {name: varname, next: state.localVars};\n    }\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: null};\n  function pushcontext() {\n    if (!cx.state.context) cx.state.localVars = defaultVars;\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state;\n      state.lexical = new HaxeLexical(state.indented, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function f(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(f);\n    };\n    return f;\n  }\n\n  function statement(type) {\n    if (type == \"@\") return cont(metadef);\n    if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"{\") return cont(pushlex(\"}\"), pushcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\n                                      poplex, statement, poplex);\n    if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n    if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n                                         block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                        statement, poplex, popcontext);\n    if (type == \"import\") return cont(importdef, expect(\";\"));\n    if (type == \"typedef\") return cont(typedef);\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type) {\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeoperator);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"keyword c\") return cont(maybeexpression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeoperator);\n    if (type == \"operator\") return cont(expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(expression, \"]\"), poplex, maybeoperator);\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeoperator);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperator(type, value) {\n    if (type == \"operator\" && /\\+\\+|--/.test(value)) return cont(maybeoperator);\n    if (type == \"operator\" || type == \":\") return cont(expression);\n    if (type == \";\") return;\n    if (type == \"(\") return cont(pushlex(\")\"), commasep(expression, \")\"), poplex, maybeoperator);\n    if (type == \".\") return cont(property, maybeoperator);\n    if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, maybeoperator);\n  }\n\n  function maybeattribute(type) {\n    if (type == \"attribute\") return cont(maybeattribute);\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"var\") return cont(vardef1);\n  }\n\n  function metadef(type) {\n    if(type == \":\") return cont(metadef);\n    if(type == \"variable\") return cont(metadef);\n    if(type == \"(\") return cont(pushlex(\")\"), commasep(metaargs, \")\"), poplex, statement);\n  }\n  function metaargs(type) {\n    if(type == \"variable\") return cont();\n  }\n\n  function importdef (type, value) {\n  if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n  else if(type == \"variable\" || type == \"property\" || type == \".\" || value == \"*\") return cont(importdef);\n  }\n\n  function typedef (type, value)\n  {\n  if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n  else if (type == \"type\" && /[A-Z]/.test(value.charAt(0))) { return cont(); }\n  }\n\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperator, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type) {\n    if (type == \"variable\") cx.marked = \"property\";\n    if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expression);\n  }\n  function commasep(what, end) {\n    function proceed(type) {\n      if (type == \",\") return cont(what, proceed);\n      if (type == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type) {\n      if (type == end) return cont();\n      else return pass(what, proceed);\n    };\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function vardef1(type, value) {\n    if (type == \"variable\"){register(value); return cont(typeuse, vardef2);}\n    return cont();\n  }\n  function vardef2(type, value) {\n    if (value == \"=\") return cont(expression, vardef2);\n    if (type == \",\") return cont(vardef1);\n  }\n  function forspec1(type, value) {\n  if (type == \"variable\") {\n    register(value);\n  }\n  return cont(pushlex(\")\"), pushcontext, forin, expression, poplex, statement, popcontext);\n  }\n  function forin(_type, value) {\n    if (value == \"in\") return cont();\n  }\n  function functiondef(type, value) {\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (value == \"new\") return cont(functiondef);\n    if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, typeuse, statement, popcontext);\n  }\n  function typeuse(type) {\n    if(type == \":\") return cont(typestring);\n  }\n  function typestring(type) {\n    if(type == \"type\") return cont();\n    if(type == \"variable\") return cont();\n    if(type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\"), poplex);\n  }\n  function typeprop(type) {\n    if(type == \"variable\") return cont(typeuse);\n  }\n  function funarg(type, value) {\n    if (type == \"variable\") {register(value); return cont(typeuse);}\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n    var defaulttypes = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\"];\n      return {\n        tokenize: haxeTokenBase,\n        reAllowed: true,\n        kwAllowed: true,\n        cc: [],\n        lexical: new HaxeLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n    importedtypes: defaulttypes,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: 0\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.reAllowed = !!(type == \"operator\" || type == \"keyword c\" || type.match(/^[\\[{}\\(,;:]$/));\n      state.kwAllowed = type != '.';\n      return parseHaxe(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != haxeTokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n      if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n      if (type == \"vardef\") return lexical.indented + 4;\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"stat\" || type == \"form\") return lexical.indented + indentUnit;\n      else if (lexical.info == \"switch\" && !closing)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-haxe\", \"haxe\");\n\nCodeMirror.defineMode(\"hxml\", function () {\n\n  return {\n    startState: function () {\n      return {\n        define: false,\n        inString: false\n      };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      var sol = stream.sol();\n\n      ///* comments */\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (sol && ch == \"-\") {\n        var style = \"variable-2\";\n\n        stream.eat(/-/);\n\n        if (stream.peek() == \"-\") {\n          stream.eat(/-/);\n          style = \"keyword a\";\n        }\n\n        if (stream.peek() == \"D\") {\n          stream.eat(/[D]/);\n          style = \"keyword c\";\n          state.define = true;\n        }\n\n        stream.eatWhile(/[A-Z]/i);\n        return style;\n      }\n\n      var ch = stream.peek();\n\n      if (state.inString == false && ch == \"'\") {\n        state.inString = true;\n        ch = stream.next();\n      }\n\n      if (state.inString == true) {\n        if (stream.skipTo(\"'\")) {\n\n        } else {\n          stream.skipToEnd();\n        }\n\n        if (stream.peek() == \"'\") {\n          stream.next();\n          state.inString = false;\n        }\n\n        return \"string\";\n      }\n\n      stream.next();\n      return null;\n    },\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-hxml\", \"hxml\");\n\n});\n"]}