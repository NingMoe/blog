{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/cobol/cobol.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","BUILTIN","COMMENT","STRING","ATOM","NUMBER","KEYWORD","MODTAG","COBOLLINENUM","PERIOD","makeKeywords","str","obj","words","split","i","length","atoms","keywords","builtins","tests","digit","digit_or_colon","hex","sign","exponent","keyword_char","symbol","isNumber","ch","stream","eat","eatWhile","test","peek","next","startState","indentStack","indentation","mode","token","state","sol","eatSpace","returnType","col","column","skipToEnd","current","match","undefined","propertyIsEnumerable","toUpperCase","indent","defineMIME"],"mappings":";;;;AAAA;AACA;;AAEA;;;;AAIA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,QAAOC,OAAP,yCAAOA,OAAP,MAAkB,QAAlB,IAA8B,QAAOC,MAAP,yCAAOA,MAAP,MAAiB,QAAnD,EAA6D;AAC3DF,QAAIG,QAAQ,sBAAR,CAAJ,EADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,OAAOC,GAA1C,EAA+C;AAClDD,WAAO,CAAC,sBAAD,CAAP,EAAiCJ,GAAjC,EADG,KAEA;AACHA,QAAIM,UAAJ;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,aAAWC,UAAX,CAAsB,OAAtB,EAA+B,YAAY;AACzC,QAAIC,UAAU,SAAd;AAAA,QAAyBC,UAAU,SAAnC;AAAA,QAA8CC,SAAS,QAAvD;AAAA,QACIC,OAAO,MADX;AAAA,QACmBC,SAAS,QAD5B;AAAA,QACsCC,UAAU,SADhD;AAAA,QAC2DC,SAAS,QADpE;AAAA,QAEIC,eAAe,KAFnB;AAAA,QAE0BC,SAAS,MAFnC;AAGA,aAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,UAAIC,MAAM,EAAV;AAAA,UAAcC,QAAQF,IAAIG,KAAJ,CAAU,GAAV,CAAtB;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkC,EAAED,CAApC;AAAuCH,YAAIC,MAAME,CAAN,CAAJ,IAAgB,IAAhB;AAAvC,OACA,OAAOH,GAAP;AACD;AACD,QAAIK,QAAQP,aAAa,iEAAb,CAAZ;AACA,QAAIQ,WAAWR,aACX,uCACA,qCADA,GAEA,gFAFA,GAGA,+BAHA,GAIA,sCAJA,GAKA,kCALA,GAMA,0CANA,GAOA,qDAPA,GAQA,8BARA,GASA,mCATA,GAUA,uBAVA,GAWA,4CAXA,GAYA,gCAZA,GAaA,2CAbA,GAcA,0CAdA,GAeA,qCAfA,GAgBA,qDAhBA,GAiBA,kFAjBA,GAkBA,0EAlBA,GAmBA,mDAnBA,GAoBA,iDApBA,GAqBA,2CArBA,GAsBA,wCAtBA,GAuBA,2CAvBA,GAwBA,iEAxBA,GAyBA,2DAzBA,GA0BA,sDA1BA,GA2BA,2DA3BA,GA4BA,sDA5BA,GA6BA,uDA7BA,GA8BA,8CA9BA,GA+BA,oDA/BA,GAgCA,gDAhCA,GAiCA,yCAjCA,GAkCA,4BAlCA,GAmCA,2DAnCA,GAoCA,sDApCA,GAqCA,yDArCA,GAsCA,0DAtCA,GAuCA,2DAvCA,GAwCA,6CAxCA,GAyCA,qCAzCA,GA0CA,mCA1CA,GA2CA,2CA3CA,GA4CA,sDA5CA,GA6CA,sCA7CA,GA8CA,4CA9CA,GA+CA,0CA/CA,GAgDA,sCAhDA,GAiDA,kCAjDA,GAkDA,mDAlDA,GAmDA,gCAnDA,GAoDA,0CApDA,GAqDA,0CArDA,GAsDA,8CAtDA,GAuDA,iDAvDA,GAwDA,sCAxDA,GAyDA,gCAzDA,GA0DA,6BA1DA,GA2DA,gDA3DA,GA4DA,0CA5DA,GA6DA,gDA7DA,GA8DA,sBA9DA,GA+DA,wCA/DA,GAgEA,oCAhEA,GAiEA,6CAjEA,GAkEA,2BAlEA,GAmEA,0CAnEA,GAoEA,uDApEA,GAqEA,yBArEA,GAsEA,sCAtEA,GAuEA,6CAvEA,GAwEA,0CAxEA,GAyEA,yBAzEA,GA0EA,2CA1EA,GA2EA,wDA3EA,GA4EA,gDA5EA,GA6EA,qCA7EA,GA8EA,8BA9EA,GA+EA,6CA/EA,GAgFA,6CAhFA,GAiFA,yDAjFA,GAkFA,6CAlFA,GAmFA,gDAnFA,GAoFA,yCApFA,GAqFA,uDArFA,GAsFA,gCAtFA,GAuFA,+CAvFA,GAwFA,4BAxFA,GAyFA,gDAzFA,GA0FA,yCA1FA,GA2FA,kCA3FA,GA4FA,oCA5FA,GA6FA,gDA7FA,GA8FA,+CA9FA,GA+FA,mCA/FA,GAgGA,wDAhGA,GAiGA,2CAjGA,GAkGA,0CAlGA,GAmGA,sCAnGA,GAoGA,gCApGA,GAqGA,gCArGA,GAsGA,4CAtGA,GAuGA,sCAvGA,GAwGA,gCAxGA,GAyGA,mCAzGA,GA0GA,oCA1GA,GA2GA,sCA3GA,GA4GA,2CA5GA,GA6GA,8CA9GW,CAAf;;AAgHA,QAAIS,WAAWT,aAAa,yBAAb,CAAf;AACA,QAAIU,QAAQ;AACVC,aAAO,IADG;AAEVC,sBAAgB,OAFN;AAGVC,WAAK,WAHK;AAIVC,YAAM,MAJI;AAKVC,gBAAU,IALA;AAMVC,oBAAc,iBANJ;AAOVC,cAAQ;AAPE,KAAZ;AASA,aAASC,QAAT,CAAkBC,EAAlB,EAAsBC,MAAtB,EAA6B;AAC3B;AACA,UAAKD,OAAO,GAAP,IAAcC,OAAOC,GAAP,CAAW,IAAX,CAAnB,EAAsC;AACpCD,eAAOE,QAAP,CAAgBZ,MAAMG,GAAtB;AACA,eAAO,IAAP;AACD;AACD;AACA,UAAK,CAAEM,MAAM,GAAN,IAAaA,MAAM,GAArB,KAAgCT,MAAMC,KAAN,CAAYY,IAAZ,CAAiBH,OAAOI,IAAP,EAAjB,CAArC,EAAyE;AACvEJ,eAAOC,GAAP,CAAWX,MAAMI,IAAjB;AACAK,aAAKC,OAAOK,IAAP,EAAL;AACD;AACD,UAAKf,MAAMC,KAAN,CAAYY,IAAZ,CAAiBJ,EAAjB,CAAL,EAA4B;AAC1BC,eAAOC,GAAP,CAAWF,EAAX;AACAC,eAAOE,QAAP,CAAgBZ,MAAMC,KAAtB;AACA,YAAK,OAAOS,OAAOI,IAAP,EAAZ,EAA2B;AACzBJ,iBAAOC,GAAP,CAAW,GAAX;AACAD,iBAAOE,QAAP,CAAgBZ,MAAMC,KAAtB;AACD;AACD,YAAKS,OAAOC,GAAP,CAAWX,MAAMK,QAAjB,CAAL,EAAkC;AAChCK,iBAAOC,GAAP,CAAWX,MAAMI,IAAjB;AACAM,iBAAOE,QAAP,CAAgBZ,MAAMC,KAAtB;AACD;AACD,eAAO,IAAP;AACD;AACD,aAAO,KAAP;AACD;AACD,WAAO;AACLe,kBAAY,sBAAY;AACtB,eAAO;AACLC,uBAAa,IADR;AAELC,uBAAa,CAFR;AAGLC,gBAAM;AAHD,SAAP;AAKD,OAPI;AAQLC,aAAO,eAAUV,MAAV,EAAkBW,KAAlB,EAAyB;AAC9B,YAAIA,MAAMJ,WAAN,IAAqB,IAArB,IAA6BP,OAAOY,GAAP,EAAjC,EAA+C;AAC7C;AACAD,gBAAMH,WAAN,GAAoB,CAApB,CAF6C,CAErB;AACzB;AACD;AACA,YAAIR,OAAOa,QAAP,EAAJ,EAAuB;AACrB,iBAAO,IAAP;AACD;AACD,YAAIC,aAAa,IAAjB;AACA,gBAAOH,MAAMF,IAAb;AACA,eAAK,QAAL;AAAe;AACb,gBAAIJ,OAAO,KAAX;AACA,mBAAO,CAACA,OAAOL,OAAOK,IAAP,EAAR,KAA0B,IAAjC,EAAuC;AACrC,kBAAIA,QAAQ,IAAR,IAAgBA,QAAQ,IAA5B,EAAkC;AAChCM,sBAAMF,IAAN,GAAa,KAAb;AACA;AACD;AACF;AACDK,yBAAazC,MAAb,CARF,CAQuB;AACrB;AACF;AAAS;AACP,gBAAI0B,KAAKC,OAAOK,IAAP,EAAT;AACA,gBAAIU,MAAMf,OAAOgB,MAAP,EAAV;AACA,gBAAID,OAAO,CAAP,IAAYA,OAAO,CAAvB,EAA0B;AACxBD,2BAAapC,YAAb;AACD,aAFD,MAEO,IAAIqC,OAAO,EAAP,IAAaA,OAAO,EAAxB,EAA4B;AACjCf,qBAAOiB,SAAP;AACAH,2BAAarC,MAAb;AACD,aAHM,MAGA,IAAIsB,MAAM,GAAN,IAAagB,OAAO,CAAxB,EAA2B;AAAE;AAClCf,qBAAOiB,SAAP,GADgC,CACZ;AACpBH,2BAAa1C,OAAb;AACD,aAHM,MAGA,IAAI2B,MAAM,IAAN,IAAcA,MAAM,IAAxB,EAA8B;AACnCY,oBAAMF,IAAN,GAAa,QAAb;AACAK,2BAAazC,MAAb;AACD,aAHM,MAGA,IAAI0B,MAAM,GAAN,IAAa,CAAGT,MAAME,cAAN,CAAqBW,IAArB,CAA0BH,OAAOI,IAAP,EAA1B,CAApB,EAAgE;AACrEU,2BAAaxC,IAAb;AACD,aAFM,MAEA,IAAIyB,MAAM,GAAV,EAAe;AACpBe,2BAAanC,MAAb;AACD,aAFM,MAEA,IAAImB,SAASC,EAAT,EAAYC,MAAZ,CAAJ,EAAwB;AAC7Bc,2BAAavC,MAAb;AACD,aAFM,MAEA;AACL,kBAAIyB,OAAOkB,OAAP,GAAiBC,KAAjB,CAAuB7B,MAAMO,MAA7B,CAAJ,EAA0C;AACxC,uBAAOkB,MAAM,EAAb,EAAiB;AACf,sBAAIf,OAAOC,GAAP,CAAWX,MAAMO,MAAjB,MAA6BuB,SAAjC,EAA4C;AAC1C;AACD,mBAFD,MAEO;AACLL;AACD;AACF;AACF;AACD,kBAAI3B,YAAYA,SAASiC,oBAAT,CAA8BrB,OAAOkB,OAAP,GAAiBI,WAAjB,EAA9B,CAAhB,EAA+E;AAC7ER,6BAAatC,OAAb;AACD,eAFD,MAEO,IAAIa,YAAYA,SAASgC,oBAAT,CAA8BrB,OAAOkB,OAAP,GAAiBI,WAAjB,EAA9B,CAAhB,EAA+E;AACpFR,6BAAa3C,OAAb;AACD,eAFM,MAEA,IAAIgB,SAASA,MAAMkC,oBAAN,CAA2BrB,OAAOkB,OAAP,GAAiBI,WAAjB,EAA3B,CAAb,EAAyE;AAC9ER,6BAAaxC,IAAb;AACD,eAFM,MAEAwC,aAAa,IAAb;AACR;AAhDH;AAkDA,eAAOA,UAAP;AACD,OArEI;AAsELS,cAAQ,gBAAUZ,KAAV,EAAiB;AACvB,YAAIA,MAAMJ,WAAN,IAAqB,IAAzB,EAA+B,OAAOI,MAAMH,WAAb;AAC/B,eAAOG,MAAMJ,WAAN,CAAkBgB,MAAzB;AACD;AAzEI,KAAP;AA2ED,GAzOD;;AA2OAtD,aAAWuD,UAAX,CAAsB,cAAtB,EAAsC,OAAtC;AAEC,CAvPD","file":"cobol.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n/**\n * Author: Gautam Mehta\n * Branched from CodeMirror's Scheme mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"cobol\", function () {\n  var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n      ATOM = \"atom\", NUMBER = \"number\", KEYWORD = \"keyword\", MODTAG = \"header\",\n      COBOLLINENUM = \"def\", PERIOD = \"link\";\n  function makeKeywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var atoms = makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\n  var keywords = makeKeywords(\n      \"ACCEPT ACCESS ACQUIRE ADD ADDRESS \" +\n      \"ADVANCING AFTER ALIAS ALL ALPHABET \" +\n      \"ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED \" +\n      \"ALSO ALTER ALTERNATE AND ANY \" +\n      \"ARE AREA AREAS ARITHMETIC ASCENDING \" +\n      \"ASSIGN AT ATTRIBUTE AUTHOR AUTO \" +\n      \"AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS \" +\n      \"B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP \" +\n      \"BEFORE BELL BINARY BIT BITS \" +\n      \"BLANK BLINK BLOCK BOOLEAN BOTTOM \" +\n      \"BY CALL CANCEL CD CF \" +\n      \"CH CHARACTER CHARACTERS CLASS CLOCK-UNITS \" +\n      \"CLOSE COBOL CODE CODE-SET COL \" +\n      \"COLLATING COLUMN COMMA COMMIT COMMITMENT \" +\n      \"COMMON COMMUNICATION COMP COMP-0 COMP-1 \" +\n      \"COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 \" +\n      \"COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 \" +\n      \"COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 \" +\n      \"COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE \" +\n      \"CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS \" +\n      \"CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS \" +\n      \"CONVERTING COPY CORR CORRESPONDING COUNT \" +\n      \"CRT CRT-UNDER CURRENCY CURRENT CURSOR \" +\n      \"DATA DATE DATE-COMPILED DATE-WRITTEN DAY \" +\n      \"DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION \" +\n      \"DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS \" +\n      \"DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE \" +\n      \"DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING \" +\n      \"DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED \" +\n      \"DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION \" +\n      \"DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 \" +\n      \"DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 \" +\n      \"DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION \" +\n      \"DOWN DROP DUPLICATE DUPLICATES DYNAMIC \" +\n      \"EBCDIC EGI EJECT ELSE EMI \" +\n      \"EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. \" +\n      \"END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY \" +\n      \"END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY \" +\n      \"END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN \" +\n      \"END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT \" +\n      \"END-UNSTRING END-WRITE END-XML ENTER ENTRY \" +\n      \"ENVIRONMENT EOP EQUAL EQUALS ERASE \" +\n      \"ERROR ESI EVALUATE EVERY EXCEEDS \" +\n      \"EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL \" +\n      \"EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL \" +\n      \"FILE-STREAM FILES FILLER FINAL FIND \" +\n      \"FINISH FIRST FOOTING FOR FOREGROUND-COLOR \" +\n      \"FOREGROUND-COLOUR FORMAT FREE FROM FULL \" +\n      \"FUNCTION GENERATE GET GIVING GLOBAL \" +\n      \"GO GOBACK GREATER GROUP HEADING \" +\n      \"HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL \" +\n      \"ID IDENTIFICATION IF IN INDEX \" +\n      \"INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 \" +\n      \"INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED \" +\n      \"INDIC INDICATE INDICATOR INDICATORS INITIAL \" +\n      \"INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT \" +\n      \"INSTALLATION INTO INVALID INVOKE IS \" +\n      \"JUST JUSTIFIED KANJI KEEP KEY \" +\n      \"LABEL LAST LD LEADING LEFT \" +\n      \"LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY \" +\n      \"LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER \" +\n      \"LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE \" +\n      \"LOCALE LOCALLY LOCK \" +\n      \"MEMBER MEMORY MERGE MESSAGE METACLASS \" +\n      \"MODE MODIFIED MODIFY MODULES MOVE \" +\n      \"MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE \" +\n      \"NEXT NO NO-ECHO NONE NOT \" +\n      \"NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER \" +\n      \"NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS \" +\n      \"OF OFF OMITTED ON ONLY \" +\n      \"OPEN OPTIONAL OR ORDER ORGANIZATION \" +\n      \"OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL \" +\n      \"PADDING PAGE PAGE-COUNTER PARSE PERFORM \" +\n      \"PF PH PIC PICTURE PLUS \" +\n      \"POINTER POSITION POSITIVE PREFIX PRESENT \" +\n      \"PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES \" +\n      \"PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID \" +\n      \"PROMPT PROTECTED PURGE QUEUE QUOTE \" +\n      \"QUOTES RANDOM RD READ READY \" +\n      \"REALM RECEIVE RECONNECT RECORD RECORD-NAME \" +\n      \"RECORDS RECURSIVE REDEFINES REEL REFERENCE \" +\n      \"REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE \" +\n      \"REMAINDER REMOVAL RENAMES REPEATED REPLACE \" +\n      \"REPLACING REPORT REPORTING REPORTS REPOSITORY \" +\n      \"REQUIRED RERUN RESERVE RESET RETAINING \" +\n      \"RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO \" +\n      \"REVERSED REWIND REWRITE RF RH \" +\n      \"RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED \" +\n      \"RUN SAME SCREEN SD SEARCH \" +\n      \"SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT \" +\n      \"SELECT SEND SENTENCE SEPARATE SEQUENCE \" +\n      \"SEQUENTIAL SET SHARED SIGN SIZE \" +\n      \"SKIP1 SKIP2 SKIP3 SORT SORT-MERGE \" +\n      \"SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL \" +\n      \"SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 \" +\n      \"START STARTING STATUS STOP STORE \" +\n      \"STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA \" +\n      \"SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS \" +\n      \"SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT \" +\n      \"TABLE TALLYING TAPE TENANT TERMINAL \" +\n      \"TERMINATE TEST TEXT THAN THEN \" +\n      \"THROUGH THRU TIME TIMES TITLE \" +\n      \"TO TOP TRAILING TRAILING-SIGN TRANSACTION \" +\n      \"TYPE TYPEDEF UNDERLINE UNEQUAL UNIT \" +\n      \"UNSTRING UNTIL UP UPDATE UPON \" +\n      \"USAGE USAGE-MODE USE USING VALID \" +\n      \"VALIDATE VALUE VALUES VARYING VLR \" +\n      \"WAIT WHEN WHEN-COMPILED WITH WITHIN \" +\n      \"WORDS WORKING-STORAGE WRITE XML XML-CODE \" +\n      \"XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \" );\n\n  var builtins = makeKeywords(\"- * ** / + < <= = > >= \");\n  var tests = {\n    digit: /\\d/,\n    digit_or_colon: /[\\d:]/,\n    hex: /[0-9a-f]/i,\n    sign: /[+-]/,\n    exponent: /e/i,\n    keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n    symbol: /[\\w*+\\-]/\n  };\n  function isNumber(ch, stream){\n    // hex\n    if ( ch === '0' && stream.eat(/x/i) ) {\n      stream.eatWhile(tests.hex);\n      return true;\n    }\n    // leading sign\n    if ( ( ch == '+' || ch == '-' ) && ( tests.digit.test(stream.peek()) ) ) {\n      stream.eat(tests.sign);\n      ch = stream.next();\n    }\n    if ( tests.digit.test(ch) ) {\n      stream.eat(ch);\n      stream.eatWhile(tests.digit);\n      if ( '.' == stream.peek()) {\n        stream.eat('.');\n        stream.eatWhile(tests.digit);\n      }\n      if ( stream.eat(tests.exponent) ) {\n        stream.eat(tests.sign);\n        stream.eatWhile(tests.digit);\n      }\n      return true;\n    }\n    return false;\n  }\n  return {\n    startState: function () {\n      return {\n        indentStack: null,\n        indentation: 0,\n        mode: false\n      };\n    },\n    token: function (stream, state) {\n      if (state.indentStack == null && stream.sol()) {\n        // update indentation, but only if indentStack is empty\n        state.indentation = 6 ; //stream.indentation();\n      }\n      // skip spaces\n      if (stream.eatSpace()) {\n        return null;\n      }\n      var returnType = null;\n      switch(state.mode){\n      case \"string\": // multi-line string parsing mode\n        var next = false;\n        while ((next = stream.next()) != null) {\n          if (next == \"\\\"\" || next == \"\\'\") {\n            state.mode = false;\n            break;\n          }\n        }\n        returnType = STRING; // continue on in string mode\n        break;\n      default: // default parsing mode\n        var ch = stream.next();\n        var col = stream.column();\n        if (col >= 0 && col <= 5) {\n          returnType = COBOLLINENUM;\n        } else if (col >= 72 && col <= 79) {\n          stream.skipToEnd();\n          returnType = MODTAG;\n        } else if (ch == \"*\" && col == 6) { // comment\n          stream.skipToEnd(); // rest of the line is a comment\n          returnType = COMMENT;\n        } else if (ch == \"\\\"\" || ch == \"\\'\") {\n          state.mode = \"string\";\n          returnType = STRING;\n        } else if (ch == \"'\" && !( tests.digit_or_colon.test(stream.peek()) )) {\n          returnType = ATOM;\n        } else if (ch == \".\") {\n          returnType = PERIOD;\n        } else if (isNumber(ch,stream)){\n          returnType = NUMBER;\n        } else {\n          if (stream.current().match(tests.symbol)) {\n            while (col < 71) {\n              if (stream.eat(tests.symbol) === undefined) {\n                break;\n              } else {\n                col++;\n              }\n            }\n          }\n          if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = KEYWORD;\n          } else if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = BUILTIN;\n          } else if (atoms && atoms.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = ATOM;\n          } else returnType = null;\n        }\n      }\n      return returnType;\n    },\n    indent: function (state) {\n      if (state.indentStack == null) return state.indentation;\n      return state.indentStack.indent;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-cobol\", \"cobol\");\n\n});\n"]}