{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/soy/soy.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","indentingTags","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","attributes","text","uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","indent","localMode","token","localState","startState","kind","kindTag","soyState","copyState","tag","concat","pop","skipToEnd","next","current","indexOf","push","sol","test","textAfter","top","Pass","innerMode","mode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","fold","registerHelper","defineMIME"],"mappings":"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","file":"soy.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var indentingTags = [\"template\", \"literal\", \"msg\", \"fallbackmsg\", \"let\", \"if\", \"elseif\",\n                       \"else\", \"switch\", \"case\", \"default\", \"foreach\", \"ifempty\", \"for\",\n                       \"call\", \"param\", \"deltemplate\", \"delcall\", \"log\"];\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        return state.localMode.token(stream, state.localState);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    return {\n      startState: function() {\n        return {\n          kind: [],\n          kindTag: [],\n          soyState: [],\n          indent: 0,\n          localMode: modes.html,\n          localState: CodeMirror.startState(modes.html)\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          kind: state.kind.concat([]), // Values of kind=\"\" attributes.\n          kindTag: state.kindTag.concat([]), // Opened tags with kind=\"\" attributes.\n          soyState: state.soyState.concat([]),\n          indent: state.indent, // Indentation of the following line.\n          localMode: state.localMode,\n          localState: CodeMirror.copyState(state.localMode, state.localState)\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            return \"comment\";\n\n          case \"variable\":\n            if (stream.match(/^}/)) {\n              state.indent -= 2 * config.indentUnit;\n              state.soyState.pop();\n              return \"variable-2\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            if (stream.match(/^\\/?}/)) {\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") state.indent = 0;\n              else state.indent -= (stream.current() == \"/}\" || indentingTags.indexOf(state.tag) == -1 ? 2 : 1) * config.indentUnit;\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^(\\w+)(?==)/)) {\n              if (stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.kind.push(kind);\n                state.kindTag.push(state.tag);\n                state.localMode = modes[kind] || modes.html;\n                state.localState = CodeMirror.startState(state.localMode);\n              }\n              return \"attribute\";\n            } else if (stream.match(/^\"/)) {\n              state.soyState.push(\"string\");\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.indent -= config.indentUnit;\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n\n          case \"string\":\n            if (stream.match(/^.*?\"/)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            return \"string\";\n        }\n\n        if (stream.match(/^\\/\\*/)) {\n          state.soyState.push(\"comment\");\n          return \"comment\";\n        } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n          return \"comment\";\n        } else if (stream.match(/^\\{\\$\\w*/)) {\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"variable\");\n          return \"variable-2\";\n        } else if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          return \"keyword\";\n        } else if (match = stream.match(/^\\{([\\/@\\\\]?\\w*)/)) {\n          if (match[1] != \"/switch\")\n            state.indent += (/^(\\/|(else|elseif|case|default)$)/.test(match[1]) && state.tag != \"switch\" ? 1 : 2) * config.indentUnit;\n          state.tag = match[1];\n          if (state.tag == \"/\" + last(state.kindTag)) {\n            // We found the tag that opened the current kind=\"\".\n            state.kind.pop();\n            state.kindTag.pop();\n            state.localMode = modes[last(state.kind)] || modes.html;\n            state.localState = CodeMirror.startState(state.localMode);\n          }\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        if (indent && state.localMode.indent)\n          indent += state.localMode.indent(state.localState, textAfter);\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return {state: state.localState, mode: state.localMode};\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", indentingTags.concat(\n      [\"delpackage\", \"namespace\", \"alias\", \"print\", \"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"]}