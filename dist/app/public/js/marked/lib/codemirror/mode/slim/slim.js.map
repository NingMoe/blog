{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/slim/slim.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","RegExp","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","pos","tokenize","style","restore","stream","state","maybeBackup","pat","offset","cur","current","idx","search","backUp","length","continueLine","column","stack","parent","indented","line","finishContinue","lineContinuable","match","eol","commaContinuable","rubyInQuote","endQuote","ch","peek","rubyState","next","startRubySplat","runSplat","context","prev","eatSpace","startState","token","htmlLine","htmlState","startHtmlLine","lastTokenize","startHtmlMode","comment","skipToEnd","commentMode","attributeWrapper","eat","attributeWrapperAssign","attributeWrapperValue","readQuoted","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","mode","query","spec","mimeModes","factory","hasOwnProperty","startSubMode","doctypeLine","_state","startLine","m","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","sol","indentation","blankLine","innerMode","defineMIME"],"mappings":"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","file":"slim.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = rubyMode.startState();\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = subMode.startState && subMode.startState();\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = htmlMode.startState();\n        var rubyState = rubyMode.startState();\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"]}