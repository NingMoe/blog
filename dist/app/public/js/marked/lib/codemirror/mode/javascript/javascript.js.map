{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/javascript/javascript.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","type","style","A","B","C","operator","atom","jsKeywords","tsKeywords","attr","isOperatorChar","isJsonldKeyword","readRegexp","stream","escaped","next","inSet","content","ret","tp","cont","tokenBase","state","ch","tokenize","tokenString","match","test","eat","eatWhile","tokenComment","skipToEnd","lastType","current","tokenQuasi","word","known","propertyIsEnumerable","quote","peek","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","string","indexOf","start","depth","sawSomething","pos","charAt","bracket","atomicTypes","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","name","cx","context","vars","parseJS","cc","marked","lexical","hasOwnProperty","combinator","length","pop","expression","statement","lex","pass","i","arguments","push","apply","register","inList","list","globalVars","defaultVars","pushcontext","popcontext","pushlex","result","indent","outer","poplex","expect","wanted","exp","value","vardef","block","maybeelse","functiondef","forspec","maybelabel","funarg","afterModule","className","afterExport","afterImport","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","pattern","maybeop","maybeoperatorNoComma","maybeoperatorComma","maybeexpressionNoComma","maybeexpression","comprehension","arrayLiteral","contCommasep","objprop","quasi","me","expr","property","slice","continueQuasi","getterSetter","afterprop","what","end","proceed","maybetype","typedef","maybeAssign","vardefCont","proppattern","_type","forspec1","forspec2","formaybeinof","forspec3","classNameAfter","classBody","classGetterSetter","maybeFrom","importSpec","maybeArrayComprehension","isContinuedStatement","textAfter","startState","basecolumn","token","sol","indentation","eatSpace","Pass","firstChar","c","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","lineComment","fold","helperType","registerHelper","defineMIME"],"mappings":"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","file":"javascript.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// TODO actually recognize syntax of TypeScript constructs\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    var jsKeywords = {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"delete\": C, \"throw\": C, \"debugger\": C,\n      \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"module\": kw(\"module\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C\n    };\n\n    // Extend the 'normal' keywords with the TypeScript language extensions\n    if (isTS) {\n      var type = {type: \"variable\", style: \"variable-3\"};\n      var tsKeywords = {\n        // object-like things\n        \"interface\": kw(\"interface\"),\n        \"extends\": kw(\"extends\"),\n        \"constructor\": kw(\"constructor\"),\n\n        // scope modifiers\n        \"public\": kw(\"public\"),\n        \"private\": kw(\"private\"),\n        \"protected\": kw(\"protected\"),\n        \"static\": kw(\"static\"),\n\n        // types\n        \"string\": type, \"number\": type, \"bool\": type, \"any\": type\n      };\n\n      for (var attr in tsKeywords) {\n        jsKeywords[attr] = tsKeywords[attr];\n      }\n    }\n\n    return jsKeywords;\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^\\d*(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (state.lastType == \"operator\" || state.lastType == \"keyword c\" ||\n               state.lastType == \"sof\" || /^[\\[{}\\(,;:]$/.test(state.lastType)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyu])(?![gimyu]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eatWhile(isOperatorChar);\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"error\", \"error\");\n    } else if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n      return (known && state.lastType != \".\") ? ret(known.type, known.style, word) :\n                     ret(\"variable\", \"variable\", word);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) break;\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/]/.test(ch)) {\n        return;\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function register(varname) {\n    function inList(list) {\n      for (var v = list; v; v = v.next)\n        if (v.name == varname) return true;\n      return false;\n    }\n    var state = cx.state;\n    if (state.context) {\n      cx.marked = \"def\";\n      if (inList(state.localVars)) return;\n      state.localVars = {name: varname, next: state.localVars};\n    } else {\n      if (inList(state.globalVars)) return;\n      if (parserConfig.globalVars)\n        state.globalVars = {name: varname, next: state.globalVars};\n    }\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: {name: \"arguments\"}};\n  function pushcontext() {\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n    cx.state.localVars = defaultVars;\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value.length), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), expression, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n    if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n                                      block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                     statement, poplex, popcontext);\n    if (type == \"module\") return cont(pushlex(\"form\"), pushcontext, afterModule, popcontext, poplex);\n    if (type == \"class\") return cont(pushlex(\"form\"), className, poplex);\n    if (type == \"export\") return cont(pushlex(\"form\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"form\"), afterImport, poplex);\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type) {\n    return expressionInner(type, false);\n  }\n  function expressionNoComma(type) {\n    return expressionInner(type, true);\n  }\n  function expressionInner(type, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(pattern, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"keyword c\") return cont(noComma ? maybeexpressionNoComma : maybeexpression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, comprehension, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") { return pass(quasi, maybeop); }\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n  function maybeexpressionNoComma(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expressionNoComma);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(expression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value)) return cont(me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (type == \"[\") {\n      return cont(expression, expect(\"]\"), afterprop);\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end) {\n    function proceed(type) {\n      if (type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(what, proceed);\n      }\n      if (type == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type) {\n      if (type == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type) {\n    if (isTS && type == \":\") return cont(typedef);\n  }\n  function typedef(type) {\n    if (type == \"variable\"){cx.marked = \"variable-3\"; return cont();}\n  }\n  function vardef() {\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"[\") return contCommasep(pattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type) {\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, expect(\")\"), poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, expect(\";\"), forspec2);\n    if (type == \";\") return cont(forspec2);\n    if (type == \"variable\") return cont(formaybeinof);\n    return pass(expression, expect(\";\"), forspec2);\n  }\n  function formaybeinof(_type, value) {\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return cont(maybeoperatorComma, forspec2);\n  }\n  function forspec2(type, value) {\n    if (type == \";\") return cont(forspec3);\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return pass(expression, expect(\";\"), forspec3);\n  }\n  function forspec3(type) {\n    if (type != \")\") cont(expression);\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, statement, popcontext);\n  }\n  function funarg(type) {\n    if (type == \"spread\") return cont(funarg);\n    return pass(pattern, maybetype);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"extends\") return cont(expression, classNameAfter);\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(classGetterSetter, functiondef, classBody);\n      return cont(functiondef, classBody);\n    }\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \";\") return cont(classBody);\n    if (type == \"}\") return cont();\n  }\n  function classGetterSetter(type) {\n    if (type != \"variable\") return pass();\n    cx.marked = \"property\";\n    return cont();\n  }\n  function afterModule(type, value) {\n    if (type == \"string\") return cont(statement);\n    if (type == \"variable\") { register(value); return cont(maybeFrom); }\n  }\n  function afterExport(_type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    return pass(statement);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    return pass(importSpec, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    return cont();\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(expressionNoComma, maybeArrayComprehension);\n  }\n  function maybeArrayComprehension(type) {\n    if (type == \"for\") return pass(comprehension, expect(\"]\"));\n    if (type == \",\") return cont(commasep(maybeexpressionNoComma, \"]\"));\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function comprehension(type) {\n    if (type == \"for\") return cont(forspec, comprehension);\n    if (type == \"if\") return cont(expression, comprehension);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});\n"]}