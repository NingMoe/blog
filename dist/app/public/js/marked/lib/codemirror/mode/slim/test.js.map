{"version":3,"sources":["../../../../../../../../../app/public/js/marked/lib/codemirror/mode/slim/test.js"],"names":["mode","CodeMirror","getMode","tabSize","indentUnit","MT","name","test","Array","prototype","slice","call","arguments"],"mappings":";;AAAA;AACA;;AAEA;;AAEA,CAAC,YAAW;AACV,OAAIA,OAAOC,WAAWC,OAAX,CAAmB,EAACC,SAAS,CAAV,EAAaC,YAAY,CAAzB,EAAnB,EAAgD,MAAhD,CAAX;AACA,YAASC,EAAT,CAAYC,IAAZ,EAAkB;AAAEC,WAAKP,IAAL,CAAUM,IAAV,EAAgBN,IAAhB,EAAsBQ,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAtB;AAAkE;;AAEtF;AACAP,MAAG,aAAH,EACG,oBADH;;AAGAA,MAAG,mBAAH,EACG,wBADH;;AAGAA,MAAG,YAAH,EACG,iCADH;;AAGAA,MAAG,oBAAH,EACG,yCADH;;AAGAA,MAAG,eAAH,EACG,wCADH;;AAGAA,MAAG,4BAAH,EACG,qEADH;;AAGAA,MAAG,SAAH,EACG,uBADH;;AAGAA,MAAG,SAAH,EACG,yBADH;;AAGAA,MAAG,YAAH,EACG,mCADH;;AAGAA,MAAG,YAAH,EACG,kFADH;;AAGAA,MAAG,qBAAH,EACG,6CADH,EAEG,yCAFH;;AAIAA,MAAG,UAAH,EACG,oFADH;;AAGAA,MAAG,WAAH,EACG,wCADH;;AAGAA,MAAG,mBAAH,EACG,2EADH;;AAGAA,MAAG,iBAAH,EACI,SADJ,EAEI,yDAFJ;;AAIAA,MAAG,oBAAH,EACI,SADJ,EAEI,YAFJ,EAGI,WAHJ;;AAKAA,MAAG,eAAH,EACI,SADJ,EAEI,kCAFJ,EAGI,0CAHJ,EAII,eAJJ,EAKI,6FALJ,EAMI,mDANJ,EAOI,4IAPJ,EAQI,6CARJ,EASI,+CATJ,EAUI,gDAVJ;;AAYAA,MAAG,kBAAH,EACI,aADJ,EAEI,uBAFJ,EAGI,qBAHJ;;AAKAA,MAAG,kBAAH,EACE,8BADF,EAEE,mDAFF,EAGE,+BAHF,EAIE,yCAJF,EAKE,gCALF;;AAOAA,MAAG,eAAH,EACG,0DADH,EAEG,uBAFH;;AAIAA,MAAG,8BAAH,EACG,uGADH;;AAGAA,MAAG,8BAAH,EACG,0GADH;AAED,CA1FD","file":"test.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function() {\n  var mode = CodeMirror.getMode({tabSize: 4, indentUnit: 2}, \"slim\");\n  function MT(name) { test.mode(name, mode, Array.prototype.slice.call(arguments, 1)); }\n\n  // Requires at least one media query\n  MT(\"elementName\",\n     \"[tag h1] Hey There\");\n\n  MT(\"oneElementPerLine\",\n     \"[tag h1] Hey There .h2\");\n\n  MT(\"idShortcut\",\n     \"[attribute&def #test] Hey There\");\n\n  MT(\"tagWithIdShortcuts\",\n     \"[tag h1][attribute&def #test] Hey There\");\n\n  MT(\"classShortcut\",\n     \"[attribute&qualifier .hello] Hey There\");\n\n  MT(\"tagWithIdAndClassShortcuts\",\n     \"[tag h1][attribute&def #test][attribute&qualifier .hello] Hey There\");\n\n  MT(\"docType\",\n     \"[keyword doctype] xml\");\n\n  MT(\"comment\",\n     \"[comment / Hello WORLD]\");\n\n  MT(\"notComment\",\n     \"[tag h1] This is not a / comment \");\n\n  MT(\"attributes\",\n     \"[tag a]([attribute title]=[string \\\"test\\\"]) [attribute href]=[string \\\"link\\\"]}\");\n\n  MT(\"multiLineAttributes\",\n     \"[tag a]([attribute title]=[string \\\"test\\\"]\",\n     \"  ) [attribute href]=[string \\\"link\\\"]}\");\n\n  MT(\"htmlCode\",\n     \"[tag&bracket <][tag h1][tag&bracket >]Title[tag&bracket </][tag h1][tag&bracket >]\");\n\n  MT(\"rubyBlock\",\n     \"[operator&special =][variable-2 @item]\");\n\n  MT(\"selectorRubyBlock\",\n     \"[tag a][attribute&qualifier .test][operator&special =] [variable-2 @item]\");\n\n  MT(\"nestedRubyBlock\",\n      \"[tag a]\",\n      \"  [operator&special =][variable puts] [string \\\"test\\\"]\");\n\n  MT(\"multilinePlaintext\",\n      \"[tag p]\",\n      \"  | Hello,\",\n      \"    World\");\n\n  MT(\"multilineRuby\",\n      \"[tag p]\",\n      \"  [comment /# this is a comment]\",\n      \"     [comment and this is a comment too]\",\n      \"  | Date/Time\",\n      \"  [operator&special -] [variable now] [operator =] [tag DateTime][operator .][property now]\",\n      \"  [tag strong][operator&special =] [variable now]\",\n      \"  [operator&special -] [keyword if] [variable now] [operator >] [tag DateTime][operator .][property parse]([string \\\"December 31, 2006\\\"])\",\n      \"     [operator&special =][string \\\"Happy\\\"]\",\n      \"     [operator&special =][string \\\"Belated\\\"]\",\n      \"     [operator&special =][string \\\"Birthday\\\"]\");\n\n  MT(\"multilineComment\",\n      \"[comment /]\",\n      \"  [comment Multiline]\",\n      \"  [comment Comment]\");\n\n  MT(\"hamlAfterRubyTag\",\n    \"[attribute&qualifier .block]\",\n    \"  [tag strong][operator&special =] [variable now]\",\n    \"  [attribute&qualifier .test]\",\n    \"     [operator&special =][variable now]\",\n    \"  [attribute&qualifier .right]\");\n\n  MT(\"stretchedRuby\",\n     \"[operator&special =] [variable puts] [string \\\"Hello\\\"],\",\n     \"   [string \\\"World\\\"]\");\n\n  MT(\"interpolationInHashAttribute\",\n     \"[tag div]{[attribute id] = [string \\\"]#{[variable test]}[string _]#{[variable ting]}[string \\\"]} test\");\n\n  MT(\"interpolationInHTMLAttribute\",\n     \"[tag div]([attribute title]=[string \\\"]#{[variable test]}[string _]#{[variable ting]()}[string \\\"]) Test\");\n})();\n"]}