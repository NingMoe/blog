{"version":3,"sources":["../../../app/routers/api.js"],"names":["require","exec","fs","express","request","requestPromise","md5","sillyDateTime","multer","imageSize","Geetest","nodemailer","QRCode","salt","crt_token","tools","router","Router","Users","Docs","Articles","Discuss","Tags","Slide","Photos","Collections","OneByDay","Apps","MailGroup","MailUser","emailRegexp","phoneRegexp","uoloader","NowDate","Date","downloadBasecDir","output","use","req","res","next","code","msg","ok","data","get","geetest_id","geetest_key","register","err","console","error","send","find","isDel","then","docs","json","slides","uid","query","findOne","_id","usersInfo","keyWord","keyword","reg","RegExp","$or","name","$regex","users","cookies","session","offset","parseInt","num","where","user_id","populate","path","select","token","all","permissions","count","skip","limit","articles","forEach","item","add_date","format","doc_id","id","findById","article","watch","save","cookie","maxAge","expires","page","sort","catch","log","Promise","user","spread","u","a","start","start_users","push","status","post","body","password","form","validateCode","remember","test","email","phone","passwordConfirm","_scrf","findData","userInfo","t_salt","sex","nick","wechat","qq","avatar","signature","website","introduce","editors","follows","follow_users","email_verify","github_id","github","html_url","type","newUsers","userAdd","photos","describe","author","clearCookie","destroy","redirect","updateUserBasic","findByIdAndUpdate","runValidators","updateProfile","updateReward","rewardStatus","rewardDesc","contents","markDownText","markdownText","title","article_date","allArticles","dirname","existsSync","mkdirSync","writeFile","encoding","maxBuffer","stdout","stderr","tar_path","insert","doc_name","user_name","d","document","watch_users","fork","fork_users","issue","issue_contents","isRelease","article_id","discuss","single","ext","file","mimetype","split","filename","now_timer","buffer","dimensions","width","height","originalname","fullpath","size","message","url","success","icon","admins","verify","follow","subscribe","include","coll","colls","articleArr","c","bf","in_array","resolve","reject","doc","follow_id","uids","state","getTime","getTokenOptations","uri","qs","client_id","client_secret","redirect_uri","headers","getGithubUsersOptaions","access_token","user_data","avatar_url","add","e","isSignin","transporter","createTransport","host","port","secure","auth","pass","verify_code","verify_data","href","encodeURI","html_str","mailOptions","from","to","subject","text","html","sendMail","info","close","date","options","response","app","app_id","secret_key","desc","owner","effective","is_del","new","list","apps","mail_group","mail_users","mail_user","group","mark","mailUser","errorCorrectionLevel","version","modes","toDataURL","module","exports"],"mappings":"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","file":"api.js","sourcesContent":["'use strict';\n\nconst { exec } = require('child_process');\nconst fs = require('fs');\nconst express = require('express');\nconst request = require('request');\nconst requestPromise = require('request-promise');\nconst md5 = require('md5');\nconst sillyDateTime = require('silly-datetime');\nconst multer = require('multer');\nconst imageSize = require('image-size');\nconst Geetest = require('gt3-sdk');\nconst nodemailer = require('nodemailer');\nconst QRCode = require('qrcode');\nconst salt = require('../libs/salt');\nconst crt_token = require('../libs/ctr_token');\nconst tools = require('../libs/tools');\nconst router = express.Router();\nconst Users = require('../models/Users_model');\nconst Docs = require('../models/Document_model');\nconst Articles = require('../models/Articles_model');\nconst Discuss = require('../models/Discuss_model');\nconst Tags = require('../models/Tags_model');\nconst Slide = require('../models/Slide_model');\nconst Photos = require('../models/Photos_model');\nconst Collections = require('../models/Collections_model');\nconst OneByDay = require('../models/onebyday_model');\nconst Apps = require('../models/Apps');\nconst MailGroup = require('../models/mailGroup');\nconst MailUser = require('../models/mailUser');\nconst emailRegexp = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\nconst phoneRegexp = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\\\d{8}$/;\nconst uoloader = multer(); //{dest: 'uploads/'}设置dest表示上传文件的目录，如果不设置上传的文件永远在内存之中不会保存到磁盘上。在此处为了在内存中取出文件并重命名所以不设置文件上传路径\nconst NowDate = new Date();\nconst downloadBasecDir = '/Users/bluelife/www/node/blog/app/download/';\nlet output = {};\n\nrouter.use(function(req, res, next) {\n    output = {\n        code: 0,\n        msg: '',\n        ok: false,\n        data: null\n    };\n    next();\n});\n\nrouter.get('/gettest', (req, res, next) => {\n    new Geetest({\n        geetest_id: 'e46e906d776dbd41c4e72f72499ca39f',\n        geetest_key: '30b094aad22445378f7fdc01b83215bb'\n    }).register(null, (err, data) => {\n        if (err) {\n            console.error(err);\n            return;\n        }\n        res.send(data);\n        // console.log(data);\n\n        // if (!data.success) {\n        //     // 进入 fallback，如果一直进入此模式，请检查服务器到极验服务器是否可访问\n        //     // 可以通过修改 hosts 把极验服务器 api.geetest.com 指到不可访问的地址\n        //     // 为以防万一，你可以选择以下两种方式之一：\n        //     // 1. 继续使用极验提供的failback备用方案\n        //     req.session.fallback = true;\n        //     res.send(data);\n        //     // 2. 使用自己提供的备用方案\n        //     // todo\n        // } else {\n        //     // 正常模式\n        //     req.session.fallback = false;\n        //     res.send(data);\n        // }\n    });\n});\n\n/**\n * 获取所有标签\n */\nrouter.get('/docs', (req, res, next) => {\n    // console.log(Tags);\n    // res.send();\n    Docs.find({ isDel: 0 }).then(docs => {\n        if (docs) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = docs;\n            res.json(output);\n            return;\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n            return;\n        }\n    });\n});\n\n/**\n * 获取幻灯片\n */\nrouter.get('/slides', (req, res, next) => {\n    Slide.find().then(slides => {\n        if (slides) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = slides;\n            res.json(output);\n            return;\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n            return;\n        }\n    });\n})\n\nrouter.get('/getUsers', (req, res, next) => {\n    let uid = req.query.uid;\n    Users.findOne({ _id: uid, isDel: 0 }).then(usersInfo => {\n        if (usersInfo) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = usersInfo;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/allUsers', (req, res, next) => {\n    let keyWord = req.query.keyword;\n    const reg = new RegExp(keyWord, 'si') //不区分大小写\n    Users.find({\n        // name:{$regex : /keyWord/,$options: 'si'}\n        $or: [ //多条件，数组\n            { name: { $regex: reg } }\n        ]\n    }).then(users => {\n        if (users) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = users;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n})\n\nrouter.get('/getDocLists', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : (req.cookies.uid || req.session.uid);\n    let offset = req.query.offset ? parseInt(req.query.offset) : 1;\n    let num = req.query.num ? parseInt(req.query.num) : 20;\n    let where = uid ? { user_id: uid, isDel: 0 } : { isDel: 0 };\n    Docs.find(where).populate({ path: 'author', select: 'name nick avatar' }).exec().then(docs => {\n        if (docs) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = docs;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/allArticles', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : (req.cookies.token && req.cookies.uid);\n    let all = false;\n    let offset = req.query.offset ? parseInt(req.query.offset) : 0;\n    let num = req.query.num ? parseInt(req.query.num) : 10;\n    if (!uid) {\n        all = true;\n    }\n    let where = all ? { isDel: 0, permissions:1 } : { user_id: uid, isDel: 0 };\n    Articles.count((err, count)=>{\n        Articles.find(where).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num)\n            .populate([{\n                path: 'document',\n                select: 'name'\n            }, {\n                path: 'author',\n                select: 'name nick avatar'\n            }])\n            .exec()\n            .then(articles => {\n                if (articles) {\n                    articles.forEach(item => {\n                        item.add_date = sillyDateTime.format(item.add_date, 'YYYY-MM-DD HH:mm:ss');\n                    });\n                    output.code = 1;\n                    output.msg = 'success';\n                    output.ok = true;\n                    output.data = {\n                        articles: articles,\n                        count: count,\n                        offset: offset,\n                        num: num\n                    };\n                    res.json(output);\n                } else {\n                    output.code = 0;\n                    output.msg = 'error';\n                    output.ok = false;\n                    output.data = {};\n                    res.json(output);\n                }\n            });\n    });\n})\n\nrouter.get('/getArticleLists', (req, res, next) => {\n    let doc_id = req.query.doc_id;\n    let offset = req.query.offset ? req.query.offset: 0;\n    let num = req.query.num ? req.query.num : 10;\n    Articles.find({\n        doc_id: doc_id,\n        isDel: 0,\n        permissions:1\n    }).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num).populate([{\n        path: 'author',\n        select: 'name'\n    }]).exec().then(articles => {\n        if (articles) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = articles;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/getArticle', (req, res, next) => {\n    let id = req.query.id;\n    Articles.findById(id).populate([{\n        path: 'document',\n        select: 'name'\n    },\n        {\n            path: 'author',\n            select: 'name nick avatar rewardStatus rewardDesc'\n        },\n        {\n            path: 'issue_contents',\n            select: 'contents add_date permissions',\n            populate: {\n                path: 'author',\n                select: 'name nick avatar'\n            }\n        }\n    ]).exec().then(article => {\n        if (article) {\n            article.add_date = sillyDateTime.format(article.add_date, 'YYYY-MM-DD HH:mm:ss');\n            if (!req.cookies[id]) {\n                //增加阅读数\n                article.watch++;\n                article.save();\n                res.cookie(id, 'on', { maxAge: 1000 * 3600 * 10, expires: 1000 * 3600 * 10 });\n            }\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = {\n                'article': article\n            };\n            res.json(output);\n\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/article/get', (req, res, next)=>{\n    let id = req.query.id ? req.query.id : '';\n    let page = req.query.page ? req.query.page : 'next';\n    let where = {};\n    let sort = {};\n    if(page == 'next'){\n        where = {'_id' :{ \"$gt\" :id} };\n        sort = {_id:1};\n    }else{\n        where = {'_id' :{ \"$lt\" :id} };\n        sort = {_id:-1};\n    }\n    Articles.findOne(where).limit(1).sort(sort).populate([{\n        path: 'document',\n        select: 'name'\n    },\n        {\n            path: 'author',\n            select: 'name nick avatar rewardStatus rewardDesc'\n        },\n        {\n            path: 'issue_contents',\n            select: 'contents add_date permissions',\n            populate: {\n                path: 'author',\n                select: 'name nick avatar'\n            }\n        }\n    ]).exec().then(article=>{\n        if (article) {\n            article.add_date = sillyDateTime.format(article.add_date, 'YYYY-MM-DD HH:mm:ss');\n            if (!req.cookies[id]) {\n                //增加阅读数\n                article.watch++;\n                article.save();\n                res.cookie(id, 'on', { maxAge: 1000 * 3600 * 10, expires: 1000 * 3600 * 10 });\n            }\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = {\n                'article': article\n            };\n            res.json(output);\n\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/article/start', (req, res, next)=>{\n    if(req.session.uid && req.cookies.uid){\n        let user_id = req.session.uid || req.cookies.uid;\n        let id = req.query.id;\n        Users.findById(user_id).then(user=>{\n            let article = Articles.findById(id);\n            return Promise.all([user,article]);\n        }).spread((u,a)=>{\n            a.start++;\n            a.start_users.push(u);\n            a.save().then(status=>{\n                if(status) {\n                    output.code = 1;\n                    output.msg = 'success';\n                    output.ok = true;\n                    output.data = {\n                        start:a.start\n                    };\n                    res.json(output);\n                }\n            }).catch(err=>{\n                console.log(err);\n            });\n        }).catch(err=>{\n            console.log(err);\n        });\n    }else{\n        output.code = 3;\n        output.msg = 'success';\n        output.ok = true;\n        output.data = {};\n        res.json(output);\n    }\n})\n\nrouter.post('/signin', (req, res, next) => {\n    // let redirect = req.body.redirect ? req.body.redirect : '';\n    let name = req.body.name;\n    let password = req.body.password;\n    let form = req.body.form;\n    let validateCode = form == 'login' ? req.body.validateCode : '';\n    let remember = req.body.remember;\n    if (name == '') {\n        output.code = 0;\n        output.msg = '用户名不能为空';\n        res.json(output);\n        return;\n    }\n    if (password == '') {\n        output.code = 0;\n        output.msg = \"密码不能为空\";\n        res.json(output);\n        return;\n    }\n    if (form == 'login') {\n        if (validateCode == '') {\n            output.code = 0;\n            output.msg = \"请先通过验证\";\n            res.json(output);\n            return;\n        }\n    }\n    let user = {};\n    if (emailRegexp.test(name)) {\n        user.email = name;\n    } else if (phoneRegexp.test(name)) {\n        user.phone = name;\n    } else {\n        user.name = name;\n    }\n    Users.findOne(user).then(function(user) {\n        if (user) {\n            if (user.password == md5(password + user.salt)) {\n                res.cookie('uid', user._id, { maxAge: 1800000 });\n                req.session.uid = user._id;\n                if (remember) {\n                    res.cookie('name', name, { maxAge: 3600000 * 24 * 7 });\n                    res.cookie('password', password, { maxAge: 3600000 * 24 * 7 });\n                }\n                output.code = 1;\n                output.msg = \"success\";\n                output.ok = true;\n                output.data = user;\n                res.json(output);\n                return;\n            } else {\n                output.code = 0;\n                output.msg = \"登录失败，密码不正确\";\n                output.ok = false;\n                output.data = null;\n                res.json(output);\n            }\n        } else {\n            output.code = 2;\n            output.msg = \"您还没有帐号，请注册帐号\";\n            output.data = '';\n            res.json(output);\n        }\n    });\n});\n\nrouter.post('/signup', (req, res, next) => {\n    let name = req.body.name;\n    let phone = req.body.phone;\n    let password = req.body.password;\n    let passwordConfirm = req.body.passwordConfirm;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (name == '') {\n        output.code = 0;\n        output.msg = '用户名不能为空';\n        res.json(output);\n        return;\n    }\n    if (password == '') {\n        output.code = 0;\n        output.msg = \"密码不能为空\";\n        res.json(output);\n        return;\n    }\n\n    if (password != passwordConfirm) {\n        output.code = 0;\n        output.msg = \"两次输入密码不同\";\n        res.json(output);\n        return;\n    }\n\n    let findData = {};\n    if (emailRegexp.test(name)) {\n        findData.email = name;\n    } else if (phoneRegexp.test(name)) {\n        findData.phone = name;\n    } else {\n        findData.name = name;\n    }\n    Users.findOne(findData).then(userInfo => {\n        if (userInfo) {\n            output.code = 0;\n            output.ok = false;\n            output.msg = '帐号已存在，请注册新帐号';\n            output.data = null;\n            res.json(output);\n        } else {\n            let t_salt = salt();\n            let user = {\n                name: '',\n                phone: '',\n                email: '',\n                password: '',\n                salt: '',\n                sex: 3,\n                nick: '',\n                wechat: '',\n                qq: '',\n                avatar: '',\n                signature: '',\n                website: '',\n                introduce: '',\n                editors: 2,\n                follows: 0,\n                follow_users: [],\n                email_verify: false,\n                github_id: '',\n                github: {\n                    html_url: ''\n                },\n                add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                isDel: 0,\n            };\n            if (emailRegexp.test(name)) {\n                user.email = name;\n                user.type = 3;\n            } else if (phoneRegexp.test(name)) {\n                user.phone = name;\n                user.type = 2;\n            } else {\n                user.name = name;\n                user.type = 1;\n            }\n            user.name = name;\n            user.salt = t_salt;\n            user.password = md5(password + t_salt);\n            let newUsers = new Users(user);\n            return newUsers.save();\n        }\n    }).then(userAdd => {\n        new Docs({\n            user_id: userAdd._id,\n            name: '随笔',\n            photos: '',\n            describe: '',\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            author: userAdd,\n            article: [],\n            permissions:1,\n            isDel: 0,\n        }).save();\n        if (userAdd) {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '注册成功';\n            output.data = { id: userAdd._id };\n            res.json(output);\n        } else {\n            output.code = 2;\n            output.ok = true;\n            output.msg = '注册失败';\n            output.data = null;\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/signout', (req, res, next) => {\n    res.clearCookie('uid'); // 清除cookie中的uid\n    req.session.destroy(() => { // 销毁session中的uid\n        res.redirect(302, '/login');\n    });\n    // console.log(store);\n    // req.session.store.clear(()=>{\n    //     res.redirect(302,'/login');\n    // })\n});\n\nrouter.post('/updateUserBasic', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateUserBasic = {\n        nick: req.body.nick,\n        phone: req.body.phone,\n        email: req.body.email,\n        editors: req.body.editors,\n        avatar: req.body.avatar,\n        qq: req.body.qq,\n        wechat: req.body.wechat,\n        github: req.body.github\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateUserBasic, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户基础信息修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/changeProfile', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateProfile = {\n        sex: req.body.sex,\n        introduce: req.body.introduce,\n        website: req.body.website\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateProfile, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户个人资料修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/changeReward', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateReward = {\n        rewardStatus: req.body.rewardStatus,\n        rewardDesc: req.body.rewardDesc\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateReward, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '赞赏修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/saveArticle', (req, res, next) => {\n    let id = req.body.id;\n    let contents = req.body.contents;\n    let markDownText = req.body.markdownText ? req.body.markdownText : null;\n    let title = req.body.title;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    let article_date = {\n        contents: contents,\n        title: title\n    };\n    if (markDownText) {\n        article_date.markDownText = markDownText;\n    }\n\n    Articles.findByIdAndUpdate(id, { title: title, contents: contents, markDownText: markDownText }, { runValidators: true }).then(status => {\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章保存成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        console.log(err);\n    });\n});\n\nrouter.get('/article/set_permissions',(req, res, next)=>{\n    let id = req.query.id;\n    let type = req.query.type;\n    Articles.findByIdAndUpdate(id, {permissions: type}, {runValidators: true}).then(status=>{\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章权限设置成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章权限设置失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/downloadAllArticles', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : req.cookies.uid;\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '未登陆';\n        output.data = {};\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    let allArticles = Articles.find({ uid: uid }).then(articles => {\n        return articles;\n    });\n    let dirname = downloadBasecDir + '/' + uid;\n    fs.existsSync(dirname) || fs.mkdirSync(dirname); // 下载目录不存在创建目录\n    allArticles.then(all => {\n        all.forEach(article => {\n            fs.writeFile('/Users/bluelife/www/node/blog/app/download/' + uid + '/' + article.title + '.md', article.markDownText, 'utf8', err => {\n                if (err) throw err;\n            });\n        });\n        exec('tar -czf ' + dirname + '.tar.gz' + ' ' + dirname, { encoding: 'utf8', maxBuffer: parseInt(200 * 1024) }, (error, stdout, stderr) => {\n            if (error) throw error;\n            output.code = 1;\n            output.ok = true;\n            output.msg = '所有文章打包下载完成';\n            output.data = { tar_path: 'http://blog.mcloudhub.com/download/' + uid + '.tar.gz' };\n            res.json(output);\n        });\n    });\n})\n\nrouter.post('/newDocument', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let name = req.body.name;\n    Users.findById(uid).then(user => {\n        new Docs({\n            user_id: user._id,\n            name: name,\n            photos: '',\n            describe: '',\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n            author: user,\n            article: [],\n            permissions:1,\n            isDel: 0,\n        }).save().then(insert => {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '文集创建成功';\n            output.data = { id: insert._id };\n            res.json(output);\n        });\n    });\n});\n\nrouter.post('/updateDocumentName', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let id = req.body.id;\n    let name = req.body.name;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findByIdAndUpdate(id, { name: name }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文集名称修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文集名称修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/newArticle', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let doc_id = req.body.doc_id;\n    let doc_name = req.body.doc_name;\n    let user_name = req.body.user_name;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findById(doc_id).then(docs => {\n        let users = Users.findById(uid);\n        return Promise.all([users, docs]);\n    }).spread((u, d) => {\n        new Articles({\n            user_id: u._id,\n            doc_id: d._id,\n            author: u, // 文章所属用户\n            document: d, // 文章所属文集\n            title: sillyDateTime.format(new Date(), 'YYYY-MMM-DD'), // 文章标题\n            describe: '', // 文章描述\n            photos: '', // 文章图片\n            contents: '', // 文章内容\n            markDownText: '',\n            watch: 0,\n            watch_users: [],\n            start: 0,\n            start_users: [],\n            fork: 0,\n            fork_users: [],\n            issue: 0,\n            issue_contents: [],\n            follows: 0,\n            follow_users: [],\n            permissions:1,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            isRelease: 0,\n            isDel: 0,\n        }).save().then(insert => {\n            d.article_id.push({ id: insert._id });\n            d.article.push(insert);\n            d.save();\n            u.article.push(insert);\n            u.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '文章创建成功';\n            output.data = insert;\n            res.json(output);\n        }).catch(err => {\n            console.log(err);\n            output.code = 0;\n            output.ok = false;\n            output.msg = '文章创建失败';\n            output.data = {};\n            res.json(output);\n        });\n    })\n});\n\nrouter.get('/deleteDoc', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文集删除成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文集删除失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/releaseArticle', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { isRelease: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章已发布';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章已失败';\n        output.data = {};\n        res.json(output);\n    })\n});\n\nrouter.get('/deleteArticle', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章删除成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章删除失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/changeAticleTitle', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let id = req.body.id;\n    let title = req.body.title;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { title: title }, { runValidators: true }).then(status => {\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/postDiscuss', (req, res, next) => {\n    let id = req.body.id;\n    let contents = req.body.contents;\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let permissions = req.body.permissions ? parseInt(req.body.permissions) : 1;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Articles.findById(id).then(article => {\n        let users = Users.findById(uid);\n        return Promise.all([users, article]);\n    }).spread((u, a) => {\n        new Discuss({\n            uid: u._id,\n            article_id: a._id,\n            author: u,\n            article: a,\n            contents: contents,\n            permissions: permissions,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            isDel: 0\n        }).save().then(status => {\n            a.issue++;\n            a.issue_contents.push(status);\n            a.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '评论成功';\n            output.data = {};\n            res.json(output);\n        });\n    });\n});\n\nrouter.get('/getDiscuss', (req, res, next) => {\n    let id = req.query.id;\n    Discuss.find({ article_id: id }).then(discuss => {\n        if (!discuss) throw console.log(discuss);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = discuss;\n        res.json(output);\n    });\n});\n\nrouter.post('/uploader', uoloader.single('editormd-image-file'), (req, res, next) => {\n    let uid = req.session.uid && req.cookies.uid;\n    let ext = req.file.mimetype.split('/')[1];\n    let filename = sillyDateTime.format(new Date(), 'YYYYMMMDDHHmmss') + '_' + crt_token() + '.' + ext;\n    let now_timer = sillyDateTime.format(new Date(), 'YYYYMMMDD');\n    let dirname = '/Users/bluelife/www/node/blog/app/public/images/uploads/' + now_timer + '/';\n    fs.existsSync(dirname) || fs.mkdirSync(dirname); // 目录不存在创建目录\n    fs.writeFile(dirname + filename, req.file.buffer, err => {\n        if (!err) {\n            // util\n            // 计算上传的图片宽度和高度\n            let dimensions = imageSize(dirname + filename);    // 使用绝对路径，也可以使用url，使用url要转换成buffer\n            let width = dimensions.width;\n            let height = dimensions.height;\n            Users.findById(uid).then(user => {\n                new Photos({\n                    user_id: user._id,\n                    author: user,\n                    originalname: req.file.originalname,\n                    filename: filename,\n                    path: dirname,\n                    fullpath: dirname + filename,\n                    encoding: req.file.encoding,\n                    mimetype: req.file.mimetype,\n                    size: req.file.size,\n                    width: width,\n                    height: height,\n                    add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                    isDel: 0\n                }).save().then(insert => {\n                    if (!insert) throw console.log(insert);\n                    res.json({\n                        message: '图片上传成功',\n                        url: 'https://blog.mcloudhub.com/public/images/uploads/' + now_timer + '/' + filename,\n                        success: 1\n                    });\n                });\n            });\n        }\n    });\n});\n\nrouter.post('/collection/new', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let icon = req.body.icon;\n    let name = req.body.name;\n    let describe = req.body.describe;\n    let push = req.body.push;\n    let admins = req.body.admins;\n    let verify = req.body.verify;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Users.findById(uid).then(user => {\n        new Collections({\n            user_id: user._id,\n            author: user,\n            article: [],\n            name: name, // 集合名称\n            type: 1, // 集合类型\n            icon: icon, // 集合图标\n            describe: describe, // 集合描述\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'), // 集合添加时间,\n            admins: admins, // 其他管理员\n            push: push, // 是否允许投稿\n            follow: 0, //关注数\n            subscribe: [],\n            include: 0, //收录文章数\n            verify: verify, // 是否需要审核\n            isDel: 0\n        }).save().then(coll => {\n            if (!coll) {\n                output.code = 0;\n                output.ok = false;\n                output.msg = '文集添加失败';\n                output.data = {};\n                res.json(output);\n            } else {\n                output.code = 1;\n                output.ok = true;\n                output.msg = '文集添加成功';\n                output.data = coll;\n                res.json(output);\n            }\n\n        });\n    });\n});\n\nrouter.post('/collection/update', (req, res, next) => {\n    let id = req.body.id;\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let icon = req.body.icon;\n    let name = req.body.name;\n    let describe = req.body.describe;\n    let push = req.body.push;\n    let admins = req.body.admins;\n    let verify = req.body.verify;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Collections.findByIdAndUpdate(id, {\n        icon: icon,\n        name: name,\n        describe: describe,\n        push: push,\n        verify: verify,\n        admins: admins\n    }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '专题已修改';\n        output.data = status;\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '专题修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/get_collections', (req, res, next) => {\n    let offset = req.query.offset ? parseInt(req.query.offset) : 0;\n    let num = req.query.num ? parseInt(req.query.num) : 10;\n    let where = { isDel: 0 };\n    Collections.find(where).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num).populate([{\n            path: 'author',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'admins',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'subscribe',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                path: 'author',\n                select: 'name nick avatar'\n            }, {\n                path: 'document',\n                select: 'name'\n            }]\n        }\n    ]).exec().then(colls => {\n        if (!colls) throw console.log(colls);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = colls;\n        res.json(output);\n    });\n});\n\nrouter.get('/getCollectionById', (req, res, next) => {\n    let id = req.query.id;\n    let articleArr = [];\n    Collections.findOne({ _id: id, isDel: 0 }).populate([{\n            path: 'author',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'admins',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'subscribe',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                    path: 'author',\n                    select: 'name nick avatar'\n                },\n                {\n                    path: 'document',\n                    select: 'name'\n                }\n            ]\n        }\n    ]).exec().then(coll => {\n        if (!coll) throw console.log(coll);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = coll;\n        res.json(output);\n    }).catch(err => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = [];\n        res.json(output);\n    });\n});\n\nrouter.get('/collectionFollow', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n\n    Collections.findById(id).then(coll => {\n        let user = Users.findById(uid);\n        return Promise.all([user, coll]);\n    }).spread((u, c) => {\n        c.follow++;\n        c.subscribe = u;\n        return c.save();\n    }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '关注成功';\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '关注失败';\n        res.json(output);\n    });\n});\n\nrouter.get('/articlePush', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    let article_id = req.query.article_id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Collections.findById(id).then(coll => {\n        let user = Users.findById(uid);\n        let article = Articles.findById(article_id);\n        return Promise.all([user, article, coll]);\n    }).spread((u, a, c) => {\n        let bf = tools.in_array(a._id, c.article_id);\n        if (bf) {\n            return new Promise((resolve, reject) => {\n                resolve('exists');\n                reject(null);\n            })\n        } else {\n            c.article_id.push({ id: article_id });\n            c.include++;\n            c.article.push(a);\n            return c.save();\n        }\n    }).then(status => {\n        if (status == 'exists') {\n            output.code = 2;\n            output.ok = true;\n            output.msg = '此文章已投稿，请另选一篇文章再投。';\n            res.json(output);\n        } else {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '投稿成功';\n            res.json(output);\n        }\n    }).catch(err => {\n        console.log(err);\n        output.code = 0;\n        output.ok = false;\n        output.msg = '投稿失败';\n        res.json(output);\n    });\n});\n\nrouter.post('/updateIntroduce', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let introduce = req.body.introduce;\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, { introduce: introduce }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户个人介绍修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.get('/documents/get', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let id = req.query.id ? req.query.id : '';\n    let where = uid ? { _id: id, user_id: uid, isDel: 0 } : { _id: id, isDel: 0 };\n    Docs.findOne(where).populate([{\n            path: 'author',\n            select: 'name nick avatar'\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                path: 'author',\n                select: 'name nick avatar'\n            }, {\n                path: 'document',\n                select: 'name'\n            }]\n        }\n    ]).exec().then(doc => {\n        if (!doc) throw console.log(doc);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = doc;\n        res.json(output);\n    }).catch(err => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {};\n        res.json(output);\n    });\n})\n\nrouter.get('/collections/delete', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let id = req.query.id ? req.query.id : '';\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Collections.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '专题已删除';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '专题删除失败，请稍后再试';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/users/follow', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let follow_id = req.query.follow_id ? req.query.follow_id : '';\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (follow_id) {\n        Users.findOne({ _id: follow_id }).then(user => {\n            user.follow++;\n            user.uids.push({ id: uid });\n            user.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '关注成功';\n            res.json(output);\n            return;\n        });\n    } else {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '关注失败';\n        res.json(output);\n        return;\n    }\n\n});\n\nrouter.get('/github', (req, res, next) => {\n    let code = req.query.code;\n    let state = NowDate.getTime();\n    let getTokenOptations = {\n        uri: 'https://github.com/login/oauth/access_token',\n        qs: {\n            client_id: '5fe59ee126edbea8f3df',\n            client_secret: 'eaf2f8a2d1b0e21ebdf4ca75628a1dd6c9fdbeff',\n            code: code,\n            redirect_uri: 'https://blog.mcloudhub.com/api/github',\n            state: state,\n        },\n        headers: {\n            'User-Agent': 'Request-Promise'\n        },\n        json: true // Automatically parses the JSON string in the response\n    }\n\n    requestPromise(getTokenOptations).then(token => {\n        let getGithubUsersOptaions = {\n            uri: 'https://api.github.com/user',\n            headers: {\n                'User-Agent': 'Request-Promise',\n                'Authorization': 'token ' + token.access_token,\n            },\n            json: true\n        }\n        requestPromise(getGithubUsersOptaions).then(github => {\n            console.log(github);\n            if (github) {\n                Users.findOne({ github_id: github.id }).then(user => {\n                    if (!user) {\n                        let user_data = {\n                            name: github.name,\n                            phone: '',\n                            email: github.email,\n                            password: '',\n                            salt: '',\n                            sex: 3,\n                            nick: github.name,\n                            wechat: '',\n                            qq: '',\n                            avatar: github.avatar_url,\n                            signature: '',\n                            website: '',\n                            introduce: '',\n                            editors: 2,\n                            follow: 0,\n                            github_id: github.id,\n                            github: github,\n                            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                            isDel: 0,\n                        };\n                        new Users(user_data).save().then(add => {\n                            try {\n                                res.cookie('uid', add._id);\n                                req.session.uid = add._id;\n                                res.redirect(302, '/');\n                            } catch (e) {\n                                console.log(e);\n                                res.redirect(302, '/');\n                            }\n                        });\n                    } else {\n                        res.cookie('uid', user._id);\n                        req.session.uid = user._id;\n                        res.redirect(302, '/');\n                    }\n                });\n            }\n        }).catch(err => {\n            console.log(err);\n            res.redirect(302, '/');\n        });\n        // https://api.github.com/user?access_token=...\n        // Authorization: token OAUTH-TOKEN\n    }).catch(err => {\n        console.log(err);\n        res.redirect(302, '/');\n    });\n    // console.log(code);\n    // res.json({code:code});\n});\n\nrouter.get('/check_signin', (req, res, next) => {\n    if (req.session.uid && req.cookies.uid) {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {\n            isSignin: true\n        }\n        res.json(output);\n    } else {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {\n            isSignin: false\n        }\n        res.json(output);\n    }\n});\n\n\nrouter.get('/send_maile', (req, res, next) => {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    // nodemailer.createTestAccount((err, account) => {\n    // console.log(account);\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodemailer.createTransport({\n        host: 'smtp.163.com',\n        port: 465, // defaults to 587 is secure is false or 465 if true\n        secure: true, // true for 465, false for other ports\n        auth: {\n            user: 'thebulelife@163.com', // generated ethereal user\n            pass: 'xx19890907' // generated ethereal password\n        }\n    });\n\n    // verify connection configuration\n    transporter.verify((error, success) => {\n        if (error) {\n            console.log(error);\n        }\n    });\n\n    // var htmlstream = fs.createReadStream('');\n    let verify_code = md5(NowDate.getTime());\n    req.session.verify_code = verify_code;\n    let verify_data = sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss');\n    let href = encodeURI('https://blog.mcloudhub.com/api/verify_email?u=' + req.session.uid + '&code=' + verify_code + '&data=' + verify_data);\n    let html_str = '<a href=\"' + href + '\" style=\"font-size:16px;font-weight:700;padding:15px 40px;color:#fff;background-color:#2595ff;border-color:#0b89ff;text-decoration:none;display:inline-block;margin-bottom: 0;text-align: center;vertical-align: middle;touch-action: manipulation;cursor: pointer;background-image: none;border: 1px solid transparent;white-space: nowrap;line-height: 1.428571429;border-radius: 4px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;\">请验证您的邮箱地址</a>';\n    // setup email data with unicode symbols\n    let mailOptions = {\n        from: '\"thebulelife@163.com', // sender address\n        to: '703294267@qq.com', // list of receivers\n        subject: '邮箱验证', // Subject line\n        text: '您好：', // plain text body\n        html: html_str // html body\n    };\n\n    // send mail with defined transport object\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = null;\n        res.json(output);\n        // console.log(info);\n        // console.log('Message sent: %s', info.messageId);\n        // // Preview only available when sending through an Ethereal account\n        // console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\n\n        // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n        // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n    });\n\n    transporter.close();\n    // });\n\n});\n\nrouter.get('/verify_email', (req, res, next) => {\n    let uid = req.query.u;\n    let verify_code = req.query.code;\n    if (req.session.verify_code == verify_code) {\n        Users.findById(uid).then(user => {\n            user.email_verify = true;\n            return user.save();\n        }).then(status => {\n            res.redirect(302, '/setting/basic');\n        });\n    }\n});\n\nrouter.get('/one_by_day', (req, res, next)=>{\n    let date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD');\n    OneByDay.findOne({date:date}).then(data=>{\n        if(!data){\n            let options = {\n                uri: 'https://open.iciba.com/dsapi/',\n                qs: {\n                    file: 'json',\n                    date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD'),\n                    type: ''\n                },\n                headers: {\n                    'User-Agent': 'Request-Promise'\n                },\n                json: true // Automatically parses the JSON string in the response\n            };\n            requestPromise(options).then(response=>{\n                response.add_date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss');\n                response.date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD');\n                response.isDel = 0;\n                new OneByDay(response).save().then(status=>{\n                    res.json(status);\n                }).catch(err=>{\n                    console.log(err);\n                });\n            }).catch(err=>{\n                console.log(err);\n            });\n        }else{\n            res.json(data);\n        }\n    });\n\n});\n\nrouter.post('/applaction/new', (req, res, next)=>{\n    let app = req.body.app;\n    let user_id = req.session.uid && req.cookies.uid;\n    let app_id = NowDate.getTime();\n    let secret_key = md5(NowDate.getTime());\n    app.type = app.type == 'PC应用' ? 1 : 2;          // 将APP应用类型由数字转换成数字\n    Users.findById(user_id).then(user=>{\n        return Promise.all([user]);\n    }).spread((user)=>{\n        new Apps({\n            user_id: user._id,\n            name: app.name,\n            redirect_uri:app.redirect_uri,\n            desc: app.desc,\n            avatar: app.avatar,\n            owner:user,\n            type: app.type,               // 应用类型，1：pc，2：app\n            app_id: app_id,\n            secret_key: secret_key,\n            status: 1,             // 应用状态，1：开启，2：暂停\n            effective: true,         // 应用是否有效\n            is_del: false,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss')\n        }).save().then(status=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = status;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.post('/applaction/update', (req, res, next)=>{\n    let app = req.body.app;\n    let id = req.body.id;\n    app.type = app.type == 'PC应用' ? 1 : 2;          // 将APP应用类型由数字转换成数字\n    // console.log(app);\n    Apps.findByIdAndUpdate(id, { name:app.name, redirect_uri:app.redirect_uri, type:parseInt(app.type), desc:app.desc, avatar:app.avatar }, { new:true, runValidators:true }).then(status=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = status;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/apps/list', (req, res, next)=>{\n    let offset = parseInt(req.query.offset) || 1;\n    let num = parseInt(req.query.num) || 10;\n    let user_id = req.query.user_id;\n    Apps.count((err,count)=>{\n        Apps.find({user_id:user_id}).skip((offset ? parseInt((offset-1)*num) : parseInt(offset*num))).limit(num).then(apps=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = {count:count,list:apps};\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.get('/apps/get', (req, res, next)=>{\n    let id = req.query.id;\n    Apps.findById(id).then(app=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = app;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/group/list', (req, res, next)=>{\n    MailGroup.find().then(mail_group=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = mail_group;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/group/get', (req, res, next)=>{\n    let id = req.query.id;\n    MailGroup.findById(id).then(mail_group=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = mail_group;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.post('/mail/group/add', (req, res, next)=>{\n    let name = req.body.name;\n    MailGroup.findOne({name:name}).then(status=>{\n        if(!status){\n            new MailGroup({\n                name: name,\n                add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n                isDel: false\n            }).save().then(insert=>{\n                output.code = 1;\n                output.ok = true;\n                output.msg = 'SUCCESS';\n                output.data = insert;\n                res.json(output);\n            });\n        }else{\n            output.code = 2;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = insert;\n            res.json(output);\n        }\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/user/list', (req, res, next)=>{\n    let offset = req.query.offset ? parseInt(req.query.offset) : 1;\n    let num = req.query.num ? parseInt(req.query.num) : 20;\n    MailUser.count((err,count)=>{\n        if(err){\n            console.log(err);\n        }else{\n            MailUser.find({ isDel:false }).skip(offset ? parseInt((offset-1)*num) : offset).limit(num).populate({\n                path: 'group',\n                select: 'name'\n            }).exec().then(mail_users=>{\n                output.code = 1;\n                output.ok = true;\n                output.msg = 'SUCCESS';\n                output.data = {\n                    count: count,\n                    list: mail_users\n                };\n                res.json(output);\n            }).catch(err=>{\n                console.log(err);\n            });\n        }\n    });\n});\n\nrouter.post('/mail/user/add', (req, res, next)=>{\n    let mail_user = req.body.mail_user;\n    MailGroup.findById(mail_user.group).then(group=>{\n        new MailUser({\n            name: mail_user.name,\n            email: mail_user.email,\n            phone: mail_user.phone,\n            group: group,\n            mark: mail_user.mark,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n            isDel: false\n        }).save().then(insert=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = insert;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.get('/mail/move_user_to_group', (req, res, next)=>{\n    let user_id = req.query.user_id;\n    let id = req.query.id;\n    MailUser.findById(user_id).then(mailUser=>{\n        MailGroup.findById(id).then(group=>{\n            mailUser.group = group;\n            mailUser.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = null;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/user/delete', (req, res, next)=>{\n    let user_id = req.query.user_id;\n    MailUser.findByIdAndUpdate(user_id,{isDel:true},{ runValidators: true }).then(status=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = null;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.post('/qrcode', (req, res, next)=>{\n    let options = {\n        errorCorrectionLevel: 'H',\n        version: 2,\n        modes: 'auto'\n    };\n    QRCode.toDataURL('I am a pony!', options, function (err, url) {\n        console.log(url)\n    })\n});\n\nmodule.exports = router;\n"]}