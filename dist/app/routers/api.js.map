{"version":3,"sources":["../../../app/routers/api.js"],"names":["require","exec","fs","express","request","requestPromise","md5","sillyDateTime","multer","Geetest","nodemailer","salt","crt_token","tools","router","Router","Users","Docs","Articles","Discuss","Tags","Slide","Photos","Collections","OneByDay","Apps","MailGroup","MailUser","emailRegexp","phoneRegexp","uoloader","NowDate","Date","downloadBasecDir","output","use","req","res","next","code","msg","ok","data","get","geetest_id","geetest_key","register","err","console","error","send","find","isDel","then","docs","json","slides","uid","query","findOne","_id","usersInfo","keyWord","keyword","reg","RegExp","$or","name","$regex","users","cookies","session","offset","parseInt","num","where","user_id","populate","path","select","token","all","permissions","skip","limit","articles","forEach","item","add_date","format","doc_id","id","findById","article","watch","save","cookie","maxAge","expires","post","body","password","form","validateCode","remember","user","test","email","phone","passwordConfirm","_scrf","findData","userInfo","t_salt","sex","nick","wechat","qq","avatar","signature","website","introduce","editors","follows","follow_users","email_verify","github_id","github","html_url","type","newUsers","userAdd","photos","describe","author","clearCookie","destroy","redirect","updateUserBasic","findByIdAndUpdate","runValidators","catch","updateProfile","updateReward","rewardStatus","rewardDesc","contents","markDownText","markdownText","title","article_date","status","log","allArticles","dirname","existsSync","mkdirSync","writeFile","encoding","maxBuffer","stdout","stderr","tar_path","insert","doc_name","user_name","Promise","spread","u","d","document","watch_users","start","start_users","fork","fork_users","issue","issue_contents","isRelease","article_id","push","a","discuss","single","ext","file","mimetype","split","filename","now_timer","buffer","originalname","fullpath","size","message","url","success","icon","admins","verify","follow","subscribe","include","coll","colls","articleArr","c","bf","in_array","resolve","reject","doc","follow_id","uids","state","getTime","getTokenOptations","uri","qs","client_id","client_secret","redirect_uri","headers","getGithubUsersOptaions","access_token","user_data","avatar_url","add","e","isSignin","transporter","createTransport","host","port","secure","auth","pass","verify_code","verify_data","href","encodeURI","html_str","mailOptions","from","to","subject","text","html","sendMail","info","close","date","options","response","app","app_id","secret_key","desc","owner","effective","is_del","new","count","list","apps","mail_group","mail_users","mail_user","group","mark","mailUser","module","exports"],"mappings":"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","file":"api.js","sourcesContent":["'use strict';\n\nconst { exec } = require('child_process');\nconst fs = require('fs');\nconst express = require('express');\nconst request = require('request');\nconst requestPromise = require('request-promise');\nconst md5 = require('md5');\nconst sillyDateTime = require('silly-datetime');\nconst multer = require('multer');\nconst Geetest = require('gt3-sdk');\nconst nodemailer = require('nodemailer');\nconst salt = require('../libs/salt');\nconst crt_token = require('../libs/ctr_token');\nconst tools = require('../libs/tools');\nconst router = express.Router();\nconst Users = require('../models/Users_model');\nconst Docs = require('../models/Document_model');\nconst Articles = require('../models/Articles_model');\nconst Discuss = require('../models/Discuss_model');\nconst Tags = require('../models/Tags_model');\nconst Slide = require('../models/Slide_model');\nconst Photos = require('../models/Photos_model');\nconst Collections = require('../models/Collections_model');\nconst OneByDay = require('../models/onebyday_model');\nconst Apps = require('../models/Apps');\nconst MailGroup = require('../models/mailGroup');\nconst MailUser = require('../models/mailUser');\nconst emailRegexp = /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/;\nconst phoneRegexp = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\\\d{8}$/;\nconst uoloader = multer(); //{dest: 'uploads/'}设置dest表示上传文件的目录，如果不设置上传的文件永远在内存之中不会保存到磁盘上。在此处为了在内存中取出文件并重命名所以不设置文件上传路径\nconst NowDate = new Date();\nconst downloadBasecDir = '/Users/bluelife/www/node/blog/app/download/';\nlet output = {};\n\nrouter.use(function(req, res, next) {\n    output = {\n        code: 0,\n        msg: '',\n        ok: false,\n        data: null\n    };\n    next();\n});\n\nrouter.get('/gettest', (req, res, next) => {\n    new Geetest({\n        geetest_id: 'e46e906d776dbd41c4e72f72499ca39f',\n        geetest_key: '30b094aad22445378f7fdc01b83215bb'\n    }).register(null, (err, data) => {\n        if (err) {\n            console.error(err);\n            return;\n        }\n        res.send(data);\n        // console.log(data);\n\n        // if (!data.success) {\n        //     // 进入 fallback，如果一直进入此模式，请检查服务器到极验服务器是否可访问\n        //     // 可以通过修改 hosts 把极验服务器 api.geetest.com 指到不可访问的地址\n        //     // 为以防万一，你可以选择以下两种方式之一：\n        //     // 1. 继续使用极验提供的failback备用方案\n        //     req.session.fallback = true;\n        //     res.send(data);\n        //     // 2. 使用自己提供的备用方案\n        //     // todo\n        // } else {\n        //     // 正常模式\n        //     req.session.fallback = false;\n        //     res.send(data);\n        // }\n    });\n});\n\n/**\n * 获取所有标签\n */\nrouter.get('/docs', (req, res, next) => {\n    // console.log(Tags);\n    // res.send();\n    Docs.find({ isDel: 0 }).then(docs => {\n        if (docs) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = docs;\n            res.json(output);\n            return;\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n            return;\n        }\n    });\n});\n\n/**\n * 获取幻灯片\n */\nrouter.get('/slides', (req, res, next) => {\n    Slide.find().then(slides => {\n        if (slides) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = slides;\n            res.json(output);\n            return;\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n            return;\n        }\n    });\n})\n\nrouter.get('/getUsers', (req, res, next) => {\n    let uid = req.query.uid;\n    Users.findOne({ _id: uid, isDel: 0 }).then(usersInfo => {\n        if (usersInfo) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = usersInfo;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/allUsers', (req, res, next) => {\n    let keyWord = req.query.keyword;\n    const reg = new RegExp(keyWord, 'si') //不区分大小写\n    Users.find({\n        // name:{$regex : /keyWord/,$options: 'si'}\n        $or: [ //多条件，数组\n            { name: { $regex: reg } }\n        ]\n    }).then(users => {\n        if (users) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = users;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n})\n\nrouter.get('/getDocLists', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : (req.cookies.uid || req.session.uid);\n    let offset = req.query.offset ? parseInt(req.query.offset) : 1;\n    let num = req.query.num ? parseInt(req.query.num) : 20;\n    let where = uid ? { user_id: uid, isDel: 0 } : { isDel: 0 };\n    Docs.find(where).populate({ path: 'author', select: 'name nick avatar' }).exec().then(docs => {\n        if (docs) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = docs;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/allArticles', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : (req.cookies.token && req.cookies.uid);\n    let all = false;\n    let offset = req.query.offset ? parseInt(req.query.offset) : 0;\n    let num = req.query.num ? parseInt(req.query.num) : 10;\n    if (!uid) {\n        all = true;\n    }\n    let where = all ? { isDel: 0, permissions:1 } : { user_id: uid, isDel: 0 };\n    Articles.find(where).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num)\n        .populate([{\n            path: 'document',\n            select: 'name'\n        }, {\n            path: 'author',\n            select: 'name nick avatar'\n        }])\n        .exec()\n        .then(articles => {\n            if (articles) {\n                articles.forEach(item => {\n                    item.add_date = sillyDateTime.format(item.add_date, 'YYYY-MM-DD HH:mm:ss');\n                });\n                output.code = 1;\n                output.msg = 'success';\n                output.ok = true;\n                output.data = articles;\n                res.json(output);\n            } else {\n                output.code = 0;\n                output.msg = 'error';\n                output.ok = false;\n                output.data = {};\n                res.json(output);\n            }\n        });\n    // Articles.find(where).skip((offset == 0 ? offset : (offset - 1))).limit(num).then(alls => {\n    //     if (alls) {\n    //         alls.forEach(item => {\n    //             item.add_date = sillyDateTime.format(item.add_date, 'YYYY-MM-DD HH:mm:ss');\n    //         });\n    //         output.code = 1;\n    //         output.msg = 'success';\n    //         output.ok = true;\n    //         output.data = alls;\n    //         res.json(output);\n    //     } else {\n    //         output.code = 0;\n    //         output.msg = 'error';\n    //         output.ok = false;\n    //         output.data = {};\n    //         res.json(output);\n    //     }\n    // });\n})\n\nrouter.get('/getArticleLists', (req, res, next) => {\n    let doc_id = req.query.doc_id;\n    let offset = req.query.offset ? req.query.offset: 0;\n    let num = req.query.num ? req.query.num : 10;\n    Articles.find({\n        doc_id: doc_id,\n        isDel: 0,\n        permissions:1\n    }).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num).populate([{\n        path: 'author',\n        select: 'name'\n    }]).exec().then(articles => {\n        if (articles) {\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = articles;\n            res.json(output);\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/getArticle', (req, res, next) => {\n    let id = req.query.id;\n    Articles.findById(id).populate([{\n            path: 'document',\n            select: 'name'\n        },\n        {\n            path: 'author',\n            select: 'name nick avatar rewardStatus rewardDesc'\n        },\n        {\n            path: 'issue_contents',\n            select: 'contents add_date permissions',\n            populate: {\n                path: 'author',\n                select: 'name nick avatar'\n            }\n        }\n    ]).exec().then(article => {\n        if (article) {\n            article.add_date = sillyDateTime.format(article.add_date, 'YYYY-MM-DD HH:mm:ss');\n            if (!req.cookies[id]) {\n                //增加阅读数\n                article.watch++;\n                article.save();\n                res.cookie(id, 'on', { maxAge: 1000 * 3600 * 10, expires: 1000 * 3600 * 10 });\n            }\n            output.code = 1;\n            output.msg = 'success';\n            output.ok = true;\n            output.data = {\n                'article': article\n            };\n            res.json(output);\n\n        } else {\n            output.code = 0;\n            output.msg = 'error';\n            output.ok = false;\n            output.data = {};\n            res.json(output);\n        }\n    });\n})\n\nrouter.post('/signin', (req, res, next) => {\n    // let redirect = req.body.redirect ? req.body.redirect : '';\n    let name = req.body.name;\n    let password = req.body.password;\n    let form = req.body.form;\n    let validateCode = form == 'login' ? req.body.validateCode : '';\n    let remember = req.body.remember;\n    if (name == '') {\n        output.code = 0;\n        output.msg = '用户名不能为空';\n        res.json(output);\n        return;\n    }\n    if (password == '') {\n        output.code = 0;\n        output.msg = \"密码不能为空\";\n        res.json(output);\n        return;\n    }\n    if (form == 'login') {\n        if (validateCode == '') {\n            output.code = 0;\n            output.msg = \"请先通过验证\";\n            res.json(output);\n            return;\n        }\n    }\n    let user = {};\n    if (emailRegexp.test(name)) {\n        user.email = name;\n    } else if (phoneRegexp.test(name)) {\n        user.phone = name;\n    } else {\n        user.name = name;\n    }\n    Users.findOne(user).then(function(user) {\n        if (user) {\n            if (user.password == md5(password + user.salt)) {\n                res.cookie('uid', user._id, { maxAge: 1800000 });\n                req.session.uid = user._id;\n                if (remember) {\n                    res.cookie('name', name, { maxAge: 3600000 * 24 * 7 });\n                    res.cookie('password', password, { maxAge: 3600000 * 24 * 7 });\n                }\n                output.code = 1;\n                output.msg = \"success\";\n                output.ok = true;\n                output.data = user;\n                res.json(output);\n                return;\n            } else {\n                output.code = 0;\n                output.msg = \"登录失败，密码不正确\";\n                output.ok = false;\n                output.data = null;\n                res.json(output);\n            }\n        } else {\n            output.code = 2;\n            output.msg = \"您还没有帐号，请注册帐号\";\n            output.data = '';\n            res.json(output);\n        }\n    });\n});\n\nrouter.post('/signup', (req, res, next) => {\n    let name = req.body.name;\n    let phone = req.body.phone;\n    let password = req.body.password;\n    let passwordConfirm = req.body.passwordConfirm;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (name == '') {\n        output.code = 0;\n        output.msg = '用户名不能为空';\n        res.json(output);\n        return;\n    }\n    if (password == '') {\n        output.code = 0;\n        output.msg = \"密码不能为空\";\n        res.json(output);\n        return;\n    }\n\n    if (password != passwordConfirm) {\n        output.code = 0;\n        output.msg = \"两次输入密码不同\";\n        res.json(output);\n        return;\n    }\n\n    let findData = {};\n    if (emailRegexp.test(name)) {\n        findData.email = name;\n    } else if (phoneRegexp.test(name)) {\n        findData.phone = name;\n    } else {\n        findData.name = name;\n    }\n    Users.findOne(findData).then(userInfo => {\n        if (userInfo) {\n            output.code = 0;\n            output.ok = false;\n            output.msg = '帐号已存在，请注册新帐号';\n            output.data = null;\n            res.json(output);\n        } else {\n            let t_salt = salt();\n            let user = {\n                name: '',\n                phone: '',\n                email: '',\n                password: '',\n                salt: '',\n                sex: 3,\n                nick: '',\n                wechat: '',\n                qq: '',\n                avatar: '',\n                signature: '',\n                website: '',\n                introduce: '',\n                editors: 2,\n                follows: 0,\n                follow_users: [],\n                email_verify: false,\n                github_id: '',\n                github: {\n                    html_url: ''\n                },\n                add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                isDel: 0,\n            };\n            if (emailRegexp.test(name)) {\n                user.email = name;\n                user.type = 3;\n            } else if (phoneRegexp.test(name)) {\n                user.phone = name;\n                user.type = 2;\n            } else {\n                user.name = name;\n                user.type = 1;\n            }\n            user.name = name;\n            user.salt = t_salt;\n            user.password = md5(password + t_salt);\n            let newUsers = new Users(user);\n            return newUsers.save();\n        }\n    }).then(userAdd => {\n        new Docs({\n            user_id: userAdd._id,\n            name: '随笔',\n            photos: '',\n            describe: '',\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            author: userAdd,\n            article: [],\n            permissions:1,\n            isDel: 0,\n        }).save();\n        if (userAdd) {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '注册成功';\n            output.data = { id: userAdd._id };\n            res.json(output);\n        } else {\n            output.code = 2;\n            output.ok = true;\n            output.msg = '注册失败';\n            output.data = null;\n            res.json(output);\n        }\n    });\n});\n\nrouter.get('/signout', (req, res, next) => {\n    res.clearCookie('uid'); // 清除cookie中的uid\n    req.session.destroy(() => { // 销毁session中的uid\n        res.redirect(302, '/login');\n    });\n    // console.log(store);\n    // req.session.store.clear(()=>{\n    //     res.redirect(302,'/login');\n    // })\n});\n\nrouter.post('/updateUserBasic', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateUserBasic = {\n        nick: req.body.nick,\n        phone: req.body.phone,\n        email: req.body.email,\n        editors: req.body.editors,\n        avatar: req.body.avatar,\n        qq: req.body.qq,\n        wechat: req.body.wechat,\n        github: req.body.github\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateUserBasic, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户基础信息修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/changeProfile', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateProfile = {\n        sex: req.body.sex,\n        introduce: req.body.introduce,\n        website: req.body.website\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateProfile, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户个人资料修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/changeReward', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let updateReward = {\n        rewardStatus: req.body.rewardStatus,\n        rewardDesc: req.body.rewardDesc\n    };\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, updateReward, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '赞赏修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.post('/saveArticle', (req, res, next) => {\n    let id = req.body.id;\n    let contents = req.body.contents;\n    let markDownText = req.body.markdownText ? req.body.markdownText : null;\n    let title = req.body.title;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    let article_date = {\n        contents: contents,\n        title: title\n    };\n    if (markDownText) {\n        article_date.markDownText = markDownText;\n    }\n\n    Articles.findByIdAndUpdate(id, { title: title, contents: contents, markDownText: markDownText }, { runValidators: true }).then(status => {\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章保存成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        console.log(err);\n    });\n});\n\nrouter.get('/article/set_permissions',(req, res, next)=>{\n    let id = req.query.id;\n    let type = req.query.type;\n    Articles.findByIdAndUpdate(id, {permissions: type}, {runValidators: true}).then(status=>{\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章权限设置成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章权限设置失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/downloadAllArticles', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : req.cookies.uid;\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '未登陆';\n        output.data = {};\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    let allArticles = Articles.find({ uid: uid }).then(articles => {\n        return articles;\n    });\n    let dirname = downloadBasecDir + '/' + uid;\n    fs.existsSync(dirname) || fs.mkdirSync(dirname); // 下载目录不存在创建目录\n    allArticles.then(all => {\n        all.forEach(article => {\n            fs.writeFile('/Users/bluelife/www/node/blog/app/download/' + uid + '/' + article.title + '.md', article.markDownText, 'utf8', err => {\n                if (err) throw err;\n            });\n        });\n        exec('tar -czf ' + dirname + '.tar.gz' + ' ' + dirname, { encoding: 'utf8', maxBuffer: parseInt(200 * 1024) }, (error, stdout, stderr) => {\n            if (error) throw error;\n            output.code = 1;\n            output.ok = true;\n            output.msg = '所有文章打包下载完成';\n            output.data = { tar_path: 'http://blog.mcloudhub.com/download/' + uid + '.tar.gz' };\n            res.json(output);\n        });\n    });\n})\n\nrouter.post('/newDocument', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let name = req.body.name;\n    Users.findById(uid).then(user => {\n        new Docs({\n            user_id: user._id,\n            name: name,\n            photos: '',\n            describe: '',\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n            author: user,\n            article: [],\n            permissions:1,\n            isDel: 0,\n        }).save().then(insert => {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '文集创建成功';\n            output.data = { id: insert._id };\n            res.json(output);\n        });\n    });\n});\n\nrouter.post('/updateDocumentName', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let id = req.body.id;\n    let name = req.body.name;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findByIdAndUpdate(id, { name: name }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文集名称修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文集名称修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/newArticle', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let doc_id = req.body.doc_id;\n    let doc_name = req.body.doc_name;\n    let user_name = req.body.user_name;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findById(doc_id).then(docs => {\n        let users = Users.findById(uid);\n        return Promise.all([users, docs]);\n    }).spread((u, d) => {\n        new Articles({\n            user_id: u._id,\n            doc_id: d._id,\n            author: u, // 文章所属用户\n            document: d, // 文章所属文集\n            title: sillyDateTime.format(new Date(), 'YYYY-MMM-DD'), // 文章标题\n            describe: '', // 文章描述\n            photos: '', // 文章图片\n            contents: '', // 文章内容\n            markDownText: '',\n            watch: 0,\n            watch_users: [],\n            start: 0,\n            start_users: [],\n            fork: 0,\n            fork_users: [],\n            issue: 0,\n            issue_contents: [],\n            follows: 0,\n            follow_users: [],\n            permissions:1,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            isRelease: 0,\n            isDel: 0,\n        }).save().then(insert => {\n            d.article_id.push({ id: insert._id });\n            d.article.push(insert);\n            d.save();\n            u.article.push(insert);\n            u.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '文章创建成功';\n            output.data = insert;\n            res.json(output);\n        }).catch(err => {\n            console.log(err);\n            output.code = 0;\n            output.ok = false;\n            output.msg = '文章创建失败';\n            output.data = {};\n            res.json(output);\n        });\n    })\n});\n\nrouter.get('/deleteDoc', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Docs.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文集删除成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文集删除失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/releaseArticle', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { isRelease: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章已发布';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章已失败';\n        output.data = {};\n        res.json(output);\n    })\n});\n\nrouter.get('/deleteArticle', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章删除成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章删除失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/changeAticleTitle', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let id = req.body.id;\n    let title = req.body.title;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Articles.findByIdAndUpdate(id, { title: title }, { runValidators: true }).then(status => {\n        if (!status) throw console.log(status);\n        output.code = 1;\n        output.ok = true;\n        output.msg = '文章修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '文章修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.post('/postDiscuss', (req, res, next) => {\n    let id = req.body.id;\n    let contents = req.body.contents;\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let permissions = req.body.permissions ? parseInt(req.body.permissions) : 1;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Articles.findById(id).then(article => {\n        let users = Users.findById(uid);\n        return Promise.all([users, article]);\n    }).spread((u, a) => {\n        new Discuss({\n            uid: u._id,\n            article_id: a._id,\n            author: u,\n            article: a,\n            contents: contents,\n            permissions: permissions,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n            isDel: 0\n        }).save().then(status => {\n            a.issue++;\n            a.issue_contents.push(status);\n            a.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '评论成功';\n            output.data = {};\n            res.json(output);\n        });\n    });\n});\n\nrouter.get('/getDiscuss', (req, res, next) => {\n    let id = req.query.id;\n    Discuss.find({ article_id: id }).then(discuss => {\n        if (!discuss) throw console.log(discuss);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = discuss;\n        res.json(output);\n    });\n});\n\nrouter.post('/uploader', uoloader.single('editormd-image-file'), (req, res, next) => {\n    let uid = req.session.uid && req.cookies.uid;\n    let ext = req.file.mimetype.split('/')[1];\n    let filename = sillyDateTime.format(new Date(), 'YYYYMMMDDHHmmss') + '_' + crt_token() + '.' + ext;\n    let now_timer = sillyDateTime.format(new Date(), 'YYYYMMMDD');\n    let dirname = '/Users/bluelife/www/node/blog/app/public/images/uploads/' + now_timer + '/';\n    fs.existsSync(dirname) || fs.mkdirSync(dirname); // 目录不存在创建目录\n    fs.writeFile(dirname + filename, req.file.buffer, err => {\n        if (!err) {\n            Users.findById(uid).then(user => {\n                new Photos({\n                    user_id: user._id,\n                    author: user,\n                    originalname: req.file.originalname,\n                    filename: filename,\n                    path: dirname,\n                    fullpath: dirname + filename,\n                    encoding: req.file.encoding,\n                    mimetype: req.file.mimetype,\n                    size: req.file.size,\n                    add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                    isDel: 0\n                }).save().then(insert => {\n                    if (!insert) throw console.log(insert);\n                    res.json({\n                        message: '图片上传成功',\n                        url: 'https://blog.mcloudhub.com/public/images/uploads/' + now_timer + '/' + filename,\n                        success: 1\n                    });\n                });\n            });\n        }\n    });\n});\n\nrouter.post('/collection/new', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let icon = req.body.icon;\n    let name = req.body.name;\n    let describe = req.body.describe;\n    let push = req.body.push;\n    let admins = req.body.admins;\n    let verify = req.body.verify;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Users.findById(uid).then(user => {\n        new Collections({\n            user_id: user._id,\n            author: user,\n            article: [],\n            name: name, // 集合名称\n            type: 1, // 集合类型\n            icon: icon, // 集合图标\n            describe: describe, // 集合描述\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'), // 集合添加时间,\n            admins: admins, // 其他管理员\n            push: push, // 是否允许投稿\n            follow: 0, //关注数\n            subscribe: [],\n            include: 0, //收录文章数\n            verify: verify, // 是否需要审核\n            isDel: 0\n        }).save().then(coll => {\n            if (!coll) {\n                output.code = 0;\n                output.ok = false;\n                output.msg = '文集添加失败';\n                output.data = {};\n                res.json(output);\n            } else {\n                output.code = 1;\n                output.ok = true;\n                output.msg = '文集添加成功';\n                output.data = coll;\n                res.json(output);\n            }\n\n        });\n    });\n});\n\nrouter.post('/collection/update', (req, res, next) => {\n    let id = req.body.id;\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let icon = req.body.icon;\n    let name = req.body.name;\n    let describe = req.body.describe;\n    let push = req.body.push;\n    let admins = req.body.admins;\n    let verify = req.body.verify;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '您尚未登录';\n        res.json(output);\n        return;\n    }\n    Collections.findByIdAndUpdate(id, {\n        icon: icon,\n        name: name,\n        describe: describe,\n        push: push,\n        verify: verify,\n        admins: admins\n    }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '专题已修改';\n        output.data = status;\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '专题修改失败';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/get_collections', (req, res, next) => {\n    let offset = req.query.offset ? parseInt(req.query.offset) : 0;\n    let num = req.query.num ? parseInt(req.query.num) : 10;\n    let where = { isDel: 0 };\n    Collections.find(where).skip((offset ? (parseInt(offset-1)*num) :offset)).limit(num).populate([{\n            path: 'author',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'admins',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'subscribe',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                path: 'author',\n                select: 'name nick avatar'\n            }, {\n                path: 'document',\n                select: 'name'\n            }]\n        }\n    ]).exec().then(colls => {\n        if (!colls) throw console.log(colls);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = colls;\n        res.json(output);\n    });\n});\n\nrouter.get('/getCollectionById', (req, res, next) => {\n    let id = req.query.id;\n    let articleArr = [];\n    Collections.findOne({ _id: id, isDel: 0 }).populate([{\n            path: 'author',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'admins',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'subscribe',\n            select: 'name avatar nick',\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                    path: 'author',\n                    select: 'name nick avatar'\n                },\n                {\n                    path: 'document',\n                    select: 'name'\n                }\n            ]\n        }\n    ]).exec().then(coll => {\n        if (!coll) throw console.log(coll);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = coll;\n        res.json(output);\n    }).catch(err => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = [];\n        res.json(output);\n    });\n});\n\nrouter.get('/collectionFollow', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n\n    Collections.findById(id).then(coll => {\n        let user = Users.findById(uid);\n        return Promise.all([user, coll]);\n    }).spread((u, c) => {\n        c.follow++;\n        c.subscribe = u;\n        return c.save();\n    }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '关注成功';\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '关注失败';\n        res.json(output);\n    });\n});\n\nrouter.get('/articlePush', (req, res, next) => {\n    let uid = req.query.uid;\n    let id = req.query.id;\n    let article_id = req.query.article_id;\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Collections.findById(id).then(coll => {\n        let user = Users.findById(uid);\n        let article = Articles.findById(article_id);\n        return Promise.all([user, article, coll]);\n    }).spread((u, a, c) => {\n        let bf = tools.in_array(a._id, c.article_id);\n        if (bf) {\n            return new Promise((resolve, reject) => {\n                resolve('exists');\n                reject(null);\n            })\n        } else {\n            c.article_id.push({ id: article_id });\n            c.include++;\n            c.article.push(a);\n            return c.save();\n        }\n    }).then(status => {\n        if (status == 'exists') {\n            output.code = 2;\n            output.ok = true;\n            output.msg = '此文章已投稿，请另选一篇文章再投。';\n            res.json(output);\n        } else {\n            output.code = 1;\n            output.ok = true;\n            output.msg = '投稿成功';\n            res.json(output);\n        }\n    }).catch(err => {\n        console.log(err);\n        output.code = 0;\n        output.ok = false;\n        output.msg = '投稿失败';\n        res.json(output);\n    });\n});\n\nrouter.post('/updateIntroduce', (req, res, next) => {\n    let uid = req.body.uid ? req.body.uid : req.session.uid;\n    let introduce = req.body.introduce;\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Users.findByIdAndUpdate(uid, { introduce: introduce }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '用户个人介绍修改成功';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        if (err) throw err;\n    });\n});\n\nrouter.get('/documents/get', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let id = req.query.id ? req.query.id : '';\n    let where = uid ? { _id: id, user_id: uid, isDel: 0 } : { _id: id, isDel: 0 };\n    Docs.findOne(where).populate([{\n            path: 'author',\n            select: 'name nick avatar'\n        },\n        {\n            path: 'article',\n            select: 'title contents markDownText watch start fork issue follows',\n            populate: [{\n                path: 'author',\n                select: 'name nick avatar'\n            }, {\n                path: 'document',\n                select: 'name'\n            }]\n        }\n    ]).exec().then(doc => {\n        if (!doc) throw console.log(doc);\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = doc;\n        res.json(output);\n    }).catch(err => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {};\n        res.json(output);\n    });\n})\n\nrouter.get('/collections/delete', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let id = req.query.id ? req.query.id : '';\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    Collections.findByIdAndUpdate(id, { isDel: 1 }, { runValidators: true }).then(status => {\n        output.code = 1;\n        output.ok = true;\n        output.msg = '专题已删除';\n        output.data = {};\n        res.json(output);\n    }).catch(err => {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '专题删除失败，请稍后再试';\n        output.data = {};\n        res.json(output);\n    });\n});\n\nrouter.get('/users/follow', (req, res, next) => {\n    let uid = req.query.uid ? req.query.uid : '';\n    let follow_id = req.query.follow_id ? req.query.follow_id : '';\n    if (req.session.uid == '') {\n        output.code = 0;\n        output.msg = '未登陆';\n        res.json(output);\n        return;\n    }\n    if (req.cookies._scrf == '') {\n        output.code = 0;\n        output.msg = '非法请求';\n        res.json(output);\n        return;\n    }\n    if (follow_id) {\n        Users.findOne({ _id: follow_id }).then(user => {\n            user.follow++;\n            user.uids.push({ id: uid });\n            user.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = '关注成功';\n            res.json(output);\n            return;\n        });\n    } else {\n        output.code = 0;\n        output.ok = false;\n        output.msg = '关注失败';\n        res.json(output);\n        return;\n    }\n\n});\n\nrouter.get('/github', (req, res, next) => {\n    let code = req.query.code;\n    let state = NowDate.getTime();\n    let getTokenOptations = {\n        uri: 'https://github.com/login/oauth/access_token',\n        qs: {\n            client_id: '5fe59ee126edbea8f3df',\n            client_secret: 'eaf2f8a2d1b0e21ebdf4ca75628a1dd6c9fdbeff',\n            code: code,\n            redirect_uri: 'https://blog.mcloudhub.com/api/github',\n            state: state,\n        },\n        headers: {\n            'User-Agent': 'Request-Promise'\n        },\n        json: true // Automatically parses the JSON string in the response\n    }\n\n    requestPromise(getTokenOptations).then(token => {\n        let getGithubUsersOptaions = {\n            uri: 'https://api.github.com/user',\n            headers: {\n                'User-Agent': 'Request-Promise',\n                'Authorization': 'token ' + token.access_token,\n            },\n            json: true\n        }\n        requestPromise(getGithubUsersOptaions).then(github => {\n            console.log(github);\n            if (github) {\n                Users.findOne({ github_id: github.id }).then(user => {\n                    if (!user) {\n                        let user_data = {\n                            name: github.name,\n                            phone: '',\n                            email: github.email,\n                            password: '',\n                            salt: '',\n                            sex: 3,\n                            nick: github.name,\n                            wechat: '',\n                            qq: '',\n                            avatar: github.avatar_url,\n                            signature: '',\n                            website: '',\n                            introduce: '',\n                            editors: 2,\n                            follow: 0,\n                            github_id: github.id,\n                            github: github,\n                            add_date: sillyDateTime.format(new Date(), 'YYYY-MM-DD HH:mm:ss'),\n                            isDel: 0,\n                        };\n                        new Users(user_data).save().then(add => {\n                            try {\n                                res.cookie('uid', add._id);\n                                req.session.uid = add._id;\n                                res.redirect(302, '/');\n                            } catch (e) {\n                                console.log(e);\n                                res.redirect(302, '/');\n                            }\n                        });\n                    } else {\n                        res.cookie('uid', user._id);\n                        req.session.uid = user._id;\n                        res.redirect(302, '/');\n                    }\n                });\n            }\n        }).catch(err => {\n            console.log(err);\n            res.redirect(302, '/');\n        });\n        // https://api.github.com/user?access_token=...\n        // Authorization: token OAUTH-TOKEN\n    }).catch(err => {\n        console.log(err);\n        res.redirect(302, '/');\n    });\n    // console.log(code);\n    // res.json({code:code});\n});\n\nrouter.get('/check_signin', (req, res, next) => {\n    if (req.session.uid && req.cookies.uid) {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {\n            isSignin: true\n        }\n        res.json(output);\n    } else {\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = {\n            isSignin: false\n        }\n        res.json(output);\n    }\n});\n\n\nrouter.get('/send_maile', (req, res, next) => {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    // nodemailer.createTestAccount((err, account) => {\n    // console.log(account);\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodemailer.createTransport({\n        host: 'smtp.163.com',\n        port: 465, // defaults to 587 is secure is false or 465 if true\n        secure: true, // true for 465, false for other ports\n        auth: {\n            user: 'thebulelife@163.com', // generated ethereal user\n            pass: 'xx19890907' // generated ethereal password\n        }\n    });\n\n    // verify connection configuration\n    transporter.verify((error, success) => {\n        if (error) {\n            console.log(error);\n        }\n    });\n\n    // var htmlstream = fs.createReadStream('');\n    let verify_code = md5(NowDate.getTime());\n    req.session.verify_code = verify_code;\n    let verify_data = sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss');\n    let href = encodeURI('https://blog.mcloudhub.com/api/verify_email?u=' + req.session.uid + '&code=' + verify_code + '&data=' + verify_data);\n    let html_str = '<a href=\"' + href + '\" style=\"font-size:16px;font-weight:700;padding:15px 40px;color:#fff;background-color:#2595ff;border-color:#0b89ff;text-decoration:none;display:inline-block;margin-bottom: 0;text-align: center;vertical-align: middle;touch-action: manipulation;cursor: pointer;background-image: none;border: 1px solid transparent;white-space: nowrap;line-height: 1.428571429;border-radius: 4px;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;\">请验证您的邮箱地址</a>';\n    // setup email data with unicode symbols\n    let mailOptions = {\n        from: '\"thebulelife@163.com', // sender address\n        to: '703294267@qq.com', // list of receivers\n        subject: '邮箱验证', // Subject line\n        text: '您好：', // plain text body\n        html: html_str // html body\n    };\n\n    // send mail with defined transport object\n    transporter.sendMail(mailOptions, (error, info) => {\n        if (error) {\n            return console.log(error);\n        }\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = null;\n        res.json(output);\n        // console.log(info);\n        // console.log('Message sent: %s', info.messageId);\n        // // Preview only available when sending through an Ethereal account\n        // console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\n\n        // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n        // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n    });\n\n    transporter.close();\n    // });\n\n});\n\nrouter.get('/verify_email', (req, res, next) => {\n    let uid = req.query.u;\n    let verify_code = req.query.code;\n    if (req.session.verify_code == verify_code) {\n        Users.findById(uid).then(user => {\n            user.email_verify = true;\n            return user.save();\n        }).then(status => {\n            res.redirect(302, '/setting/basic');\n        });\n    }\n});\n\nrouter.get('/one_by_day', (req, res, next)=>{\n    let date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD');\n    OneByDay.findOne({date:date}).then(data=>{\n        if(!data){\n            let options = {\n                uri: 'https://open.iciba.com/dsapi/',\n                qs: {\n                    file: 'json',\n                    date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD'),\n                    type: ''\n                },\n                headers: {\n                    'User-Agent': 'Request-Promise'\n                },\n                json: true // Automatically parses the JSON string in the response\n            };\n            requestPromise(options).then(response=>{\n                response.add_date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss');\n                response.date = sillyDateTime.format(new Date(), 'YYYY-MMM-DD');\n                response.isDel = 0;\n                new OneByDay(response).save().then(status=>{\n                    res.json(status);\n                }).catch(err=>{\n                    console.log(err);\n                });\n            }).catch(err=>{\n                console.log(err);\n            });\n        }else{\n            res.json(data);\n        }\n    });\n\n});\n\nrouter.post('/applaction/new', (req, res, next)=>{\n    let app = req.body.app;\n    let user_id = req.session.uid && req.cookies.uid;\n    let app_id = NowDate.getTime();\n    let secret_key = md5(NowDate.getTime());\n    app.type = app.type == 'PC应用' ? 1 : 2;          // 将APP应用类型由数字转换成数字\n    Users.findById(user_id).then(user=>{\n        return Promise.all([user]);\n    }).spread((user)=>{\n        new Apps({\n            user_id: user._id,\n            name: app.name,\n            desc: app.desc,\n            avatar: app.avatar,\n            owner:user,\n            type: app.type,               // 应用类型，1：pc，2：app\n            app_id: app_id,\n            secret_key: secret_key,\n            status: 1,             // 应用状态，1：开启，2：暂停\n            effective: true,         // 应用是否有效\n            is_del: false,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss')\n        }).save().then(status=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = status;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.post('/applaction/update', (req, res, next)=>{\n    let app = req.body.app;\n    let id = req.body.id;\n    console.log(app);\n    Apps.findByIdAndUpdate(id, {name:app.name,type:parseInt(app.type),desc:app.desc,avatar:app.avatar}, {new:true, runValidators:true}).then(status=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = status;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/apps/list', (req, res, next)=>{\n    let offset = parseInt(req.query.offset) || 1;\n    let num = parseInt(req.query.num) || 10;\n    let user_id = req.query.user_id;\n    Apps.count((err,count)=>{\n        Apps.find({user_id:user_id}).skip((offset ? parseInt((offset-1)*num) : parseInt(offset*num))).limit(num).then(apps=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = {count:count,list:apps};\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.get('/apps/get', (req, res, next)=>{\n    let id = req.query.id;\n    Apps.findById(id).then(app=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = app;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/group/list', (req, res, next)=>{\n    MailGroup.find().then(mail_group=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = mail_group;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/group/get', (req, res, next)=>{\n    let id = req.query.id;\n    MailGroup.findById(id).then(mail_group=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = mail_group;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.post('/mail/group/add', (req, res, next)=>{\n    let name = req.body.name;\n    MailGroup.findOne({name:name}).then(status=>{\n        if(!status){\n            new MailGroup({\n                name: name,\n                add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n                isDel: false\n            }).save().then(insert=>{\n                output.code = 1;\n                output.ok = true;\n                output.msg = 'SUCCESS';\n                output.data = insert;\n                res.json(output);\n            });\n        }else{\n            output.code = 2;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = insert;\n            res.json(output);\n        }\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/user/list', (req, res, next)=>{\n    let offset = req.query.offset ? parseInt(req.query.offset) : 1;\n    let num = req.query.num ? parseInt(req.query.num) : 20;\n    MailUser.count((err,count)=>{\n        if(err){\n            console.log(err);\n        }else{\n            MailUser.find({ isDel:false }).skip(offset ? parseInt((offset-1)*num) : offset).limit(num).populate({\n                path: 'group',\n                select: 'name'\n            }).exec().then(mail_users=>{\n                output.code = 1;\n                output.ok = true;\n                output.msg = 'SUCCESS';\n                output.data = {\n                    count: count,\n                    list: mail_users\n                };\n                res.json(output);\n            }).catch(err=>{\n                console.log(err);\n            });\n        }\n    });\n});\n\nrouter.post('/mail/user/add', (req, res, next)=>{\n    let mail_user = req.body.mail_user;\n    MailGroup.findById(mail_user.group).then(group=>{\n        new MailUser({\n            name: mail_user.name,\n            email: mail_user.email,\n            phone: mail_user.phone,\n            group: group,\n            mark: mail_user.mark,\n            add_date: sillyDateTime.format(new Date(), 'YYYY-MMM-DD HH:mm:ss'),\n            isDel: false\n        }).save().then(insert=>{\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = insert;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    });\n});\n\nrouter.get('/mail/move_user_to_group', (req, res, next)=>{\n    let user_id = req.query.user_id;\n    let id = req.query.id;\n    MailUser.findById(user_id).then(mailUser=>{\n        MailGroup.findById(id).then(group=>{\n            mailUser.group = group;\n            mailUser.save();\n            output.code = 1;\n            output.ok = true;\n            output.msg = 'SUCCESS';\n            output.data = null;\n            res.json(output);\n        }).catch(err=>{\n            console.log(err);\n        });\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nrouter.get('/mail/user/delete', (req, res, next)=>{\n    let user_id = req.query.user_id;\n    MailUser.findByIdAndUpdate(user_id,{isDel:true},{ runValidators: true }).then(status=>{\n        output.code = 1;\n        output.ok = true;\n        output.msg = 'SUCCESS';\n        output.data = null;\n        res.json(output);\n    }).catch(err=>{\n        console.log(err);\n    });\n});\n\nmodule.exports = router;\n"]}