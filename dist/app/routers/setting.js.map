{"version":3,"sources":["../../../app/routers/setting.js"],"names":["express","require","ctr_token","router","Router","get","req","res","nex","redirect_uri","protocol","originalUrl","session","uid","cookies","render","page_type","title","redirect","next","module","exports"],"mappings":"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","file":"setting.js","sourcesContent":["const express = require('express');\nconst ctr_token = require('../libs/ctr_token');\nconst router = express.Router();\n\nrouter.get('/basic', (req, res, nex) => {\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/basic', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_basic',\n            title: '用户设置'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/profile', (req, res, nex) => {\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/profile', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_profile',\n            title: '用户设置'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/blogs', (req, res, nex) => {\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/blogs', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_blogs',\n            title: '用户设置'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/reward', (req, res, nex) => {\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/reward', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_reward',\n            title: '用户设置'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/misc', (req, res, nex) => {\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/misc', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_misc',\n            title: '用户设置'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/applactions', (req, res, next)=>{\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/applactions', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_applactions',\n            title: '我的应用'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n});\n\nrouter.get('/applactions/new', (req, res, next)=>{\n    let redirect_uri = req.protocol + '://' + req.get('host') + req.originalUrl;\n    if (req.session.uid && req.cookies.uid) {\n        res.render('../views/setting/app_new', {\n            uid: req.session.uid && req.cookies.uid,\n            page_type: 'setting_applactions',\n            title: '我的应用'\n        });\n    } else {\n        res.redirect(302, '/login?redirect_uri=' + redirect_uri);\n    }\n})\n\n\nmodule.exports = router;\n"]}